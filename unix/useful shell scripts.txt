<html>
<head>
<meta http-equiv="Content-Type" content="text/html">
<title>
Excite UK Inbox: Message
</title>
<script language=javascript>
<!--
function confirmEmptyTrash() {
var win=open("/ExciteMail/emptyTrash/rs=20951;aff=3AD53470;ck=1870033780/?action=dialog", "empty_trash", "toolbar=no,width=300,height=150");
win.focus();
}
// -->
</script>
<script language=javascript>
<!--

function openAddFolder() {
    win = open("/ExciteMail/addFolder/rs=19061;aff=3AD53470;ck=1234757988/", "add_folders", "resizable=1,toolbar=no,width=450,height=170");
}
function openRenameFolder() {
    win = open("/ExciteMail/renameFolder/rs=9496;aff=3AD53470;ck=468994866/", "rename_folders", "resizable=1,toolbar=no,width=450,height=290");
}
function openDeleteFolder() {
    win = open("/ExciteMail/deleteFolder/rs=13591;aff=3AD53470;ck=549240954/", "delete_folders", "resizable=1,toolbar=no,width=450,height=250");
}
// -->
</script>

<script language=javascript>
<!--
function goToFolder() {
  var folderSel = document.gofolders.elements[0];
  var addIndex = folderSel.length - 3;
  var renameIndex = folderSel.length - 2;
  var deleteIndex = folderSel.length - 1;
  if (folderSel.selectedIndex == addIndex) {
    openAddFolder();
  }
  else if (folderSel.selectedIndex == renameIndex) {
    openRenameFolder();
  }
  else if (folderSel.selectedIndex == deleteIndex) {
    openDeleteFolder();
  }
  else {
    document.gofolders.submit();
    return;
  }
  for (var i=0; i<folderSel.length; i++) {
    if (folderSel.options[i].defaultSelected) {
      folderSel.selectedIndex = i;
	   break;
    }
  }
}
// -->
</script>

<script language="JavaScript">
numPopups = 0;
popupNames = new Array();
popupReferences = new Array();
function AddPopup(name, reference) {
refIndex = popupNames[name];
if (refIndex == null) {
refIndex = numPopups++;
popupNames[name] = refIndex;
}
popupReferences[refIndex] = reference;
}
function ClosePopups() {
for (var i=0; i < popupReferences.length; i++) {
curRef = popupReferences[i]
if (curRef != null && !curRef.closed) {
curRef.close();
}
popupReferences[i] = null;
}
}
function FocusPopup(name) {
refIndex = popupNames[name];
if (refIndex != null && ! popupReferences[refIndex].closed) {
popupReferences[refIndex].focus();
return true;
}
return false;
}
</script>
<script language=javascript>
<!--
window.name = "Mex2";
// -->
</script>

<script language=javascript>
<!--
function fetchPop() {
var win=open("/ExciteMail/popfetch/rs=21116;aff=3AD53470;ck=2018634422/", "fetch_pop", "toolbar=no,width=440,resizable=1,height=180");
win.focus();
}
// -->
</script>
<LINK REL="SHORTCUT ICON" HREF="http://imgbox.eimg.com/img/favicon.ico">
<script language=javascript>
<!--
function moveToFolder(select) {
  if (select.selectedIndex == select.length - 3) {
      openAddFolder();
  }
  else if (select.selectedIndex == select.length - 2) {
      openRenameFolder();
  }
  else if (select.selectedIndex == select.length - 1) {
      openDeleteFolder();
  }
}
// -->
</script>

<script language=javascript>
<!--
function downloadPopup() {
var win=open("/ExciteMail/message/rs=23372;aff=3AD53470;ck=702157147/uid=1052;sort=-received;download=true/1052.html", "download_popup", "toolbar=no,width=500,height=500,resizable,scrollbars,dependent");
  win.focus();
}
// -->
</script>
<script language=javascript>
<!--
function addEntryPopup(purl) {
var win=window.open(purl,"add_entry","toolbar=no,height=400,width=680,resizable,scrollbars,dependent");
win.focus();
}
//-->
</script>

</head>
<body onUnload="ClosePopups()" bgcolor="#ffffff">


<center>

<map name="inboxheader">
<area shape=rect coords="2,1,119,50"
href="http://www.excite.co.uk">
<area shape=rect coords="125,42,240,55"
href="/ExciteMail/folder/rs=19340;aff=3AD53470;ck=1486301130/fl=INBOX/folder.html">
<area shape=rect coords="120,1,600,55"
href="/ExciteMail/folder/rs=37983;aff=3AD53470;ck=1754646945/fl=INBOX/folder.html">
</map>
<table border=0 cellspacing=0 cellpadding=0>
<tr valign=bottom><td align=center><a href="/ExciteMail/folder/rs=29770;aff=3AD53470;ck=189372120/fl=INBOX/folder.html"><img src="http://imgbox.eimg.com/img/uk/uk-hdr2.gif" width=579 height=59 border=0 usemap="#inboxheader" alt="header"></a></td>
<td nowrap><font size=-1 face=geneva,arial><a href="http://www.excite.co.uk">Excite UK</a></font> | <font size=-1 face=geneva,arial><a href="/ExciteMail/folder/rs=37983;aff=3AD53470;ck=1754646945/fl=INBOX/folder.html">Inbox</a></font></td></tr></table>
<br>

<!-- DoubleClick Start --><A target="_new" href="http://ad.uk.doubleclick.net/jump/excite_uk.excite.com/inbox/Channels/mail=XX"><IMG SRC="http://ad.uk.doubleclick.net/ad/excite_uk.excite.com/inbox/Channels/mail=XX" WIDTH="468" HEIGHT="60" ISMAP ALT ="Click Here." BORDER="1" ALIGN="top" NATURALSIZEFLAG = 0><BR><center><FONT FACE=VERDANA,ARIAL,HELVETICA SIZE=-2>Click Here!</FONT></center></A> <!-- DoubleClick Stop -->
<br>



<p>

<table border=0 width="98%" cellpadding=3 cellspacing=0>
<tr><td align=center  bgcolor="#cccccc" nowrap >
<font face=geneva,arial size=-1>
<font face=geneva,arial size=-1><b><a href="http://excite.daclogo.com/uk/">**Get Cool Ringtones and Icons on Your Mobile**</a> </font></b>
</font></td></tr></table>
<table height=5 border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr></table>

</center>
<center><table bgcolor="#OO3399" cellpadding=3 cellspacing=0 border=0 width="98%">
<tr valign=top>
<td width=140 align=center><table bgcolor="#ffffff" cellpadding=2 cellspacing=1 border=0 width=140>
<tr valign=top>
<td>
<font face=geneva,arial color="#000000" size=-1><b>Hi dieplee!</b><br>
<a href="http://reg.excite.com/mps/manage/?pname=mail&brand=uk_excite&targeturl=http://www.excite.co.uk"><font size=-2 color="#663399">Update Profile</font></a><br><a href="http://reg.excite.com/mps/relocate_signout?pname=mail&amp;targeturl=http%3A%2F%2Finbox.excite.co.uk%2F&amp;brand=uk_excite"><font size=-2 color="#663399">Sign Out</font></a></td>
</tr>
</table>
<small><br></small>
<table bgcolor="#ffffff" cellpadding=2 cellspacing=0 border=0 width=140>
<tr bgcolor="#999999">
<td><font size=-1 face=geneva,arial color="#ffffff"><b>
Controls
</b></font>
</td>
</tr>
<tr>
<td>
<font face=geneva,arial color="#000000" size=-1>
<a href="/ExciteMail/folder/rs=5725;aff=3AD53470;ck=253885872/fl=INBOX;sort=-received;start=2/folder.html"><font size=-1 color="#663399">Back to Inbox</font></a><br>
<a href="/ExciteMail/compose/rs=14930;aff=3AD53470;ck=1574052642/start=0"><font size=-1 color="#663399">Compose Message</font></a><br>
<a href="/javascript_only" onClick="confirmEmptyTrash();return false"><font size=-1 color="#663399">Empty Trash</font></a><br>
<tr><td>
<font size=-1 color="#663399">
<table width="100%" border=0 cellpadding=1 cellspacing=1>
<tr>
<td bgcolor="#OO3399" height=1>
<table width="100%" border=0 cellpadding=0 cellspacing=0>
<tr><td>
</td>
</tr>
</table>
</td></tr>
<tr><td>
<form name=gofolders action="/ExciteMail/folder/rs=15167;aff=3AD53470;ck=357239965/fl=INBOX/folder.html"><font face=verdana,geneva,arial size=-2 color="#OOOOOO"><b>Folders:</b></font></td>
</tr>
<tr align=center>
<td><select name=go onChange="goToFolder();">
<option value="INBOX" selected>Inbox
<option value="Keep">Keep
<option value="SentMail">Sent
<option value="Trash">Trash

<option value=>&lt;Add&gt;
<option value=>&lt;Rename&gt;
<option value=>&lt;Delete&gt;
</select>
</td>
</tr>
<tr>
<td bgcolor="#OO3399" height=1>
<table width="100%" border=0 cellpadding=0 cellspacing=0>
<tr><td>
</td>
</tr>
</table>
</td></tr>
<input type=hidden name=action value=go></form>
</td></tr>
</table>
</font></td>
</tr>
<tr><td>
<font face=geneva,arial color="#000000" size=-1>
<a href="/ExciteMail/address_list/rs=32266;aff=3AD53470;ck=148994674/"><font size=-1 color="#663399">Address Book</font></a>
<br>
<a href="/ExciteMail/quotas/rs=24497;aff=3AD53470;ck=2110037245/"><font size=-1 color="#663399">Storage Limits</font></a>
<br>
<a href="/ExciteMail/announcements/rs=52861;aff=3AD53470;ck=691981998/"><font size=-1 color="#663399">Notices</font></a>
<br>
<a href="/ExciteMail/preferences/rs=33255;aff=3AD53470;ck=303782750/"><font size=-1 color="#663399">Preferences</font></a>
<br>
<a href="http://www.excite.co.uk/info/mail/" target="_new"><font size=-1 color="#663399">Help</font></a><br>
</font>
</td>
</tr>
</table><small><br></small>
<table bgcolor="#ffffff" cellpadding=2 cellspacing=0 border=0 width=140>
<tr bgcolor="#999999">
<td><img src="http://imgbox.eimg.com/img/lep.gif" width=13 height=16 alt=Lep border=0><font face=geneva,arial color="#ffffff" size=-1><b>
Shortcuts
</b></font></td>
</tr>
<tr>
<td>
<font face=geneva,arial color="#000000" size=-1>
<a target=_new href="http://www.excite.co.uk/relocate/co=uk_inbox_phones;http://www.phones4udirect.com/excite/6210a.html"><font size=-1 color="#663399"><b>Get New Nokia Phones <font color=red> FREE!</font></b></font></a>
<br>
<a target=_new href="http://www.excite.co.uk/mobile/sms/"><font size=-1 color="#663399">Send Text Messages</font></a>
<br>
<a target=_new href="http://answerphone.excite.co.uk/signup/signup.htm"><font size=-1 color="#663399">Free Voicemail/Fax</font></a>
<br>
</font></td>
</tr>
</table>
</td>
<td align=right width="100%">
<table border="0" cellpadding=2 cellspacing=1 width="100%"><tr bgcolor="#ffffff">
<td>
<table width="100%" border="0" cellpadding=3 cellspacing=0>
<tr bgcolor="#ffffff">
<td><font face=geneva,arial color="#OOOO66"><b>&nbsp;Message 3 of 38</b></font></td>
</tr>
</table>
</td>
</tr>
<form name=controlbar action="/ExciteMail/message/rs=38408;aff=3AD53470;ck=241272391/uid=1052;sort=-received/1052.html" method=GET>
<tr bgcolor="#ffffff"><td>
<table width="100%" cellpadding=0 cellspacing=0 border="0"><tr>
<td nowrap><font face=geneva,arial size=-1><input type=submit name=action value="Delete"> message or move to <select name=dest0 onChange="moveToFolder(this);">
<option value="Keep">Keep
<option value="Trash">Trash
<option value=>&lt;Add&gt;
<option value=>&lt;Rename&gt;
<option value=>&lt;Delete&gt;
</select> <input type=submit name=move0 value="Move"></font></td><td align=right nowrap>&nbsp;
<font face=geneva,arial size=-1><b>
<a href="/ExciteMail/folder/rs=43373;aff=3AD53470;ck=60104259/fl=INBOX;sort=-received;start=2/folder.html"><font color="#663399">Inbox</font></a>  
| 
<font face=geneva,arial size=-1>&lt;<a href="/ExciteMail/message/rs=25535;aff=3AD53470;ck=797254722/uid=1077;sort=-received/1077.html"><font color="#663399">Prev</font></a> 
<a href="/ExciteMail/message/rs=19338;aff=3AD53470;ck=1726115664/uid=1049;sort=-received/1049.html"><font face=geneva,arial color="#663399">Next</font></a><font face=geneva,arial size=-1>&gt;</font></b></font>
</td></tr></table></td>
</tr>

<input type=hidden name=index value="2">
</form>
<form name=reply action="/ExciteMail/message/rs=20768;aff=3AD53470;ck=1062713141/uid=1052;sort=-received/1052.html" method=GET>
<tr bgcolor="#999999">
<td align=right><font face=geneva,arial size=-1><a href="javascript:downloadPopup()"><font color="#ffffff"><b>Download</b></font></a>
<input type=submit name=action value="Reply">
<input type=submit name=action value="Reply All">
<input type=submit name=action value="Forward"></font></td>
</tr>
</form>
<tr bgcolor="#ffffff">
<td align=left width="100%">

<table border=0 width="100%" cellpadding=5 cellspacing=0><tr><td>
<!-- top: multipart/mixed; boundary=23513862.985816126304.JavaMail.imail.chilly.excite.com-->
<table border=0>
<tr><td align=right nowrap><font face=geneva,arial size=-1><b>Date:</b></font></td>
<td><font face=geneva,arial size=-1>Wed, 28 Mar 2001 21:48:46 GMT</font></td><td align=right><font face=geneva,arial size=-1>[<a href="/ExciteMail/message/rs=47104;aff=3AD53470;ck=627831740/uid=1052;sort=-received;full_headers=true/1052.html"><font color=#663399>Show full headers</font></a>]</font></td></tr>
<tr><td align=right valign=top><font face=geneva,arial size=-1><b>From:</b></font></td><td width="100%" colspan=2 ><font face=geneva,arial size=-1>&quot;Diep Le&quot; &lt;dieplee@excite.co.uk&gt;</font>
</td></tr>
<tr><td align=right valign=top><font face=geneva,arial size=-1><b>To:</b></font></td><td width="100%" colspan=2 ><font face=geneva,arial size=-1>diep.le@equifax.com</font>
<SCRIPT language=javascript>
To0="/ExciteMail/address_edit/rs=4200;aff=3AD53470;ck=381410019/?VIEW=SHORT&OPENER=OTHER&origin=none&EMAIL1=diep.le@equifax.com";
</SCRIPT>
<a href="javascript:addEntryPopup(To0)"><font face=geneva,arial size=-1 color="#663399">[Add to Address Book]</font></A></td></tr>
<tr><td align=right><font face=geneva,arial size=-1><b>Subject:</b></font></td><td width="100%" colspan=2 ><font face=geneva,arial size=-1>useful scripts</font></td></tr>
</table><p>
<!-- top.0: text/plain; charset=us-ascii-->
<FONT  face=geneva,arial size=-1>

<br>

<br>

<br>

<br>

<br>

<br>
_______________________________________________________
<br>
 Get 100% private, FREE email for life from Excite UK
<br>
 Visit <a href="http://inbox.excite.co.uk/" target="_new">http://inbox.excite.co.uk/</a> 
<br>
</font>
<hr>

<!-- top.1: text/plain-->
<FONT  face=geneva,arial size=-1>
*******************************************
<br>
* USEFUL SHELL SCRIPTS/FUNCTIONS/PROGRAMS *
<br>
*******************************************
<br>

<br>
******************************
<br>
* goto xy screen co-ordinate *
<br>
******************************
<br>
gotoxy()
<br>
{
<br>
# invoke: gotoxy row column &quot;text&quot;
<br>
ROW=$1
<br>
COL=$2
<br>
TEXT=$3
<br>

<br>
tput cup $ROW $COL
<br>
print &quot;$TEXT \c&quot;
<br>
}
<br>

<br>
******************************************
<br>
* centre: a string of text across screen *
<br>
* invoke: centre &quot;string&quot; row_number &nbsp; &nbsp; *
<br>
******************************************
<br>
centre()
<br>
{
<br>

<br>
STR=$1
<br>
ROW=$2
<br>
LEN=$(print $STR | awk '{length($0)}')
<br>
COLS=$(tput cols)
<br>
HOLD_COL=$(expr $COL - $LEN)
<br>
NEW_COL=$(expr $HOLD_COL / 2)
<br>

<br>
tput cup $ROW $NEW_COL
<br>
print &quot; $STR \c&quot;
<br>

<br>
e.g. tput clear
<br>
gotoxy 2 3 &quot;USER: $LOGNAME&quot;
<br>
centre &quot;Add a new warp drive to a star ship&quot; 3
<br>
}
<br>

<br>
-----------------------------------------------------
<br>
*****************
<br>
* USING COLOURS *
<br>
*****************
<br>

<br>
COLOUR&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; FOREGROUND&nbsp; &nbsp; BACKGROUND
<br>
------&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; ----------&nbsp; &nbsp; ----------
<br>
black&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; 30&nbsp; &nbsp;  &nbsp; &nbsp;40
<br>
red&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; 31&nbsp; &nbsp;  &nbsp; &nbsp;41
<br>
green&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; 32&nbsp; &nbsp;  &nbsp; &nbsp;42
<br>
yellow(or brown)&nbsp; &nbsp; 33&nbsp; &nbsp;  &nbsp; &nbsp;43
<br>
blue&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; 34&nbsp; &nbsp;  &nbsp; &nbsp;45
<br>
purple&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; 35&nbsp; &nbsp;  &nbsp; &nbsp;44
<br>
cyan&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; 36&nbsp; &nbsp;  &nbsp; &nbsp;46
<br>
white(or grey)&nbsp; &nbsp;  &nbsp; &nbsp;37&nbsp; &nbsp;  &nbsp; &nbsp;47
<br>

<br>

<br>
format : &lt;escape&gt; [ bg; fg m
<br>
e.g.
<br>
Linux/BSD&nbsp; &nbsp; echo -e &quot;\033[40; 32m&quot;
<br>
System V&nbsp; &nbsp; echo &nbsp; &nbsp;&quot;\033[40; 32m&quot;
<br>
Generic method&nbsp; &nbsp; echo &quot;&lt;CTRL-V&gt;&lt;ESCAPE&gt;[40; 32m&quot;
<br>

<br>
Usage in script:
<br>
---------------
<br>
colour whatever
<br>
echo something
<br>
# now change to a different colour
<br>
colour whatever
<br>
echo something
<br>

<br>
***********************************
<br>
* colour function&nbsp; &nbsp;  &nbsp; &nbsp; &nbsp;*
<br>
* format is background_foreground *
<br>
***********************************
<br>
colour()
<br>
{
<br>

<br>
case $1 in
<br>
 &nbsp; &nbsp; black_green)  &nbsp; &nbsp;print '^[[40; 32m';;
<br>
 &nbsp; &nbsp; black_yellow)&nbsp; &nbsp; print '^[[40; 33m';;
<br>
 &nbsp; &nbsp; black_white)&nbsp; &nbsp; print '^[[40; 37m';;
<br>
 &nbsp; &nbsp; black_cyan)&nbsp; &nbsp; print '^[[40; 36m';;
<br>
 &nbsp; &nbsp; red_yellow)  &nbsp; &nbsp;print '^[[41; 33m';;
<br>
esac
<br>
}
<br>
-----------------------------------------------------------------------------------------------------------------------
<br>
*************
<br>
* GRABCHARS *
<br>
*************
<br>

<br>
ANS=`grabchars -q'Answer y or n: '`
<br>

<br>
By default, the answer that grabchar reads and echoes will be &quot;eaten&quot; by the backquotes; the user won't see what
<br>
she typed. That nice when the answer needs to be secret. To show the answer you have two choices:
<br>
1) You can use -b option grabchars will echo the answer to both stdout (which the backquotes read) and stderr (which
<br>
 &nbsp; is usually the terminal)
<br>
2) You can also use the following
<br>

<br>
while true
<br>
do
<br>
 &nbsp;ANS=`grabchars -q'Answer y or n:'`
<br>
 &nbsp;case &quot;$ANS&quot; in
<br>
&nbsp; &nbsp; y) echo &quot;yes&quot; 1&gt;&amp;2; break;;
<br>
&nbsp; &nbsp; n) echo &quot;no&quot; &nbsp;1&gt;&amp;2; break;;
<br>
&nbsp; &nbsp; *) echo &quot;${ANS}?Please answer y or n&quot; 1&gt;&amp;2;;
<br>
 &nbsp;esac
<br>
done
<br>

<br>
The option -c valid-characters tells grabchars to accept only characters listed in valid-characters (this can be a
<br>
regular expression like [a-z]). If the user types something that isn't listed, grabchars will ignore the answer
<br>
and wait. So to accept only y or n: ANS=`grabchar -c'yn' -q 'Answer y or n:'`
<br>

<br>
ANS=`grabchars -t5 -d'y' -q 'To stop, type n within 5 seconds: '`
<br>

<br>
If the user doesn't type anything in 5 seconds, grabchars will answer y by default (automatically).
<br>
---------------------------------------------------------------------------------------------------------------------
<br>
*******************
<br>
* ADD RECORD MENU *
<br>
*******************
<br>

<br>
##
<br>
# function to check the length of string
<br>
##
<br>
chk_str_length()
<br>
{
<br>

<br>
STR=$1
<br>
MAX=$2
<br>
LENGTH=$(print $STR | awk '{print length($1)}')
<br>

<br>
if [[ &quot;$LENGTH&quot; -gt &quot;$MAX&quot; ]]
<br>
then
<br>
 &nbsp; return 1
<br>
else
<br>
 &nbsp; return 0
<br>
fi
<br>
}
<br>

<br>
##
<br>
# function to check whether a string contains all numeric data
<br>
##
<br>
all_number()
<br>
{
<br>

<br>
STR=$1
<br>
CHK=$(print $1 | awk '{if($0~/[^0-9]/) print &quot;1&quot;}')
<br>

<br>
if [[ &quot;$CHK&quot; != &quot;&quot; ]]
<br>
then
<br>
 &nbsp; return 1
<br>
else
<br>
 &nbsp; return 0
<br>
fi
<br>
}
<br>

<br>
##
<br>
# function to check string contains only characters
<br>
##
<br>
characters()
<br>
{
<br>

<br>
STR=$1
<br>
CHK=$(print $1 | awk '{if($0~/[^a-zA-Z]/) print &quot;1&quot;}')
<br>

<br>
if [[ &quot;$CHK&quot; != &quot;&quot; ]]
<br>
then
<br>
 &nbsp; return 1
<br>
else
<br>
 &nbsp; return 0
<br>
fi
<br>
}
<br>

<br>
##
<br>
# continue_prompt
<br>
##
<br>
continue_prompt()
<br>
{
<br>

<br>
print &quot;Hit any key to continue ...&quot;
<br>
DUMMY=$(read_a_char)
<br>
}
<br>

<br>
##
<br>
# read_a_char
<br>
##
<br>
read_a_char()
<br>
{
<br>

<br>
SAVEDSTTY=$(stty -g)
<br>

<br>
stty cbreak
<br>
dd if=/dev/tty bs=1 count=1 2&gt;/dev/null
<br>
stty -cbreak
<br>

<br>
stty $SAVEDSTTY
<br>
}
<br>

<br>
##
<br>
# function to check for the existence of a str in a file
<br>
##
<br>
if_exist()
<br>
{
<br>

<br>
STR=$1
<br>
CHK=$(grep &quot;$STR\&gt;&quot; $INFILE)
<br>
print $STR
<br>

<br>
if [[ &quot;$CHK&quot; = &quot;&quot; ]] &nbsp;# grep returns no string for no matches
<br>
then
<br>
 &nbsp; return 0&nbsp; &nbsp; # no duplicate found
<br>
else
<br>
 &nbsp; return 1&nbsp; &nbsp; # duplicate found
<br>
fi
<br>
}
<br>

<br>
##
<br>
# get_staff_number
<br>
##
<br>
get_staff_number()
<br>
{
<br>

<br>
while true
<br>
do
<br>
 &nbsp;print &quot;Employee staff number: \c&quot;
<br>
 &nbsp;read NUM
<br>
 &nbsp;if [[ &quot;$NUM&quot; != &quot;&quot; ]]
<br>
 &nbsp;then
<br>
 &nbsp; &nbsp; if all_number $NUM
<br>
 &nbsp; &nbsp; then
<br>
&nbsp; &nbsp; NUM_PASS=0
<br>
 &nbsp; &nbsp; else
<br>
&nbsp; &nbsp; NUM_PASS=1
<br>
 &nbsp; &nbsp; fi
<br>
 &nbsp; &nbsp; if chk_str_length $NUM 10
<br>
 &nbsp; &nbsp; then
<br>
&nbsp; &nbsp; LEN_PASS=0
<br>
 &nbsp; &nbsp; else
<br>
&nbsp; &nbsp; LEN_PASS=1
<br>
 &nbsp; &nbsp; fi
<br>
 &nbsp; &nbsp; # now check for duplicate ...
<br>
 &nbsp; &nbsp; if if_exist $NUM
<br>
 &nbsp; &nbsp; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;DUPLICATE=0
<br>
 &nbsp; &nbsp; else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;DUPLICATE=1
<br>
&nbsp; &nbsp; print &quot;staff number: there is already an employee with this number&quot;
<br>
&nbsp; &nbsp; continue_prompt
<br>
 &nbsp; &nbsp; fi
<br>
 &nbsp; &nbsp; if [[ &quot;$LEN_PASS&quot; = &quot;0&quot; -a &quot;$NUM_PASS&quot; = &quot;0&quot; -a &quot;$DUPLICATE&quot; = &quot;0&quot; ]]
<br>
 &nbsp; &nbsp; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;break
<br>
 &nbsp; &nbsp; else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;print &quot;staff number: non-numeric or too many numbers in fields&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;continue_prompt
<br>
 &nbsp; &nbsp; fi
<br>
 &nbsp; else
<br>
 &nbsp; &nbsp; &nbsp;print &quot;staff number: no input detected, this field requires a number.&quot;
<br>
 &nbsp; &nbsp; &nbsp;continue_prompt
<br>
 &nbsp; fi
<br>
done
<br>
}
<br>

<br>
##
<br>
# get_first_name
<br>
##
<br>
get_first_name()
<br>
{
<br>
while true
<br>
do
<br>
 &nbsp;print &quot;Employee's first name: \c&quot;
<br>
 &nbsp;read F_NAME
<br>
 &nbsp;if [ &quot;$F_NAME&quot; != &quot;&quot; ]
<br>
 &nbsp;then
<br>
 &nbsp; &nbsp; if characters $F_NAME
<br>
 &nbsp; &nbsp; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;F_NAME_PASS=0
<br>
 &nbsp; &nbsp; else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;F_NAME_PASS=1
<br>
 &nbsp; &nbsp; fi
<br>
 &nbsp; &nbsp; if chk_str_length $F_NAME 20
<br>
 &nbsp; &nbsp; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;LEN_PASS=0
<br>
 &nbsp; &nbsp; else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;LEN_PASS=1
<br>
 &nbsp; &nbsp; fi
<br>
 &nbsp; &nbsp; # both conditions must be true to get out of this loop
<br>
 &nbsp; &nbsp; if [ &quot;$LEN_PASS&quot; = &quot;0&quot; -a &quot;$F_NAME_PASS&quot; = &quot;0&quot; ]
<br>
 &nbsp; &nbsp; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;break
<br>
 &nbsp; &nbsp; else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;print &quot;Staff first name: non-numeric character or too many chars&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;continue_prompt
<br>
 &nbsp; &nbsp; fi
<br>
 &nbsp;else
<br>
 &nbsp; &nbsp; print &quot;staff first name: no input detected ...&quot;
<br>
 &nbsp; &nbsp; continue_prompt
<br>
 &nbsp;fi
<br>
done
<br>
}
<br>
------------------------------------------------------------------------------
<br>
##
<br>
# get_last_name
<br>
##
<br>
get_last_name()
<br>
{
<br>
while true
<br>
do
<br>
 &nbsp;print &quot;Employee's surname: \c&quot;
<br>
 &nbsp;read S_NAME
<br>
 &nbsp;if [ &quot;$S_NAME&quot; != &quot;&quot; ]
<br>
 &nbsp;then
<br>
 &nbsp; &nbsp; if characters $S_NAME
<br>
 &nbsp; &nbsp; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;S_NAME_PASS=0
<br>
 &nbsp; &nbsp; else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;S_NAME_PASS=1
<br>
 &nbsp; &nbsp; fi
<br>
 &nbsp; &nbsp; if chk_str_length $S_NAME 20
<br>
 &nbsp; &nbsp; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;LEN_PASS=0
<br>
 &nbsp; &nbsp; else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;LEN_PASS=1
<br>
 &nbsp; &nbsp; fi
<br>
 &nbsp; &nbsp; if [ &quot;$LEN_PASS&quot; = &quot;0&quot; -a &quot;$S_NAME_PASS&quot; = &quot;0&quot; ]
<br>
 &nbsp; &nbsp; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;break
<br>
 &nbsp; &nbsp; else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;print &quot;Staff surname: non character or too many characters&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;continue_prompt
<br>
 &nbsp; &nbsp; fi
<br>
 &nbsp;else
<br>
 &nbsp; &nbsp; print &quot;Staff surname: No input detected. This field requires characters&quot;
<br>
 &nbsp; &nbsp; continue_prompt
<br>
 &nbsp;fi
<br>
done
<br>
}
<br>
----------------------------------------------------------
<br>
##
<br>
# get_department
<br>
##
<br>
get_department()
<br>
{
<br>
while true
<br>
do
<br>
 &nbsp;print &quot;Company dept : \c&quot;
<br>
 &nbsp;read DEPART
<br>
 &nbsp;case $DEPART in
<br>
 &nbsp; &nbsp; ACCOUNTS|Accounts|accounts) break;;
<br>
 &nbsp; &nbsp; SALES|Sales|sales) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;break;;
<br>
 &nbsp; &nbsp; IT|It|it) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;;
<br>
 &nbsp; &nbsp; CLAIMS|Claims|claims) &nbsp; &nbsp; &nbsp; break;;
<br>
 &nbsp; &nbsp; SERVICES|Services|services) break;;
<br>
 &nbsp; &nbsp; *) print &quot;Dept: Accounts, Sales, IT, Claims, Services&quot;;;
<br>
 &nbsp;esac
<br>
done
<br>
}
<br>
-----------------------------------------------------------------------------------
<br>
##
<br>
# continue_prompt
<br>
##
<br>
continue_prompt()
<br>
{
<br>
if [ $# -lt 1 ]
<br>
then
<br>
 &nbsp; print &quot;continue_prompt: I need a string to display&quot;
<br>
 &nbsp; exit 1
<br>
fi
<br>
while true
<br>
do
<br>
 &nbsp;print &quot;$STR [Y..N] [$DEFAULT]: \c&quot;
<br>
 &nbsp;read ANS
<br>
 &nbsp;# if user hits return set the default &amp; determine the return value
<br>
 &nbsp;: ${ANS := $DEFAULT}
<br>
 &nbsp;if [ &quot;$ANS&quot; = &quot;&quot; ]
<br>
 &nbsp;then
<br>
 &nbsp; &nbsp; case $ANS in
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Y) return 0;;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;N) return 1;;
<br>
 &nbsp; &nbsp; esac
<br>
 &nbsp;fi
<br>
 &nbsp;# user has selected something
<br>
 &nbsp;case $ANS in
<br>
 &nbsp; &nbsp;y|Y|YES|Yes) return 0;;
<br>
 &nbsp; &nbsp;n|N|NO|No) &nbsp; return 1;;
<br>
 &nbsp; &nbsp;*) print &quot;Answer either Y or N, default is $DEFAULT&quot;;;
<br>
 &nbsp;esac
<br>
 &nbsp;print $ANS
<br>
done
<br>
}
<br>
-------------------------------------------------------------------------------------
<br>
##
<br>
# add_record
<br>
##
<br>
add_record()
<br>
{
<br>
 &nbsp;get_staff_number
<br>
 &nbsp;get_first_name
<br>
 &nbsp;get_last_name
<br>
 &nbsp;get_department
<br>
}
<br>
##
<br>
# Main
<br>
##
<br>
tput clear
<br>
print &quot;\t\t ADD AN EMPLOYEE RECORD \c&quot;
<br>
if [ -s $INFILE ]
<br>
then
<br>
 &nbsp; : #do nothing
<br>
else
<br>
 &nbsp; print &quot;Info: creating new file to add employee records&quot;
<br>
 &nbsp; &gt; $INFILE
<br>
fi
<br>
add_record
<br>
if continue_prompt &quot;Do you want to save this record&quot; &quot;Y&quot;
<br>
then
<br>
 &nbsp; print &quot;$NUM : $F_NAME : $S_NAME : $DEPART&quot; &gt;&gt; $INFILE
<br>
 &nbsp; print &quot;record saved&quot;
<br>
 &nbsp; sleep 1
<br>
 &nbsp; sort +2 -t: $INFILE &gt; $TEMPFILE 2&gt;/dev/null
<br>
 &nbsp; if [ $? -ne 0 ]
<br>
 &nbsp; then
<br>
 &nbsp; &nbsp; &nbsp;print &quot;Problems trying to sort the file: check it out&quot;
<br>
 &nbsp; &nbsp; &nbsp;exit 1
<br>
 &nbsp; fi
<br>
 &nbsp; mv $TEMPFILE $INFILE
<br>
 &nbsp; if [ $? -ne 0 ]
<br>
 &nbsp; then
<br>
 &nbsp; &nbsp; &nbsp;print &quot;Problems moving the temp sort file ... check it out&quot;
<br>
 &nbsp; &nbsp; &nbsp;exit 1
<br>
 &nbsp; fi
<br>
else
<br>
 &nbsp; print &quot;record not saved&quot;
<br>
 &nbsp; sleep 1
<br>
fi
<br>
---------------------------------------------------------------------------------------------------------------
<br>
******************
<br>
* DELETE RECORDS *
<br>
******************
<br>

<br>
#!/bin/ksh
<br>
# dbase_del delete a record
<br>

<br>
# trap signals
<br>
trap &quot;&quot; 2 3 15
<br>

<br>
DBFILE=DBFILE &nbsp;# datafile
<br>
HOLD1=HOLD1.$$ # tempfile
<br>
HOLD2=HOLD2.$$
<br>

<br>
##
<br>
# continue_prompt
<br>
##
<br>
continue_prompt()
<br>
{
<br>
STR=$1
<br>
DEFAULT=$2
<br>
# check we have the right parameters
<br>
if [ $# -lt 1 ]; then
<br>
 &nbsp;echo &quot;continue_prompt: I need a string to display&quot;
<br>
 &nbsp;exit 1
<br>
fi
<br>
while true
<br>
do
<br>
 &nbsp;echo &quot;$STR [Y..N] [$DEFAULT] :\c&quot;
<br>
 &nbsp;read ANS
<br>
 &nbsp;: ${ANS:=$DEFAULT}
<br>
 &nbsp;if [ &quot;$ANS&quot; = &quot;&quot; ]; then
<br>
 &nbsp; &nbsp; case $ANS in
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Y) return 0;;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;N) return 1;;
<br>
 &nbsp; &nbsp; esac
<br>
 &nbsp;fi
<br>
 &nbsp;case $ANS in
<br>
 &nbsp; &nbsp; y|Y|Yes|YES) return 0;;
<br>
 &nbsp; &nbsp; n|N|No|NO) &nbsp; return 1;;
<br>
 &nbsp; &nbsp; *) echo &quot;Answer either Y or N, default is $DEFAULT&quot;;;
<br>
 &nbsp;esac
<br>
done
<br>
}
<br>

<br>
##
<br>
# display_record
<br>
##
<br>
display_record()
<br>
{
<br>
cat &lt;&lt;-!
<br>
 &nbsp; &nbsp;EMPLOYEE NUMBER : $CODE
<br>
 &nbsp; &nbsp;FIRST NAME &nbsp; &nbsp; &nbsp;: $F_NAME
<br>
 &nbsp; &nbsp;SURNAME &nbsp; &nbsp; &nbsp; &nbsp; : $S_NAME
<br>
 &nbsp; &nbsp;DEPARTMENT &nbsp; &nbsp; &nbsp;: $DEPART
<br>
 &nbsp; &nbsp;!
<br>
}
<br>

<br>
##
<br>
# no record
<br>
##
<br>
no_record()
<br>
{
<br>
echo -e &quot;Sorry could not find a record with the name $STR&quot;
<br>
}
<br>

<br>
##
<br>
# get_record
<br>
##
<br>
get_record()
<br>
{
<br>
clear
<br>
echo -n &quot;Enter the employee surname&quot;
<br>
read STR
<br>
if [ &quot;STR&quot; = &quot;q&quot; ]; then
<br>
 &nbsp;return 1
<br>
fi
<br>
REC=0
<br>
MATCH=no
<br>
if [ &quot;$STR&quot; != &quot;&quot; ]; then
<br>
 &nbsp;while read CODE F_NAME S_NAME DEPART
<br>
 &nbsp;do
<br>
 &nbsp; &nbsp; REC=$(expr $REC + 1)
<br>
 &nbsp; &nbsp; tput cup 3 4
<br>
 &nbsp; &nbsp; echo -n &quot;searching record ... $REC&quot;
<br>
 &nbsp; &nbsp; if [ &quot;$S_NAME&quot; = &quot;$STR&quot;]; then
<br>
 &nbsp; &nbsp; &nbsp; MATCH=yes
<br>
 &nbsp; &nbsp; &nbsp; display_record
<br>
 &nbsp; &nbsp; &nbsp; break
<br>
 &nbsp; &nbsp; else
<br>
 &nbsp; &nbsp; &nbsp; continue
<br>
 &nbsp; &nbsp; fi
<br>
 &nbsp; done &lt; $DBFILE
<br>
else
<br>
 &nbsp;echo &quot;Enter a surname to search for or q to quit&quot;
<br>
fi
<br>
if [ &quot;$MATCH&quot; = &quot;no&quot; ]; then
<br>
 &nbsp;no_record
<br>
fi
<br>
}
<br>

<br>
##
<br>
# Main
<br>
##
<br>
SAVEDIFS=$IFS
<br>
IFS=:
<br>
get_record
<br>
if [ &quot;$MATCH&quot; = &quot;yes&quot; ]; then
<br>
 &nbsp;if continue_prompt &quot;Do you wish to DELETE this record? &quot; &quot;N&quot;; then
<br>
 &nbsp;echo &quot;DEL&quot;
<br>
 &nbsp;grep -v $STR $DBFILE &gt; $HOLD1 2&gt;/dev/null
<br>
 &nbsp;if [ $? -ne 0 ]; then
<br>
 &nbsp; &nbsp;echo &quot;Problems creating temp file $HOLD1 ... check it out&quot;
<br>
 &nbsp; &nbsp;exit 1
<br>
 &nbsp;fi
<br>
 &nbsp;mv $HOLD1 $DBFILE
<br>
 &nbsp;if [ $? -ne 0 ]; then
<br>
 &nbsp; &nbsp;echo &quot;Problems moving temp file ... check it out&quot;
<br>
 &nbsp; &nbsp;exit 1
<br>
 &nbsp;fi
<br>
 &nbsp;# sort the file after changes
<br>
 &nbsp;sort +2 -t: $DBFILE &gt; $HOLD2 2&gt;/dev/null
<br>
 &nbsp;if [ $? -ne 0 ]; then
<br>
 &nbsp; &nbsp;echo &quot;problems trying to sort the file ... check it out&quot;
<br>
 &nbsp; &nbsp;exit
<br>
 &nbsp;fi
<br>
 &nbsp;mv $HOLD2 $DBFILE
<br>
 &nbsp;if [ $? -ne 0 ]; then
<br>
 &nbsp; &nbsp;echo &quot;Problems moving the temp sort file ... check it out&quot;
<br>
 &nbsp; &nbsp;exit 1
<br>
 &nbsp;fi
<br>
 &nbsp;else
<br>
 &nbsp; &nbsp;echo &quot;no deletion&quot;
<br>
 &nbsp;fi # if wish to delete
<br>
fi # if match
<br>
IFS=$SAVEDIFS &nbsp;# restore IFS settings
<br>
---------------------------------------------------------------------------------------------------
<br>
********************
<br>
* AMENDING RECORDS *
<br>
********************
<br>

<br>
#!/bin/ksh
<br>
# dbasechange - amending a record
<br>

<br>
trap &quot;&quot; 2 3 15 &nbsp;# ignore signals
<br>
DBFILE=DBFILE
<br>
HOLD1=HOLD1.$$
<br>
HOLD2=HOLD2.$$
<br>

<br>
##
<br>
# continue_prompt
<br>
##
<br>
continue_prompt()
<br>
{
<br>
STR=$1
<br>
DEFAULT=$2
<br>

<br>
if [ $# -lt 1 ]; then
<br>
 &nbsp;echo &quot;continue_prompt: I need a string to display&quot;
<br>
 &nbsp;return 1
<br>
fi
<br>
while true
<br>
do
<br>
 &nbsp;echo -n &quot;$STR [Y..N] [$DEFAULT]: &quot;
<br>
 &nbsp;read ANS
<br>
 &nbsp;: ${ANS:=$DEFAULT}
<br>
 &nbsp;if [ &quot;$ANS&quot; = &quot;&quot; ]; then
<br>
 &nbsp; &nbsp;case $ANS in 
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Y) return 0;;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;N) return 1;;
<br>
 &nbsp; &nbsp;esac
<br>
 &nbsp;fi
<br>
 &nbsp;case $ANS in
<br>
 &nbsp; &nbsp; y|Y|Yes|YES) return 0;;
<br>
 &nbsp; &nbsp; n|N|No|NO) &nbsp; return 1;;
<br>
 &nbsp; &nbsp; *) echo &quot;Answer either Y or N, default is $DEFAULT&quot;;;
<br>
 &nbsp;esac
<br>
done
<br>
}
<br>

<br>

<br>
##
<br>
# display_record
<br>
##
<br>
display_record()
<br>
{
<br>
cat &lt;&lt;-!
<br>
 &nbsp; &nbsp;EMPLOYEE NUMBER : $CODE
<br>
 &nbsp; &nbsp;FIRST NAME &nbsp; &nbsp; &nbsp;: $F_NAME
<br>
 &nbsp; &nbsp;SURNAME &nbsp; &nbsp; &nbsp; &nbsp; : $S_NAME
<br>
 &nbsp; &nbsp;DEPARTMENT &nbsp; &nbsp; &nbsp;: $DEPART
<br>
 &nbsp; &nbsp;!
<br>
}
<br>

<br>

<br>
##
<br>
# no_record
<br>
##
<br>
no_record()
<br>
{
<br>
 &nbsp;echo &quot;Sorry could not find a record with the name $STR&quot;
<br>
}
<br>

<br>
##
<br>
# get_record
<br>
##
<br>
get_record()
<br>
{
<br>
clear
<br>
echo &quot;Enter the employee surname: \c&quot;
<br>
read STR
<br>
if [ &quot;$STR&quot; = &quot;q&quot; ]; then
<br>
 &nbsp;return 1
<br>
fi
<br>
REC=0
<br>
MATCH=no
<br>
if [ &quot;$STR&quot; != &quot;&quot; ]; then
<br>
 &nbsp;while read CODE F_NAME S_NAME DEPART
<br>
 &nbsp;do
<br>
 &nbsp; &nbsp;REC=$(expr $REC + 1)
<br>
 &nbsp; &nbsp;tput cup 3 4
<br>
 &nbsp; &nbsp;echo -n &quot;searching record ... $REC&quot;
<br>
 &nbsp; &nbsp;if [ &quot;$S_NAME&quot; = &quot;$STR&quot; ]; then
<br>
 &nbsp; &nbsp; &nbsp;MATCH=yes
<br>
 &nbsp; &nbsp; &nbsp;display_record
<br>
 &nbsp; &nbsp; &nbsp;break
<br>
 &nbsp; &nbsp;else
<br>
 &nbsp; &nbsp; &nbsp;continue
<br>
 &nbsp; &nbsp;fi
<br>
 &nbsp;done &lt; $DBFILE
<br>
else
<br>
 &nbsp; echo &quot;Enter a surname to search for or q to quit&quot;
<br>
fi
<br>
if [ &quot;$MATCH&quot; = &quot;no&quot; ]; then
<br>
 &nbsp;no_record
<br>
fi
<br>
}
<br>

<br>
##
<br>
# Main
<br>
##
<br>
SAVEDIFS=$IFS
<br>
IFS=:
<br>
get_record
<br>
if [ &quot;$MATCH&quot; = &quot;yes&quot;]; then
<br>
 &nbsp;if continue_prompt &quot;Is this the record you wish to amend?&quot; &quot;Y&quot;; then
<br>
 &nbsp; &nbsp;echo &quot;amending&quot;
<br>
 &nbsp; &nbsp;echo -n -e &quot;EMPLOYEE No.: $CODE\n&quot; # cannot change employee code
<br>
 &nbsp; &nbsp;echo -n &quot;FIRSTNAME: [$F_NAME] &gt; &quot;
<br>
 &nbsp; &nbsp;read F_NAME
<br>
 &nbsp; &nbsp;: ${F_NAME:=$F_NAME}
<br>
 &nbsp; &nbsp;echo -n &quot;SURNAME: [$S_NAME] &gt; &quot;
<br>
 &nbsp; &nbsp;read S_NAME
<br>
 &nbsp; &nbsp;: ${S_NAME:=$S_NAME}
<br>
 &nbsp; &nbsp;echo -n &quot;DEPARTMENT : [$DEPART] &gt; &quot;
<br>
 &nbsp; &nbsp;read DEPART
<br>
 &nbsp; &nbsp;: ${DEPART:=$DEPART}
<br>

<br>
 &nbsp; &nbsp;grep -v $CODE $DBFILE &gt; $HOLD1
<br>
 &nbsp; &nbsp;if [ $? -ne 0 ]; then
<br>
 &nbsp; &nbsp; &nbsp;echo &quot;Problems creating temporary file ... check it out&quot;
<br>
 &nbsp; &nbsp; &nbsp;exit 1
<br>
 &nbsp; &nbsp;fi
<br>
 &nbsp; &nbsp;if continue_prompt &quot;Ready to save this record&quot; &quot;Y&quot;; then
<br>
 &nbsp; &nbsp; &nbsp;echo &quot;$CODE : $F_NAME : $S_NAME : $DEPART &gt;&gt; HOLD1
<br>
 &nbsp; &nbsp; &nbsp;mv $HOLD1 $DBFILE
<br>
 &nbsp; &nbsp; &nbsp;if [ $? -ne 0 ]; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;echo &quot;Problems moving temporary file ... check it out&quot;
<br>
 &nbsp; &nbsp; &nbsp;fi
<br>
 &nbsp; &nbsp; &nbsp;echo &quot;record amended&quot;
<br>
 &nbsp; &nbsp; &nbsp;# now sort the file after changes
<br>
 &nbsp; &nbsp; &nbsp;sort +2 -t: $DBFILE &gt; $HOLD2 2&gt;/dev/null
<br>
 &nbsp; &nbsp; &nbsp;if [ $? -ne 0 ]; the
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;echo &quot;problems trying to sort the file ... check it out&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;exit 1
<br>
 &nbsp; &nbsp; &nbsp;fi
<br>
 &nbsp; &nbsp; &nbsp;mv $HOLD2 $DBFILE
<br>
 &nbsp; &nbsp; &nbsp;if [ $? -ne 0 ]; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;echo &quot;Problems moving the temp sort file ... check it out&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;exit 1
<br>
 &nbsp; &nbsp; &nbsp;fi
<br>
 &nbsp; &nbsp;else # if no amend
<br>
 &nbsp; &nbsp; &nbsp;echo &quot;no amending&quot;
<br>
 &nbsp; &nbsp;fi &nbsp;# if wish to delete
<br>
fi &nbsp;# if match
<br>
IFS=$SAVEDIFS
<br>
--------------------------------------------------------------------------------------------------------------
<br>
****************
<br>
* VIEW RECORDS *
<br>
****************
<br>

<br>
#!/bin/ksh
<br>
# dabaseview - view records
<br>

<br>
trap &quot;&quot; 2 3 15 &nbsp;# ignore traps
<br>
HOLD1=HOLD1.$$
<br>
DBFILE=DBFILE
<br>

<br>
##
<br>
# continue_prompt
<br>
##
<br>
continue_prompt()
<br>
{
<br>
STR=$1
<br>
DEFAULT=$2
<br>

<br>
if [ $# -lt 1 ]; then
<br>
 &nbsp;echo &quot;continue_prompt: I need a string to display&quot;
<br>
 &nbsp;return 1
<br>
fi
<br>
while true
<br>
do
<br>
 &nbsp; echo -n &quot;$STR [Y..N] [$DEFAULT]: &quot;
<br>
 &nbsp; read ANS
<br>
 &nbsp; : ${ANS:=$DEFAULT}
<br>
 &nbsp; if [ &quot;$ANS&quot; = &quot;&quot; ]; then
<br>
 &nbsp; &nbsp; &nbsp;case $ANS in
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; Y) return 0;;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; N) return 1;;
<br>
 &nbsp; &nbsp; &nbsp;esac
<br>
 &nbsp; fi
<br>
 &nbsp; case $ANS in
<br>
 &nbsp; &nbsp; &nbsp;y|Y|Yes|YES) return 0;;
<br>
 &nbsp; &nbsp; &nbsp;n|N|No|NO) &nbsp; return 1;;
<br>
 &nbsp; &nbsp; &nbsp;*) echo &quot;Answer either Y or N, default is $DEFAULT&quot;;;
<br>
 &nbsp; esac
<br>
done
<br>
}
<br>

<br>
##
<br>
# display_record
<br>
##
<br>
display_record()
<br>
{
<br>
cat &lt;&lt;!
<br>
&nbsp; &nbsp; EMPLOYEE No.&nbsp; &nbsp; : $CODE
<br>
&nbsp; &nbsp; FIRST NAME &nbsp; &nbsp; &nbsp;: $F_NAME
<br>
&nbsp; &nbsp; SURNAME&nbsp; &nbsp;  &nbsp; &nbsp;: $S_NAME
<br>
&nbsp; &nbsp; DEPARTMENT&nbsp; &nbsp; : $DEPART
<br>
!
<br>
}
<br>

<br>
##
<br>
# no_record
<br>
##
<br>
no_record()
<br>
{
<br>
 &nbsp; echo -e &quot;\n\nSorry could not find a record with the name $STR&quot;
<br>
}
<br>

<br>
##
<br>
# get_record
<br>
##
<br>
get_record()
<br>
{
<br>
clear
<br>
echo -n &quot;Enter the employee surname to view or all for all records: &quot;
<br>
read STR
<br>
if [ &quot;$STR&quot; = &quot;q&quot; ]; then
<br>
 &nbsp; return 1
<br>
fi
<br>
if [ &quot;$STR&quot; = &quot;all&quot; ]; then &nbsp; &nbsp; &nbsp; &nbsp;# view all records
<br>
 &nbsp; echo &quot;Surname &nbsp; &nbsp;Name &nbsp; &nbsp;Employee Code&quot;
<br>
 &nbsp; echo &quot;------- &nbsp; &nbsp;----- &nbsp; -------------&quot;
<br>
 &nbsp; cat $DBFILE | awk -F:'{print $2&quot;\t&quot;$3&quot;\t\t&quot;$1}' | more
<br>
 &nbsp; return
<br>
fi
<br>
REC=0
<br>
MATCH=no
<br>
if [ &quot;$STR&quot; != &quot;&quot; ]; then
<br>
 &nbsp; while read CODE F_NAME S_NAME DEPART
<br>
 &nbsp; do
<br>
 &nbsp; &nbsp; &nbsp;REC=$(expr $REC + 1)
<br>
 &nbsp; &nbsp; &nbsp;tput cup 3 4
<br>
 &nbsp; &nbsp; &nbsp;echo -n &quot;searching record ..$REC&quot;
<br>
 &nbsp; &nbsp; &nbsp;if [ &quot;$S_NAME&quot; = &quot;$STR&quot; ]; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; MATCH=yes &nbsp; # found name
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; display_record
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; break
<br>
 &nbsp; &nbsp; &nbsp;else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; continue
<br>
 &nbsp; &nbsp; &nbsp;fi
<br>
 &nbsp; &nbsp;done &lt; $DBFILE
<br>
else
<br>
 &nbsp; echo &quot;Enter a surname to search for or q to quit&quot;
<br>
fi
<br>
if [ &quot;$MATCH&quot; = &quot;no&quot; ]; then
<br>
 &nbsp;no_record
<br>
fi
<br>
}
<br>

<br>
##
<br>
# Main
<br>
##
<br>
SAVEDIFS=$IFS
<br>
IFS=:
<br>
get_record
<br>
if [ &quot;$MATCH&quot; = &quot;yes&quot; ]; then
<br>
 &nbsp; if continue_prompt &quot;Do you wish to print this record?&quot; &quot;N&quot;; then
<br>
 &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; lpr &lt;&lt;-!
<br>
 &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; RECORD No : $REC
<br>
&nbsp; &nbsp; 
<br>
&nbsp; &nbsp; EMPLOYEE NUMBER &nbsp;&nbsp; &nbsp; : $CODE
<br>
&nbsp; &nbsp; EMPLOYEE NAME &nbsp; &nbsp;&nbsp; &nbsp; : $F_NAME
<br>
&nbsp; &nbsp; EMPLOYEE SURNAME  &nbsp; &nbsp;: $S_NAME
<br>
&nbsp; &nbsp; EMPLOYEE DEPARTMENT&nbsp; &nbsp; : $DEPART
<br>
&nbsp; &nbsp; !
<br>
 &nbsp; &nbsp;else
<br>
 &nbsp; &nbsp; &nbsp;&quot;$S_NAME is not print&quot;
<br>
 &nbsp; &nbsp;fi
<br>
fi
<br>
IFS=$SAVEDIFS
<br>
-----------------------------------------
<br>
********************
<br>
* CancellRebill.sh *
<br>
********************
<br>
#!/bin/sh
<br>
################################################################################
<br>
#
<br>
# MODULE: &nbsp;CancelRebill.sh
<br>
#
<br>
# DATE: &nbsp; &nbsp;07 Decemeber 1999
<br>
#
<br>
# PROJECT: Customer/1 (UK)
<br>
#
<br>
# INVOCATION:
<br>
#
<br>
# &nbsp;CancelRebill [-t &lt;number of days&gt;]
<br>
#
<br>
# COMMAND LINE PARAMETERS:
<br>
#
<br>
# &nbsp;-t &lt;number of days&gt; &nbsp; &nbsp;- &nbsp; &nbsp;Specifies number of days prior to the current
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;database system date, which defines the range
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;of dates to consider for selection
<br>
#
<br>
# DESCRIPTION:
<br>
# &nbsp;This script was developed in response to Service Centre Request 34024
<br>
# &nbsp;A requirement of this request was the production of a script to identify
<br>
# &nbsp;all of those accounts whose balance has been affected by a Cancel Bill
<br>
# &nbsp;and subsequent re-bill, triggered by the receipt of an actual reading
<br>
# &nbsp;soon after the generation of an estimate bill
<br>
#
<br>
################################################################################
<br>

<br>
################################################################################
<br>
# SOME CONSTANTS
<br>
################################################################################
<br>

<br>
typeset -r ERROR_SUCCESS=0
<br>
typeset -r ERROR_FAILURE=1
<br>

<br>
typeset -r TRUE=0
<br>
typeset -r FALSE=1
<br>

<br>
typeset -r BASEDIR=/home/tx92b01/OSE_SCRIPTS
<br>
typeset -r OUTPUT_DIR=$BASEDIR/output
<br>
typeset -r OUTPUT_FILE=CancelBill`date +&quot;%Y_%m_%d&quot;`.txt
<br>

<br>
typeset -r TEMP_ROOT=${BASEDIR}/`basename $(mktemp)`
<br>
typeset -r TEMP_FILE1=${TEMP_ROOT}.1
<br>
typeset -r TEMP_FILE2=${TEMP_ROOT}.2
<br>
typeset -r SPOOL_FILE=${TEMP_ROOT}.lst
<br>

<br>
typeset -r TOP_STATUS_LINE=0
<br>
typeset -r SCRIPT_STATUS_LINE=$((TOP_STATUS_LINE+0))
<br>
typeset -r DATE_STATUS_LINE=$((TOP_STATUS_LINE+1))
<br>
typeset -r DAYS_STATUS_LINE=$((TOP_STATUS_LINE+2))
<br>
typeset -r DB_STATUS_LINE=$((TOP_STATUS_LINE+3))
<br>
typeset -r OUTPUT_FILE_STATUS_LINE=$((TOP_STATUS_LINE+4))
<br>
typeset -r STATUS_STATUS_LINE=$((TOP_STATUS_LINE+5))
<br>

<br>
typeset -r TITLE_STATUS_COL=0
<br>
typeset -r DATA_STATUS_COL=20
<br>

<br>
################################################################################
<br>
# SOME VARIABLES
<br>
################################################################################
<br>

<br>
typeset TIME_PERIOD=$((30.5*3))
<br>

<br>
################################################################################
<br>
# SOME FUNCTIONS
<br>
################################################################################
<br>

<br>
################################################################################
<br>
#
<br>
# FUNCTION: fn_tidy()
<br>
#
<br>
# INPUT PARAMETERS: None
<br>
#
<br>
# GLOBAL VARIABLES: None
<br>
#
<br>
# RETURN VALUE: &nbsp; &nbsp; ERROR_SUCCESS, ERROR_FAILURE
<br>
#
<br>
# DESCRIPTION:
<br>
# &nbsp;Performs some tidying up
<br>
#
<br>
################################################################################
<br>

<br>
fn_tidy()
<br>
{
<br>
 &nbsp; &nbsp;typeset localret=${ERROR_SUCCESS}
<br>

<br>
 &nbsp; &nbsp;if [ -f ${TEMP_ROOT}* ] ; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;rm ${TEMP_ROOT}*
<br>
 &nbsp; &nbsp;fi
<br>

<br>
 &nbsp; &nbsp;return ${localret}
<br>
} # fn_tidy
<br>

<br>
################################################################################
<br>
#
<br>
# FUNCTION: fn_log()
<br>
#
<br>
# INPUT PARAMETERS: None
<br>
#
<br>
# GLOBAL VARIABLES: None
<br>
#
<br>
# RETURN VALUE: &nbsp; &nbsp; ERROR_SUCCESS, ERROR_FAILURE
<br>
#
<br>
# DESCRIPTION:
<br>
#
<br>
################################################################################
<br>

<br>
fn_log()
<br>
{
<br>
 &nbsp; &nbsp;typeset localret=${ERROR_SUCCESS}
<br>

<br>
 &nbsp; &nbsp;return ${localret}
<br>

<br>
} # End of fn_log()
<br>

<br>

<br>
################################################################################
<br>
#
<br>
# FUNCTION: fn_log()
<br>
#
<br>
# INPUT PARAMETERS: None
<br>
#
<br>
# GLOBAL VARIABLES: None
<br>
#
<br>
# RETURN VALUE: &nbsp; &nbsp; ERROR_SUCCESS, ERROR_FAILURE
<br>
#
<br>
# DESCRIPTION:
<br>
#
<br>
################################################################################
<br>

<br>
fn_displayStatus()
<br>
{
<br>
 &nbsp; &nbsp;typeset localret=${ERROR_SUCCESS}
<br>

<br>
 &nbsp; &nbsp;if [ $# -ne 2 ] ; then
<br>
&nbsp; &nbsp; local_return=${ERROR_FAILURE}
<br>
 &nbsp; &nbsp;else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;typeset type=&quot;$1&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;typeset data=&quot;$2&quot;
<br>

<br>
&nbsp; &nbsp; if [ $type = SCRIPT ] ; then
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput cup ${SCRIPT_STATUS_LINE} ${TITLE_STATUS_COL}
<br>
&nbsp; &nbsp; &nbsp; &nbsp; printf &quot;Script:&quot;
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput cup ${SCRIPT_STATUS_LINE} ${DATA_STATUS_COL}
<br>
&nbsp; &nbsp; &nbsp; &nbsp; printf $data
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput el
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;elif [ $type = DATE ] ; then
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput cup ${DATE_STATUS_LINE} ${TITLE_STATUS_COL}
<br>
&nbsp; &nbsp; &nbsp; &nbsp; printf &quot;Date:&quot;
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput cup ${DATE_STATUS_LINE} ${DATA_STATUS_COL}
<br>
&nbsp; &nbsp; &nbsp; &nbsp; printf $data
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput el
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;elif [ $type = DAYS ] ; then
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput cup ${DAYS_STATUS_LINE} ${TITLE_STATUS_COL}
<br>
&nbsp; &nbsp; &nbsp; &nbsp; printf &quot;Days in period:&quot;
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput cup ${DAYS_STATUS_LINE} ${DATA_STATUS_COL}
<br>
&nbsp; &nbsp; &nbsp; &nbsp; printf $data
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput el
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;elif [ $type = DB ] ; then
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput cup ${DB_STATUS_LINE} ${TITLE_STATUS_COL}
<br>
&nbsp; &nbsp; &nbsp; &nbsp; printf &quot;Database:&quot;
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput cup ${DB_STATUS_LINE} ${DATA_STATUS_COL}
<br>
&nbsp; &nbsp; &nbsp; &nbsp; printf $data
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput el
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;elif [ $type = STATUS ] ; then
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput cup ${STATUS_STATUS_LINE} ${TITLE_STATUS_COL}
<br>
&nbsp; &nbsp; &nbsp; &nbsp; printf &quot;Status:&quot;
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput cup ${STATUS_STATUS_LINE} ${DATA_STATUS_COL}
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput el
<br>
&nbsp; &nbsp; &nbsp; &nbsp; printf &quot;$data&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;elif [ $type = OUTPUT_FILE ] ; then
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput cup ${OUTPUT_FILE_STATUS_LINE} ${TITLE_STATUS_COL}
<br>
&nbsp; &nbsp; &nbsp; &nbsp; printf &quot;Output File:&quot;
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput cup ${OUTPUT_FILE_STATUS_LINE} ${DATA_STATUS_COL}
<br>
&nbsp; &nbsp; &nbsp; &nbsp; tput el
<br>
&nbsp; &nbsp; &nbsp; &nbsp; printf &quot;$data&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;else
<br>
&nbsp; &nbsp; &nbsp; &nbsp; clear
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp; &nbsp; &nbsp; 
<br>
 &nbsp; &nbsp;fi
<br>

<br>
 &nbsp; &nbsp;return ${localret}
<br>

<br>
} # End of fn_log()
<br>

<br>
################################################################################
<br>
#
<br>
# FUNCTION: fn_checkEnv()
<br>
#
<br>
# INPUT PARAMETERS: None
<br>
#
<br>
# GLOBAL VARIABLES: None
<br>
#
<br>
# RETURN VALUE: &nbsp; &nbsp; ERROR_SUCCESS, ERROR_FAILURE
<br>
#
<br>
# DESCRIPTION:
<br>
# &nbsp;This function checks that ORACLE_USER, ORACLE_PASSWORD and ORACLE_ARC_CONNECT
<br>
# &nbsp;are set. If this is not the case, a message is displayed, and ERROR_FAILURE
<br>
# &nbsp;is returned
<br>
#
<br>
################################################################################
<br>

<br>
fn_checkEnv()
<br>
{
<br>
 &nbsp; &nbsp;typeset localret=${ERROR_SUCCESS}
<br>
 &nbsp; &nbsp;typeset bUserSet=${FALSE}
<br>
 &nbsp; &nbsp;typeset bPasswordSet=${FALSE}
<br>
 &nbsp; &nbsp;typeset bConnectSet=${FALSE}
<br>
 &nbsp; &nbsp;typeset iNotSetCount=0
<br>
 &nbsp; &nbsp;typeset szNotSet=&quot;&quot;
<br>
 &nbsp; &nbsp;typeset szPl=&quot; &quot;
<br>
 &nbsp; &nbsp;typeset szPl1=&quot;s &quot;
<br>

<br>
 &nbsp; &nbsp;if [ -z &quot;${ORACLE_USER}&quot; ] ; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;bUserSet=${FALSE}
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;iNotSetCount=$((iNotSetCount+1))
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;localret=${ERROR_FAILURE}
<br>
 &nbsp; &nbsp;else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;bUserSet=${TRUE}
<br>
 &nbsp; &nbsp;fi
<br>
 &nbsp; &nbsp;if [ -z &quot;${ORACLE_PASSWORD}&quot; ] ; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;bPasswordSet=${FALSE}
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;iNotSetCount=$((iNotSetCount+1))
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;localret=${ERROR_FAILURE}
<br>
 &nbsp; &nbsp;else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;bPasswordSet=${TRUE}
<br>
 &nbsp; &nbsp;fi
<br>
 &nbsp; &nbsp;if [ -z &quot;${ORACLE_ARC_CONNECT}&quot; ] ; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;bConnectSet=${FALSE}
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;iNotSetCount=$((iNotSetCount+1))
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;localret=${ERROR_FAILURE}
<br>
 &nbsp; &nbsp;else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;bConnectSet=${TRUE}
<br>
 &nbsp; &nbsp;fi
<br>

<br>
 &nbsp; &nbsp;if [ ${localret} -eq ${ERROR_FAILURE} ] ; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;if [ ${iNotSetCount} -ne 1 ] ; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;szPl=&quot;s &quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;szPl1=&quot; &quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;fi
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;szReport=&quot;The following environment variable&quot;${szPl}&quot;need&quot;${szPl1}&quot;to be set:&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;if [ ${bUserSet} -eq ${FALSE} ] ; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;szNotSet=&quot; ORACLE_USER&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;fi
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;if [ ${bPasswordSet} -eq ${FALSE} ] ; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;szNotSet=${szNotSet}&quot; ORACLE_PASSWORD&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;fi
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;if [ ${bConnectSet} -eq ${FALSE} ] ; then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;szNotSet=${szNotSet}&quot; ORACLE_ARC_CONNECT&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;fi
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;echo $szReport
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;echo $szNotSet
<br>
 &nbsp; &nbsp;fi
<br>

<br>
 &nbsp; &nbsp;return ${localret}
<br>

<br>
} # End of fn_checkEnv()
<br>

<br>
################################################################################
<br>
# THE MAIN BIT
<br>
################################################################################
<br>

<br>
trap &quot;fn_displayStatus STATUS 'Interrupted\n' ; fn_tidy; exit&quot; 2 9
<br>
fn_checkEnv
<br>
if [ $? -ne ${ERROR_SUCCESS} ] ; then
<br>
 &nbsp; &nbsp;printf &quot;Environment not set appropriately\n&quot;
<br>
else
<br>

<br>
while getopts &quot;:s:t:&quot; OPT_FLAG
<br>
do
<br>
 &nbsp; case $OPT_FLAG in
<br>
 &nbsp; &nbsp;&quot;t&quot;) TIME_PERIOD=$OPTARG ;;
<br>
 &nbsp; &nbsp;&quot;*&quot;) ;;
<br>
 &nbsp; esac
<br>
done
<br>

<br>
fn_displayStatus &quot;dummy&quot; &quot;clear&quot;
<br>
fn_displayStatus SCRIPT `basename $0`
<br>
fn_displayStatus DATE `date +&quot;%d/%m/%Y`
<br>
fn_displayStatus DAYS ${TIME_PERIOD} 
<br>
fn_displayStatus DB ${ORACLE_ARC_CONNECT} 
<br>
fn_displayStatus OUTPUT_FILE &quot;${OUTPUT_DIR}/${OUTPUT_FILE}&quot; 
<br>
fn_displayStatus STATUS &quot;Getting database partition information....&quot;
<br>

<br>
PARTITIONS=`sqlplus -s ${ORACLE_USER}/${ORACLE_PASSWORD}@${ORACLE_ARC_CONNECT} &lt;&lt; EOD
<br>
set heading off
<br>
set feedback off
<br>
set pages 0
<br>
select distinct database from t_tables;
<br>
EOD`
<br>

<br>
&gt;${TEMP_FILE1}
<br>
for db in ${PARTITIONS}
<br>
do
<br>

<br>
&gt;${SPOOL_FILE}
<br>
fn_displayStatus DB $db
<br>
fn_displayStatus STATUS &quot;Selecting....&quot;
<br>

<br>
sqlplus -s ${ORACLE_USER}/${ORACLE_PASSWORD}@${db} &gt; /dev/null &lt;&lt; EOD
<br>
set heading off
<br>
set feedback off
<br>
set pages 0
<br>
set colsep ,
<br>
spool ${SPOOL_FILE}
<br>
 select b.id_ba
<br>
 from &nbsp; cu04tb12 a,
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;cu05tb05 b,
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;cu02tb01 c,
<br>
&nbsp; &nbsp; cu02tb08 d
<br>
 where &nbsp;a.id_prem = c.id_prem
<br>
 and &nbsp; &nbsp;b.id_ba = c.id_ba
<br>
 and &nbsp; &nbsp;d.id_ba = c.id_ba 
<br>
 and &nbsp; &nbsp;a.cd_rdg_stat in ( 'C', 'R')
<br>
 and &nbsp; &nbsp;a.dt_rdg_stat between (trunc(sysdate) - ${TIME_PERIOD}) and (trunc(sysdate) - 1)
<br>
 and &nbsp; &nbsp;b.cd_pp_stat &nbsp;= 'SE'
<br>
 and &nbsp; &nbsp;b.dt_pp_stat_upd = to_date(substr(a.ts_bill_unit,1,10)||' 00.00.00', 'YYYY-MM-DD HH24.MI.SS')
<br>
 and &nbsp; &nbsp;d.ts_acty like to_char(a.dt_rdg_stat, 'YYYY-MM-DD') || '%'
<br>
 and &nbsp; &nbsp;d.cd_trans_id = 5600
<br>
;
<br>
exit
<br>
EOD
<br>

<br>
cat ${SPOOL_FILE} &gt;&gt; ${TEMP_FILE1}
<br>
done
<br>

<br>
fn_displayStatus STATUS &quot;Stripping spaces from output&quot;
<br>
sed -e 's/ //g' ${TEMP_FILE1} | sort -n | sort -u &gt; ${TEMP_FILE2}
<br>
mv ${TEMP_FILE2} ${OUTPUT_DIR}/${OUTPUT_FILE}
<br>
fn_displayStatus STATUS &quot;Complete\n&quot;
<br>
fn_tidy
<br>

<br>
fi
<br>

<br>
################################################################################
<br>
# THE END
<br>
################################################################################
<br>

<br>
*************
<br>
* addscript *
<br>
*************
<br>
#!/usr/bin/ksh
<br>
#********************************************************************************
<br>
#
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; BRITISH GAS CUSTOMER 1
<br>
#
<br>
#********************************************************************************
<br>
# &nbsp; &nbsp; &nbsp; Module Id: &nbsp; &nbsp; &nbsp;addscript
<br>
# &nbsp; &nbsp; &nbsp; Module Type: &nbsp; &nbsp;Unix Script
<br>
# &nbsp; &nbsp; &nbsp; Version: &nbsp; &nbsp; &nbsp; &nbsp;v1.0
<br>
# &nbsp; &nbsp; &nbsp; Source Type: &nbsp; &nbsp;UNIX Shell script
<br>
#********************************************************************************
<br>
#
<br>
# &nbsp; &nbsp; &nbsp; Purpose:
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; To add new scripts to the list to be processed by &quot;automate&quot;
<br>
#
<br>
# &nbsp; &nbsp; &nbsp; Return Codes:
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Success &nbsp; &nbsp; &nbsp; &nbsp; 0
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Error &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Incorrect Usage 100
<br>
#
<br>
#
<br>
#
<br>
#********************************************************************************
<br>
#
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Copyright (C) British Gas Trading 2000
<br>
#
<br>
#********************************************************************************
<br>
#
<br>
# &nbsp;Functions:
<br>
#
<br>
#
<br>
#
<br>
#********************************************************************************
<br>
#
<br>
# &nbsp;File Modification History
<br>
#
<br>
#********************************************************************************
<br>
#
<br>
# &nbsp;Date &nbsp; &nbsp; &nbsp; &nbsp; Author &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Reason for change
<br>
# &nbsp;---- &nbsp; &nbsp; &nbsp; &nbsp; ------ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-----------------
<br>
# 22/06/00 &nbsp; &nbsp; &nbsp;Diep Le &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Initial Version
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
<br>
#********************************************************************************
<br>

<br>
##
<br>
# Define Variables
<br>
##
<br>
BASEDIR=/home/tx92b01/OSE_SCRIPTS
<br>
BIN=$BASEDIR/bin
<br>
OSE_SCRIPTDIR=$BASEDIR/scripts
<br>
##
<br>
# Define Functions
<br>
##
<br>
header(){
<br>
tput clear
<br>
cat &lt;&lt;!
<br>
#################################################################################
<br>

<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ADD SCRIPT
<br>

<br>

<br>
!
<br>
}
<br>

<br>

<br>
get_script(){
<br>
&nbsp; &nbsp; LOOP=0
<br>
&nbsp; &nbsp; while [ $LOOP -eq 0 ]
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo &quot;Enter the Full pathname to the script that is to be added: \n\n &gt;&gt; \c&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;read SCRIPT
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;#
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;# Ensure that the script exists
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;#
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;if [ x&quot;$SCRIPT&quot; = &quot;x&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; SCRIPT=&quot;&lt;CR&gt;&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;if [ -s $SCRIPT ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; LOOP=1
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; echo &quot;\nThe File \&quot;$SCRIPT\&quot; specified does not exist! \n&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp; done
<br>
}
<br>
#
<br>
##
<br>
# Main Script
<br>
##
<br>

<br>
header
<br>

<br>
get_script
<br>
------------------------------------------------------------------------------------------------------------
<br>
************
<br>
* automate *
<br>
************
<br>

<br>
#!/usr/bin/ksh
<br>
#********************************************************************************
<br>
#
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; BRITISH GAS CUSTOMER 1
<br>
#
<br>
#********************************************************************************
<br>
# &nbsp; &nbsp; &nbsp; Module Id: &nbsp; &nbsp; &nbsp;automate
<br>
# &nbsp; &nbsp; &nbsp; Module Type: &nbsp; &nbsp;Unix Script
<br>
# &nbsp; &nbsp; &nbsp; Version: &nbsp; &nbsp; &nbsp; &nbsp;v1.1
<br>
# &nbsp; &nbsp; &nbsp; Source Type: &nbsp; &nbsp;UNIX Shell script
<br>
#********************************************************************************
<br>
#
<br>
# &nbsp; &nbsp; &nbsp; Purpose:
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; To automate the running of Database intensive OSE reports
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; so that they execute after CORE batch processing has 
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; completed, and before the C/1 online service is available
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; therby minimising the impact on the online service.
<br>
#
<br>
# &nbsp; &nbsp; &nbsp; Return Codes:
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Success &nbsp; &nbsp; &nbsp; &nbsp; 0
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Error &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Incorrect Usage 100
<br>
#
<br>
#
<br>
#
<br>
#********************************************************************************
<br>
#
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Copyright (C) British Gas Trading 2000
<br>
#
<br>
#********************************************************************************
<br>
#
<br>
# &nbsp;Functions:
<br>
#
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;log
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;get_time
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;check_core_finished
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;check_script_windows
<br>
#
<br>
#
<br>
#********************************************************************************
<br>

<br>
##
<br>
# Define Variables
<br>
##
<br>
BASEDIR=/home/tx92b01/OSE_SCRIPTS
<br>
BIN=$BASEDIR/bin
<br>
OSE_SCRIPTDIR=$BASEDIR/scripts
<br>
DATE=$(date &quot;+%Y%m%d&quot;)
<br>
NOZEROCHECK=/home/tx92b01/intface/support/capps/logs/NoZeros_$DATE
<br>
LOGFILE=$BASEDIR/logs/automate_log_$DATE
<br>
&gt;&gt; $LOGFILE
<br>

<br>
#Define ORACLE Environment
<br>

<br>
. /home/tx92b01/.cust1_batch.sh
<br>
. /home/tx92b01/intface/scripts/.mps_var
<br>
. /home/tx92b01/intface/scripts/.mps_redbox
<br>
ORACLE_CUST_USER=cusonline
<br>
ORACLE_CUST_PASSWORD=C0med1an
<br>
export ORACLE_CUST_USER ORACLE_CUST_PASSWORD
<br>
export TWO_TASK=$ORACLE_ARC_SERVER 
<br>
export CUSTBATCHBIN=$HOME/batch/bin
<br>
export CUSTBATCHINCLUDE=$HOME/batch/include
<br>
export ORACLE_HOME=/u01/home/dba/oracle/product/7.3.4
<br>
export ULOGDIR=$HOME/logging
<br>
# Additions to path
<br>
export PATH=$PATH:$ORACLE_HOME/bin
<br>

<br>
##
<br>
# Function Definitions
<br>
##
<br>
#*******************************************************************************
<br>
#
<br>
# FUNCTION: &nbsp; &nbsp; log
<br>
#
<br>
# DESCRIPTION:
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Writes a line to the log file, adding the date to the start
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; of the line
<br>
#
<br>
#*******************************************************************************
<br>
log ()
<br>
{
<br>
echo &quot;$(date '+%y%m%d %H:%M') automate : &quot;$* | tee -a $LOGFILE
<br>
}
<br>
#*******************************************************************************
<br>
#
<br>
# FUNCTION: &nbsp; &nbsp; get_time
<br>
#
<br>
# DESCRIPTION:
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Evaluates the current time and returns it in minutes from
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;the preceding midnight.
<br>
#
<br>
#*******************************************************************************
<br>
get_time(){
<br>
&nbsp; &nbsp; CURR_TIME=$(date &quot;+%H:%M&quot;)
<br>
&nbsp; &nbsp; HRS=$(echo $CURR_TIME | awk -F: '{ print $1 }')
<br>
&nbsp; &nbsp; MIN=$(echo $CURR_TIME | awk -F: '{ print $2 }')
<br>
&nbsp; &nbsp; TOT_MIN=$(bc &lt;&lt;!
<br>
$MIN + ( $HRS * 60 )
<br>
!)
<br>
echo $TOT_MIN
<br>
}
<br>

<br>
#*******************************************************************************
<br>
#
<br>
# FUNCTION: &nbsp; &nbsp; check_core_finished
<br>
#
<br>
# DESCRIPTION:
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Repeatedly checks the opsod log to ensure that CORE batch 
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;processing has completed before allowing execution of any SQL.
<br>
#
<br>
#*******************************************************************************
<br>
check_core_finished(){
<br>
WEEKDAY=$(date &quot;+%a&quot;)
<br>
#
<br>
# If WEEKDAY is Monday then no batch will have been run, therefore just run
<br>
# scripts anyway.
<br>
#
<br>
if [ &quot;$WEEKDAY&quot; = &quot;Mon&quot; ]
<br>
then
<br>
&nbsp; &nbsp; CHECK_CORE=1
<br>
&nbsp; &nbsp; log &quot;Monday - Core Batch not running&quot;
<br>
else
<br>
#
<br>
# If NoZeros log file for today exists then core has completed
<br>
#
<br>
&nbsp; &nbsp; CHECK_CORE=$(ls -l $NOZEROCHECK* | wc -l)
<br>
fi
<br>
}
<br>

<br>

<br>
#*******************************************************************************
<br>
#
<br>
# FUNCTION: &nbsp; &nbsp; check_script_windows
<br>
#
<br>
# DESCRIPTION:
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Checks each script in the steering file &quot;execute.lst&quot; in turn
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;to ensure that its execution window has not passed. It the 
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;time window is still valid the script is then executed.
<br>
#
<br>
#*******************************************************************************
<br>
check_script_windows(){
<br>
&nbsp; &nbsp; for line in $(cat $BASEDIR/execute.lst)
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;SCRIPT=$(echo $line | awk -F\| '{ print $1 }')&nbsp; &nbsp;  &nbsp; &nbsp;# Script Name
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;WINDOW_MINS=$(echo $line | awk -F\| '{ print $2 }')&nbsp; &nbsp; # Window in Mins for Script to run
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;ONLINE_START=$(echo $line | awk -F\| '{ print $3 }')&nbsp; &nbsp; # Start time for Online service HH:MM
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;HRS=$(echo $ONLINE_START | awk -F: '{ print $1 }')
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;MIN=$(echo $ONLINE_START | awk -F: '{ print $2 }')
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;START_ONLINE=$(bc &lt;&lt;!
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;$MIN + ( $HRS * 60 )
<br>
!)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;CURRENT_TIME=$(get_time)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;CHECK_WINDOW=$(expr $CURRENT_TIME + $WINDOW_MINS)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;#
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;# If the Current time Plus the Script Window Time crosses the Online service threshold
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;# then do not run the script.
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;#
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;if [ $CHECK_WINDOW -gt $START_ONLINE ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; log &quot;The time window for running \&quot;$SCRIPT\&quot; has been exceeded. Script not run&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; log &quot;Running Script ...\&quot;$SCRIPT\&quot;&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; nohup $OSE_SCRIPTDIR/$SCRIPT &amp;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp; done
<br>
}
<br>

<br>
##
<br>
# Main Script
<br>
##
<br>

<br>
log &quot;STARTED&quot;
<br>

<br>
CHECK_CORE=0
<br>
while [ $CHECK_CORE -eq 0 ]
<br>
do
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; # Repeatedley check that core has finished
<br>
&nbsp; &nbsp; # before attempting to run any sql
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; check_core_finished
<br>
&nbsp; &nbsp; if [ $CHECK_CORE -eq 0 ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;#
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;# Wait 5 minutes before checking again
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;#
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;log &quot;CORE Not completed. Sleeping for 5 Minutes&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;sleep 300
<br>
&nbsp; &nbsp; fi
<br>
done
<br>
#
<br>
# Now that Core has finished, For each script to be run determine whether or not its execution window 
<br>
# has been exceeded
<br>
#
<br>
check_script_windows
<br>
log &quot;COMPLETED&quot;
<br>
---------------------------------------------------------------------------------------------------------
<br>
***********
<br>
* killsql *
<br>
***********
<br>
for pid in $(ps -fu &nbsp;$LOGNMAME | grep sqlplus | grep -v grep | awk '{ print $2 }')
<br>
do
<br>
&nbsp; &nbsp; kill -9 $pid
<br>
done
<br>
----------------------------------------------------------------------------------------------------------
<br>
************
<br>
* Makepass *
<br>
************
<br>
#!/usr/bin/ksh 
<br>
BASEDIR=/capps/workarea/tony/newusers
<br>
STEERFILE=$BASEDIR/USERLIST
<br>
PASSWORD=&quot;9UZoM0GhR3V/Q,3.dM&quot;
<br>
NEWGROUPS=$BASEDIR/NEWGROUPS
<br>
SYSTEM=$(uname -n | sed s/&quot;pust&quot;//g)
<br>
&gt; PASSWD_92
<br>
&gt; PASSWD_93
<br>
&gt; PASSWD_96
<br>
&gt; UPDATE_PASSWD_92
<br>
&gt; UPDATE_PASSWD_93
<br>
&gt; UPDATE_PASSWD_96
<br>
#
<br>
##
<br>
# Function definitions
<br>
##
<br>
#
<br>
make_new_user(){
<br>
&nbsp; &nbsp; user=$1
<br>
&nbsp; &nbsp; group=$2
<br>
&nbsp; &nbsp; USERID=&quot;NNN&quot;
<br>
&nbsp; &nbsp; shift
<br>
&nbsp; &nbsp; shift
<br>
&nbsp; &nbsp; USERNAME=$*
<br>
&nbsp; &nbsp; GID=$(grep &quot;^$group:&quot; $NEWGROUPS | awk -F: '{ print $2 }')
<br>
&nbsp; &nbsp; echo $user&quot;:&quot;$PASSWORD&quot;:&quot;$USERID&quot;:&quot;$GID&quot;:&quot;$USERNAME&quot;:/home/&quot;$user&quot;:/usr/bin/ksh&quot;
<br>
}
<br>

<br>
modify_user(){
<br>
&nbsp; &nbsp; echo &quot;Modifying users entry&quot;
<br>
&nbsp; &nbsp; user=$1
<br>
&nbsp; &nbsp; group=$2
<br>
&nbsp; &nbsp; USERID=$3
<br>
&nbsp; &nbsp; shift
<br>
&nbsp; &nbsp; shift
<br>
&nbsp; &nbsp; USERNAME=$*
<br>
&nbsp; &nbsp; GID=$(grep &quot;^$group:&quot; $NEWGROUPS | awk -F: '{ print $2 }')
<br>
&nbsp; &nbsp; echo $user&quot;:&quot;$PASSWORD&quot;:&quot;$USERID&quot;:&quot;$GID&quot;:&quot;$USERNAME&quot;:/home/&quot;$user&quot;:/usr/bin/ksh&quot;
<br>
}
<br>

<br>
##
<br>
# Main Script
<br>
##
<br>
cat $STEERFILE | while read line
<br>
do
<br>
&nbsp; &nbsp; NAME=$(echo $line | awk -F, '{ print $1 }')
<br>
&nbsp; &nbsp; USER=$(echo $line | awk -F, '{ print $2 }')
<br>
&nbsp; &nbsp; GROUP=$(echo $line | awk -F, '{ print $3 }')
<br>
&nbsp; &nbsp; UXACC=$(echo $line | awk -F, '{ print $4 }')
<br>
&nbsp; &nbsp; DBACC=$(echo $line | awk -F, '{ print $5 }')
<br>
&nbsp; &nbsp; MACHINES=$(echo $line | awk -F, '{ for(cnt=6;cnt&lt;=NF;cnt++) { printf(&quot;%s &quot;,$cnt)} printf(&quot;\n&quot;) }') 
<br>
&nbsp; &nbsp; ##
<br>
&nbsp; &nbsp; # Get Existing Password Entry
<br>
&nbsp; &nbsp; ##
<br>
&nbsp; &nbsp; OLDENTRY=$(grep &quot;^$USER:&quot; /etc/passwd)
<br>
&nbsp; &nbsp; if [ x&quot;$OLDENTRY&quot; = &quot;x&quot; ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo &quot;USER: &quot;$USER&quot; Does not have an account&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;for system in $MACHINES
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; make_new_user $USER $GROUP $NAME | tee -a PASSWD_$system
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;done
<br>
&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;UID=$(echo $OLDENTRY | awk -F: '{ print $3 }')
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;modify_user $USER $GROUP $UID $NAME | tee -a UPDATE_PASSWD_$system
<br>
&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp; ##
<br>
&nbsp; &nbsp; # Make Password Entry
<br>
&nbsp; &nbsp; ##
<br>

<br>
done
<br>

<br>

<br>
exit
<br>

<br>

<br>
hughest:9UZoM0GhR3V/Q,3.dM:730:107:Tony Hughes:/home/hughest:/usr/bin/ksh
<br>
--------------------------------------------------------------------------------------------------------------------
<br>
*************
<br>
* checkuser *
<br>
*************
<br>
#!/usr/bin/ksh
<br>
##
<br>
# Variable defintions
<br>
##
<br>
BASEDIR=/capps/workarea/tony/newusers
<br>
USERLIST=$BASEDIR/userlist
<br>
##
<br>
# format of userlist
<br>
##
<br>
#shadm am
<br>
#stevensp am
<br>
#garchab am
<br>
#wynns ace
<br>
#dieple business
<br>
#baten business
<br>

<br>
##
<br>
# newgroups
<br>
##
<br>
# ace:800
<br>
# aft:801
<br>
# am:802
<br>
# bst:803
<br>
# business:804
<br>
# config:805
<br>
# fi:806
<br>
# ocm:807
<br>
# ops:808
<br>
# ose24hr:809
<br>
# regtest:810
<br>

<br>
##
<br>
# Function Definitions
<br>
##
<br>
read_file(){
<br>
exec 3&lt; $USERLIST
<br>
LOOP=0
<br>
while [ $LOOP -eq 0 ]
<br>
do
<br>
&nbsp; &nbsp; read line &lt;&amp;3
<br>
&nbsp; &nbsp; if [ x&quot;$line&quot; != &quot;x&quot; ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;user=$(echo $line | awk '{ print $1 }')
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;group=$(echo $line | awk '{ print $2 }')
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;##
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;# Check That user exists in /etc/passwd
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;##
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;chk=$(grep &quot;^$user:&quot; /etc/passwd | wc -l)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;if [ $chk -eq 0 ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; echo $user $group | awk '{ printf(&quot;User: %-12s Group Required: %-10s USER NOT CREATED\n&quot;,$1,$2) }'
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; check_user $user $group
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;LOOP=1
<br>
&nbsp; &nbsp; fi
<br>
done
<br>
}
<br>

<br>
check_user(){
<br>
USER=$1
<br>
GROUP=$2
<br>
echo $USER $GROUP | awk '{ printf(&quot;User: %-12s Group Required: %-10s Actual Group: &quot;,$1,$2) }'
<br>
ACTGID=$(grep &quot;^$user:&quot; /etc/passwd | awk -F: '{ print $4 }')
<br>
ACTGROUP=$(grep &quot;:$ACTGID:&quot; /etc/group | awk -F: '{ print $1 }')
<br>
echo $ACTGROUP&quot; \c&quot;
<br>
if [ x&quot;$ACTGROUP&quot; = x&quot;$GROUP&quot; ]
<br>
then
<br>
&nbsp; &nbsp; echo &quot;ok&quot;
<br>
else
<br>
&nbsp; &nbsp; echo &quot;NOT SET UP&quot;
<br>
fi
<br>
}
<br>
#
<br>
##
<br>
# Main Script
<br>
##
<br>

<br>
#
<br>
# Check each user in Turn
<br>
#
<br>
read_file
<br>
--------------------------------------------------------------------------------------------------------------------
<br>
*************
<br>
* findalias *
<br>
*************
<br>
#!/usr/bin/ksh
<br>
#
<br>
#
<br>
# Shell script to read trees of directories
<br>
#
<br>
#
<br>
##
<br>
# Variable definitions
<br>
##
<br>
bold=$(tput smso)
<br>
reset=$(tput rmso)
<br>

<br>
##
<br>
#Function definitions
<br>
##
<br>

<br>
display_directory(){
<br>
&nbsp; &nbsp; DIR=$1
<br>
&nbsp; &nbsp; NEST=$2
<br>
&nbsp; &nbsp; cd $DIR
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; # Display Direcory name
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; echo $bold$DIR$reset
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; # Display files 
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; for file in $(ls -al | awk '{ if(NR&gt;3) print $0 }' | grep -v &quot;^d&quot; | awk '{ print $NF }' )
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;chk=$(grep alias $file | wc -l 2&gt; /dev/null)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;if [ $chk -ne 0 ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; echo $file&quot; : \n&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; grep alias $file 2&gt; /dev/null
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; echo
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp; done
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; # Display Sub Directories
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; for SUB in $(ls -al &nbsp;| awk '{ if(NR&gt;3) print $0 }' | grep &quot;^d&quot; | awk '{ print $NF }' )
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;#
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;# Execute recursive call to display_directory in
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;# a sub-shell to preserve variables
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;#
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;if [ &quot;$SUB&quot; != &quot;.&quot; ] &amp;&amp; [ &quot;$SUB&quot; != &quot;..&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; (display_directory $DIR/$SUB $(expr $NEST + 1))
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp; done
<br>
}
<br>

<br>

<br>
##
<br>
# Main program
<br>
##
<br>
# Check to see if parameter has been passed
<br>
if [ $# -ne 1 ]
<br>
then
<br>
&nbsp; &nbsp; TOP=$(pwd)
<br>
else
<br>
&nbsp; &nbsp; TOP=$1
<br>
fi
<br>
#
<br>
# Change to &quot;TOP&quot; directory
<br>
#
<br>
cd $TOP
<br>
LEVEL=1
<br>
display_directory $TOP $LEVEL
<br>
--------------------------------------------------------------------------------------------------------------------
<br>
********
<br>
* Grep *
<br>
********
<br>
#
<br>
# Grep to get around : &quot;/bin/grep: arg list too long&quot; Error
<br>
#
<br>
PATTERN=$1
<br>
LIST=$2
<br>
#
<br>
# Extract any directory info
<br>
#
<br>
DIR=$(echo $LIST | awk -F\/ '{ if (NR==1 &amp;&amp; NF &gt; 1)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;{
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;for(cnt=1;cnt&lt;=NF;cnt++)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;{
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; printf(&quot;%s/&quot;,$(cnt))
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;printf(&quot;\n&quot;)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; }')
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; if [ x&quot;$DIR&quot; = &quot;x&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;DIR=$(pwd)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; fi
<br>
LINES=$(ls -l $LIST | wc -l)
<br>
#
<br>
# Create temporary directory to allow directories listing to be produced
<br>
# for use in subsequent calculations (avoids grep overflow error)
<br>
#
<br>
OLDIR=$(pwd)
<br>
TMPDIR=/tmp/Grep$$
<br>
mkdir $TMPDIR &nbsp;2&gt; /dev/null
<br>
rm -f $TMPDIR/* 2&gt; /dev/null
<br>
ls $LIST &nbsp;&gt; $TMPDIR/FILELIST$$
<br>
cd $TMPDIR
<br>
#
<br>
# Split the files into manageable blocks for &quot;grep&quot;
<br>
#
<br>
split -l 100 $TMPDIR/FILELIST$$
<br>
#
<br>
# Process the &quot;grep&quot; command
<br>
#
<br>
cd $DIR 2&gt; /dev/null
<br>
for FILE in $(ls $TMPDIR/x*)
<br>
do
<br>
vi $FILE
<br>
&nbsp; &nbsp; grep $PATTERN $(cat $FILE)
<br>
done
<br>
#
<br>
# Remove the temporary directory
<br>
#
<br>
cd $OLDIR
<br>
rm -rf $TMPDIR
<br>
------------------------------------------------------------------------------------------------------------------
<br>
************
<br>
* menuprog *
<br>
************
<br>
#!/bin/ksh
<br>
#
<br>
# Default to menu directory if environment variable not set
<br>
#
<br>
########################################################################
<br>
#
<br>
# menu.ksh
<br>
#
<br>
#
<br>
# Shell Script to generate menu system from flat files
<br>
#
<br>
# V 1.1
<br>
#
<br>
# Modification History
<br>
#
<br>
# 1.1&nbsp; &nbsp; 3/10/98&nbsp; &nbsp;  &nbsp; &nbsp;Date Created
<br>
#
<br>
########################################################################
<br>
#
<br>
############################
<br>
# Variable Definitions
<br>
############################
<br>
#
<br>
MLC=${MLC=&quot;/home/capps/workarea/tony/ops&quot;}
<br>
MENUTREE=&quot;&quot;
<br>
BOLD=$(tput smso)
<br>
RESET=$(tput rmso)
<br>
#
<br>
############################
<br>
# Function Definitions
<br>
############################
<br>
#
<br>
# Function to display menu
<br>
#
<br>
Displaymenu(){
<br>
MENU=$1
<br>
TREE=$TREE$MENU&quot;:&quot;
<br>
tput clear
<br>
Title=$(head -1 $MLC/$MENU)
<br>
echo &quot;(v1.1)&nbsp; &nbsp;  &nbsp; &nbsp;&quot;$BOLD$Title$RESET&quot;\n\n&quot;
<br>
DisplayOptions
<br>
}
<br>
#
<br>
# Function to display menu options
<br>
#
<br>
DisplayOptions(){
<br>
#
<br>
# Initialise Arrays to hold meu information
<br>
#
<br>
set -A opt_type
<br>
set -A opt_text
<br>
set -A opt_comm
<br>
cnt=0
<br>
exec 3&lt; $MLC/$MENU
<br>
numopts=$(wc -l &lt; $MLC/$MENU)
<br>
numopts=$(expr $numopts - 1)
<br>
while [ $cnt -le $numopts ]
<br>
do
<br>
&nbsp; &nbsp; read &lt;&amp;3 Menuline
<br>
&nbsp; &nbsp; ix=$cnt
<br>
&nbsp; &nbsp; cnt=$(expr $cnt + 1)
<br>
&nbsp; &nbsp; if [ $cnt -gt 1 ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;set ${opt_type[$ix]=$(echo $Menuline | awk -F, '{ print $1 }')}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;set ${opt_text[$ix]=$(echo $Menuline | awk -F, '{ print $2 }')}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;set ${opt_comm[$ix]=$(echo $Menuline | awk -F, '{ print $3 }')}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;#
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;# Display Menu Option
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;#
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo &quot;&nbsp; &nbsp; &quot;$ix&quot;)&nbsp; &nbsp; &quot;${opt_text[$ix]}
<br>
&nbsp; &nbsp; fi
<br>
done
<br>
echo &quot;\n\n&quot;
<br>
#
<br>
# Get Menu Option
<br>
#
<br>
fromto 1 $numopts
<br>
}
<br>
#
<br>
# Function to read menu selections
<br>
#
<br>
fromto(){
<br>
&nbsp; &nbsp; MESG=&quot;&nbsp; &nbsp; Enter Selection ($1 - $2) :&quot;
<br>
&nbsp; &nbsp; FROM=$1
<br>
&nbsp; &nbsp; TO=$2
<br>
&nbsp; &nbsp; ftloop=0
<br>
&nbsp; &nbsp; while [ $ftloop -eq 0 ]
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo &quot;$MESG \c&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;read FT
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;if [ &quot;$FT&quot; = &quot;&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; FT=9999
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;if [ &quot;$FT&quot; = &quot;q&quot; ] || [ &quot;$FT&quot; = &quot;Q&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; ftloop=1
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; set -A opt_type
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; set -A opt_comm
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; FT=1
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; lastmenu=$(echo $TREE | awk -F: '{ print $(NF-2) }')
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; set ${opt_type[$FT]=&quot;m&quot;}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; set ${opt_comm[$FT]=$lastmenu}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Striptree
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; if [ &quot;$TREE&quot; = &quot;&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;exit
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Striptree
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; if [ $FT -lt $FROM ] || [ $FT -gt $TO ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;echo &quot;&nbsp; &nbsp;  &nbsp; &nbsp;INVALID INPUT ...&quot;&nbsp; &nbsp; 
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;ftloop=1
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp; done
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; # Process Option
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; case $( echo ${opt_type[FT]} | tr &quot;[a-z]&quot; &quot;[A-Z]&quot;) in
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;P&quot;) ${opt_comm[FT]}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; &nbsp; lastmenu=$(echo $TREE | awk -F: '{ print $(NF-1) }')
<br>
&nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; &nbsp; Striptree
<br>
&nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; &nbsp; Displaymenu $lastmenu;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;M&quot;) Displaymenu ${opt_comm[FT]};;
<br>
&nbsp; &nbsp; esac
<br>
}
<br>
#
<br>
# Function to strip off the last item in the TREE variable
<br>
#
<br>
Striptree(){
<br>
&nbsp; &nbsp; TREE=$(echo $TREE | awk -F: '{  &nbsp; &nbsp;for(cnt=1;cnt&lt;(NF-1);cnt++)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp;{
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;printf(&quot;%s:&quot;,$(cnt))
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; }
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; printf(&quot;\n&quot;)
<br>
}')
<br>
}
<br>

<br>
#
<br>
############################
<br>
# Main Program
<br>
############################
<br>
#
<br>
Displaymenu mlc 
<br>
-------------------------------------------------------------------------------------------------------------------
<br>
********
<br>
* tree *
<br>
********
<br>

<br>
#!/usr/bin/ksh
<br>
#
<br>
#
<br>
# Shell script to read trees of directories
<br>
#
<br>
#
<br>
##
<br>
# Variable definitions
<br>
##
<br>
bold=$(tput smso)
<br>
reset=$(tput rmso)
<br>

<br>
##
<br>
#Function definitions
<br>
##
<br>

<br>
display_directory(){
<br>
&nbsp; &nbsp; DIR=$1
<br>
&nbsp; &nbsp; NEST=$2
<br>
&nbsp; &nbsp; cd $DIR
<br>
&nbsp; &nbsp; CNT=1
<br>
&nbsp; &nbsp; while [ $CNT -lt $NEST ]
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo &quot;&nbsp; &nbsp; \c&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;CNT=$(expr $CNT + 1)
<br>
&nbsp; &nbsp; done
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; # Display Direcory name
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; echo $bold$DIR$reset
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; # Display files indented
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; cat &lt;&lt;-!&gt; /tmp/lister$$
<br>
&nbsp; &nbsp; ls -al | awk '{ if(NR&gt;3) print \$0 }' | grep -v &quot;^d&quot; | awk '{ print \$NF }' | pr -8t | awk '{ for(cnt=1;cnt&lt;$NEST;cnt++)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;{
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; printf(&quot;&nbsp; &nbsp; &quot;)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;print \$0
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;}'
<br>
&nbsp; &nbsp; !
<br>
&nbsp; &nbsp; ksh /tmp/lister$$
<br>
&nbsp; &nbsp; rm -f /tmp/lister$$
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; # Display Sub Directories
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; for SUB in $(ls -al &nbsp;| awk '{ if(NR&gt;3) print $0 }' | grep &quot;^d&quot; | awk '{ print $NF }' )
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;#
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;# Execute recursive call to display_directory in
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;# a sub-shell to preserve variables
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;#
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;(display_directory $DIR/$SUB $(expr $NEST + 1))
<br>
&nbsp; &nbsp; done
<br>
}
<br>

<br>

<br>
##
<br>
# Main program
<br>
##
<br>

<br>
# Check to see if parameter has been passed
<br>
if [ $# -ne 1 ]
<br>
then
<br>
&nbsp; &nbsp; TOP=$(pwd)
<br>
else
<br>
&nbsp; &nbsp; TOP=$1
<br>
fi
<br>
#
<br>
# Change to &quot;TOP&quot; directory
<br>
#
<br>
cd $TOP
<br>
LEVEL=1
<br>
display_directory $TOP $LEVEL
<br>
---------------------------------------------------------------------------------------------------------------
<br>
***********
<br>
* gen_sql *
<br>
***********
<br>
OUT_FILE=/home/dieple/workarea/EPPS/diep.sql
<br>
IN_FILE=/home/dieple/workarea/EPPS/example.txt
<br>

<br>
###
<br>
###
<br>
grep &quot;^[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]&quot; $IN_FILE | awk '{printf(&quot;select a.id_mtr_sys, b.id_ba from cu04tb81 a, cu02tb01 b where a.id_prem=b.id_prem and b.cd_ba_stat in (#A#, #T#) &nbsp;and a.id_mtr_sys=#%s#;\n&quot;,$1)}' &nbsp;| sed s/#/\'/g &gt; $OUT_FILE
<br>

<br>
---------------------------------------------------------------------------------------------------------------
<br>
*********
<br>
* count *
<br>
*********
<br>
#*******************************************************************************
<br>
#
<br>
# FUNCTION:&nbsp; &nbsp; jot
<br>
#
<br>
# DESCRIPTION: &nbsp;Function to generate numerical lists
<br>
#
<br>
#*******************************************************************************
<br>
jot(){
<br>
start=$1
<br>
finish=$2
<br>
if [ $3 ]
<br>
then
<br>
&nbsp; &nbsp; incr=$3
<br>
else
<br>
&nbsp; &nbsp; incr=1
<br>
fi
<br>
if [ $start -lt $finish ]
<br>
then
<br>
&nbsp; &nbsp; while [ $start -le $finish ]
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo $start&quot; &quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;start=`expr $start + $incr`
<br>
&nbsp; &nbsp; done
<br>
else
<br>
&nbsp; &nbsp; while [ $start -ge $finish ]
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo $start&quot; &quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;start=`expr $start - $incr`
<br>
&nbsp; &nbsp; done
<br>
fi
<br>
echo
<br>
}
<br>
for mins in $(jot 1 30)
<br>
do
<br>
&nbsp; &nbsp; for secs in $(jot 0 59)
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;sleep 1
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo $mins&quot;:&quot;$secs
<br>
&nbsp; &nbsp; done
<br>
done
<br>
--------------------------------------------------------------------------------------------------------------
<br>
***************
<br>
* healthcheck *
<br>
***************
<br>
#!/usr/bin/ksh
<br>
#
<br>
# Simple script to test that the healtcheck processes are active on Pust92(AACI), 
<br>
# Pust56(ESRS), Pust41(EDTM), and Pust35(ESS)
<br>
#
<br>
# Set Variables
<br>
#
<br>
BASEDIR=/capps/sql_scripts
<br>
CONFIGFILE=$BASEDIR/health_config
<br>
#
<br>
# Process each entry - system
<br>
#
<br>
TODAY=$(date '+%d-%m-%y')
<br>
LOGFILE=healthck_log_$TODAY
<br>
cat $CONFIGFILE | while read line
<br>
do
<br>
&nbsp; &nbsp; host=$(echo $line | awk -F, '{ print $1 }')
<br>
&nbsp; &nbsp; system=$(echo $line | awk -F, '{ print $2 }')
<br>
&nbsp; &nbsp; login=$(echo $line | awk -F, '{ print $3 }')
<br>
&nbsp; &nbsp; password=$(echo $line | awk -F, '{ print $4 }')
<br>
&nbsp; &nbsp; check=$(ftp -ni $host &lt;&lt;! | grep healthck_log | wc -l
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;user &quot;$login&quot; &quot;$password&quot;
<br>
&nbsp; &nbsp; cd healthchk/logs
<br>
&nbsp; &nbsp; dir $LOGFILE
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;pwd
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;bye
<br>
!
<br>
)
<br>
if [ $check -gt 0 ]
<br>
then
<br>
&nbsp; &nbsp; echo &quot;Healthcheck for &quot;$system&quot; is running ...&quot;
<br>
else
<br>
&nbsp; &nbsp; echo &quot;ERROR: Healthcheck for &quot;$system&quot;has not been started. Advise OSE24x7 Immediatley&quot;
<br>
fi
<br>
done
<br>
-------------------------------------------------------------------------------------------------------------------------
<br>
*****************
<br>
* cp_skip_so125 *
<br>
*****************
<br>
#!/bin/ksh
<br>
#****************************************************************************** 
<br>
#
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;BRITISH GAS CUSTOMER 1
<br>
#
<br>
#*******************************************************************************
<br>
# &nbsp; &nbsp; &nbsp; Module Id: &nbsp; &nbsp; &nbsp;CP_SKIP_SO125
<br>
# &nbsp; &nbsp; &nbsp; Module Type: &nbsp; &nbsp;Unix Script 
<br>
# &nbsp; &nbsp; &nbsp; Version: &nbsp; &nbsp; &nbsp; &nbsp;v1.1
<br>
# &nbsp; &nbsp; &nbsp; Source Type: &nbsp; &nbsp;UNIX Shell script
<br>
#*******************************************************************************#
<br>
#
<br>
# &nbsp; &nbsp; &nbsp; Purpose:
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; To skip transactions for a failed premise in CUBSO125
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; on the database
<br>
#
<br>
# &nbsp; &nbsp; &nbsp; Return Codes:
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;Success  &nbsp; &nbsp;0
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp;Error &nbsp;  &nbsp; &nbsp;2
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Incorrect Usage 100
<br>
#
<br>
# &nbsp; &nbsp; &nbsp; Parameters to this script are as follows:
<br>
#
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;-s&lt;stream number&gt;&nbsp; &nbsp; Specifies the stream that
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;has abended
<br>
#
<br>
#
<br>
#*******************************************************************************
<br>
#
<br>
# &nbsp;Functions: &nbsp;
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;SearchForIdPrem
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;UpdateIDPREM
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;SearchForIdBA
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;UpdateIDBA
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;PrintUsage
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;Log
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;Stop
<br>
#
<br>
#
<br>
#*******************************************************************************
<br>

<br>
##
<br>
# Variables used
<br>
##
<br>

<br>
. $HOME/.cust1_batch.sh
<br>

<br>
SCRIPT_NAME=$0
<br>

<br>
DBUSER=$ORACLE_CUST_USER
<br>
DBPASSWD=$ORACLE_CUST_PASSWORD
<br>

<br>
DATABASE1=CR3PRA1
<br>
DATABASE2=CR3PRB1
<br>

<br>
ID_BA=&quot;&quot;
<br>
ID_PREM=&quot;&quot;
<br>
MSID=&quot;&quot;
<br>
MSID_COUNT=&quot;&quot;
<br>
ABEND_MSG=&quot;&quot;
<br>
SQL_MSG=&quot;&quot;
<br>
STREAM_NUM=&quot;--&quot;
<br>
IDBA_PARTITION_TABLE=&quot;'CU02TB01'&quot;
<br>
IDPREM_PARTITION_TABLE=&quot;'CU09TB39'&quot;
<br>
JOB_NAME=&quot;CUBSO125&quot;
<br>
LOG_DIR=$HOME/logging
<br>
CORE_BATCH_USER=`whoami`
<br>
SKIP_LOG=$LOG_DIR/skipso125.$(date &quot;+%Y-%m-%d&quot;)
<br>
SKIP_FORMULA=&quot;to_char(add_months(to_date(supp_eff_date,'YYYY-MM-DD'),12000),'YYYY-MM-DD')&quot;
<br>

<br>
##
<br>
# Get local application server
<br>
##
<br>
APP_SERVER=$(hostname)
<br>

<br>
#*******************************************************************************
<br>
#
<br>
# FUNCTION:&nbsp; &nbsp; log
<br>
#
<br>
# DESCRIPTION:
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;Writes a line to the log file and to the screen, adding the 
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;date to the start of the line
<br>
#
<br>
#*******************************************************************************
<br>
log ()
<br>
{
<br>
echo &quot;$JOBNAME - $(date +%Y-%m-%d-%H.%M.%S): &quot;$1 &gt;&gt; $SKIP_LOG 
<br>
echo &quot;$JOBNAME - $(date +%Y-%m-%d-%H.%M.%S): &quot;$1
<br>
}
<br>

<br>
#*******************************************************************************
<br>
#
<br>
# FUNCTION:&nbsp; &nbsp; Stop
<br>
#
<br>
# DESCRIPTION:
<br>
#
<br>
#*******************************************************************************
<br>
Stop ()
<br>
{
<br>
log &quot;$SCRIPT_NAME completed With Errors on $APP_SERVER&quot;
<br>
log &quot;&quot;
<br>

<br>
exit 2
<br>
}
<br>

<br>
#*******************************************************************************
<br>
#
<br>
# FUNCTION:&nbsp; &nbsp; SearchForIdPrem
<br>
#
<br>
# DESCRIPTION:
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;This function searches an C/1 .msg file produced by the 
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;driver to find the id_ba number that has caused the abend.
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;The name of the logfile to search is built up from the job name
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;and stream number passed in on the command line.
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;The selected logfile is then searched for the string for a
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;valid ID_PREM and the following number extracted.
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;A final check is made that the extracted string is not empty
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;
<br>
#*******************************************************************************
<br>
SearchForIdPrem(){
<br>
##
<br>
# Build the name of the logfile to search in for the id_prem causing the abend.
<br>
##
<br>

<br>
echo &quot;$STREAM_NUM&quot; | sed ' s/^0// ' | read STREAM_STRING
<br>
#SEARCH_LOG_FILE=&quot;$(date &quot;+%.1Y-%.1m-%.1d&quot;)_${JOB_NAME}_${CORE_BATCH_USER}_$STREAM_STRING.msg&quot;
<br>
SEARCH_LOG_FILE=125LOG.TXT
<br>
log &quot;Trying to find abend information in $SEARCH_LOG_FILE&quot;
<br>

<br>
##
<br>
# Get the last id_prem from the logfile
<br>
##
<br>

<br>
if [[ -a $BATCHFILE_PATH/$SEARCH_LOG_FILE ]]
<br>
then 
<br>
&nbsp; &nbsp; ID_PREM=$(tail -20 $BATCHFILE_PATH/$SEARCH_LOG_FILE &nbsp;| grep &quot;ID-PREM&quot; | awk '{ print $NF }' | tail -1)
<br>
&nbsp; &nbsp; ##
<br>
&nbsp; &nbsp; # If that fails search for PREM:
<br>
&nbsp; &nbsp; ##
<br>
&nbsp; &nbsp; if [ x&quot;$ID_PREM&quot; = &quot;x&quot; ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;ID_PREM=$(tail -20 $BATCHFILE_PATH/$SEARCH_LOG_FILE | grep PREM | awk -F&quot;PREM:&quot; '{ print $2 }' | awk '{ print $1 }' | tail -1)
<br>
&nbsp; &nbsp; fi
<br>
else
<br>
&nbsp; &nbsp; 
<br>
&nbsp; &nbsp; log &quot;Failed to read logfile $BATCHFILE_PATH/$SEARCH_LOG_FILE&quot;
<br>
&nbsp; &nbsp; Stop
<br>
fi
<br>
}
<br>
#*******************************************************************************
<br>
#
<br>
# FUNCTION:&nbsp; &nbsp; SearchForIdBA
<br>
#
<br>
# DESCRIPTION:
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;This function searches an C/1 .msg file produced by the 
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;driver to find the id_ba number that has caused the abend.
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;The name of the logfile to search is built up from the job name
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;and stream number passed in on the command line.
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;The selected logfile is then searched for the string for a
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;valid ID_BA and the following number extracted.
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;A final check is made that the extracted string is not empty
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;
<br>
#*******************************************************************************
<br>
SearchForIdBA ()
<br>
{
<br>
##
<br>
# Build the name of the logfile to search in for the id_ba causing the abend.
<br>
##
<br>

<br>
echo &quot;$STREAM_NUM&quot; | sed ' s/^0// ' | read STREAM_STRING
<br>
#SEARCH_LOG_FILE=&quot;$(date &quot;+%.1Y-%.1m-%.1d&quot;)_${JOB_NAME}_${CORE_BATCH_USER}_$STREAM_STRING.msg&quot;
<br>
SEARCH_LOG_FILE=125LOG.TXT
<br>
log &quot;Trying to find abend information in $SEARCH_LOG_FILE&quot;
<br>

<br>
##
<br>
# Get the last id_ba from the logfile
<br>
##
<br>

<br>
if [[ -a $BATCHFILE_PATH/$SEARCH_LOG_FILE ]]
<br>
then 
<br>
&nbsp; &nbsp; tail -40 $BATCHFILE_PATH/$SEARCH_LOG_FILE &nbsp;| \
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;tr -d &quot;[\012]&quot; | read WHOLE_LINE 
<br>
&nbsp; &nbsp; echo $WHOLE_LINE | sed 's/ //g' | \
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;sed 's/^.*[Ii][Dd]\-[Bb][Aa][ =:]*//' | \
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;cut -c 1-10 | \
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;grep '^[0-9]*$' | \
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;read ID_BA
<br>
else
<br>
&nbsp; &nbsp; 
<br>
&nbsp; &nbsp; log &quot;Failed to read logfile $BATCHFILE_PATH/$SEARCH_LOG_FILE&quot;
<br>
&nbsp; &nbsp; Stop
<br>
fi
<br>

<br>
##
<br>
# Check that the string found is not empty
<br>
# further validation is performed later
<br>
##
<br>

<br>
if [[ ${#ID_BA} != 0 ]]
<br>
then
<br>
&nbsp; &nbsp; log &quot;ID_BA $ID_BA found&quot;
<br>
else
<br>
&nbsp; &nbsp; clear
<br>
  &nbsp; &nbsp;echo &quot; &quot;
<br>
&nbsp; &nbsp; log &quot;Failed to find valid ID_BA in logfile $SEARCH_LOG_FILE&quot;
<br>
  &nbsp; &nbsp;echo &quot; &quot;
<br>
&nbsp; &nbsp; while :
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp; echo &quot;&quot;
<br>
&nbsp; &nbsp; echo &quot;From the logfile do you know the ID_BA? y/n&quot;
<br>
&nbsp; &nbsp; echo &quot;&quot;
<br>
&nbsp; &nbsp; read ans
<br>
&nbsp; &nbsp; case $ans in
<br>
 &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;y|Y|yes|YES|Yes ) &nbsp;&nbsp; &nbsp; clear
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; echo &quot;Please enter the ID_BA&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; echo &quot;&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; read ID_BA
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; clear
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; echo &quot;&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; break&nbsp; &nbsp;  &nbsp; &nbsp;;;
<br>
 &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;n|N|no|NO|No )  &nbsp; &nbsp;echo &quot;Exiting....&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;exit 0 &nbsp; &nbsp; &nbsp; &nbsp;;; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
<br>
 &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;* )  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;clear
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; echo &quot;Invalid response&quot; &nbsp;;; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
<br>
 &nbsp; esac
<br>
done
<br>

<br>
fi
<br>

<br>
##
<br>
# Attempt to find the reason that caused the abend 
<br>
##
<br>
grep -n &quot;CIS ABEND MESSAGE&quot; $BATCHFILE_PATH/$SEARCH_LOG_FILE | while read ABEND_MSG_LINE
<br>
do
<br>
&nbsp; &nbsp; echo &quot;$ABEND_MSG_LINE&quot; | cut -c 4- | read ABEND_MSG 
<br>
done
<br>

<br>
if [[ $ABEND_MSG = &quot;&quot; ]]
<br>
then
<br>
&nbsp; &nbsp; log &quot;Failed to find CIS Abend msg from logfile $SEARCH_LOG_FILE&quot;
<br>
else
<br>
&nbsp; &nbsp; log &quot;Abend msg - &nbsp;$ABEND_MSG&quot;&nbsp; &nbsp; 
<br>
fi
<br>
}
<br>

<br>
#*******************************************************************************
<br>
#
<br>
# END OF FUNCTION SearchForIdBA
<br>
#
<br>
#*******************************************************************************
<br>

<br>
#*******************************************************************************
<br>
#
<br>
# FUNCTION: &nbsp; &nbsp; UpdateIDPREM
<br>
#
<br>
# DESCRIPTION:
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; This function is called once for each &nbsp;ID_PREM to be updated
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; It first determines which instance of the database the ID_PREM
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; is held on.
<br>
#
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; The following script wide variables are used as input to this
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; function:
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ID_PREM &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; the ID_PREM to update
<br>
#
<br>
#*******************************************************************************
<br>

<br>
UpdateIDPREM ()
<br>
{
<br>

<br>
log &quot;Finding out which database owns the ID_PREM $ID_PREM&quot;
<br>

<br>
SQL_RETURN_TEXT=$(sqlplus -s $DBUSER/$DBPASSWD@$DATABASE1 &lt;&lt;END_SQL_1
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;set heading OFF;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;select DATABASE from T_PARTITIONS
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;where TABLENAME &nbsp; = $IDPREM_PARTITION_TABLE
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;and LOW_VALUE &nbsp;&lt;= $ID_PREM
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;and HIGH_VALUE &gt;= $ID_PREM;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;exit SQL.SQLCODE;
<br>
END_SQL_1)
<br>

<br>
SQL_RESULT=$?
<br>
if (( $SQL_RESULT != 0 ))
<br>
then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS $SQL_RESULT occured while selecting from T_PARTITIONS&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 1 $SQL_RETURN_TEXT&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS OK while selecting from T_PARTITIONS&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 1 $SQL_RETURN_TEXT&quot;
<br>
fi
<br>

<br>
##
<br>
# Get the database name returned by sql
<br>
##
<br>
echo &quot;$SQL_RETURN_TEXT&quot; | awk ' !/^$/ {print $0} ' | read IDPREM_DATABASE
<br>
log &quot;ID_PREM $ID_PREM found to be on Database Instance $IDPREM_DATABASE&quot;
<br>
##
<br>
# Log the 'before update' picture
<br>
##
<br>
SQL_RETURN_TEXT=$(sqlplus -s $DBUSER/$DBPASSWD@$DATABASE2 &lt;&lt; END_SQL_5
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;select * from cu09tb39
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;where id_prem = $ID_PREM;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;exit SQL.SQLCODE;
<br>
END_SQL_5)
<br>

<br>
SQL_RESULT=$?
<br>

<br>
if (( $SQL_RESULT != 0 ))
<br>
then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS $SQL_RESULT occured while selecting from CU09TB39&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 5 $SQL_RETURN_TEXT&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS OK while selecting from CU09TB39&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 5 $SQL_RETURN_TEXT&quot;
<br>
fi
<br>

<br>

<br>
##
<br>
# Update rows
<br>
##
<br>
SQL_RETURN_TEXT=$(sqlplus -s $DBUSER/$DBPASSWD@$DATABASE2 &lt;&lt;END_SQL_6
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;set heading off;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;delete from cu09tb39 
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;where id_prem = $ID_PREM;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;exit SQL.SQLCODE;
<br>
END_SQL_6)
<br>

<br>
SQL_RESULT=$?
<br>

<br>
if (( $SQL_RESULT != 0 ))
<br>
then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS $SQL_RESULT occured while deleting from CU09TB39&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 6 $SQL_RETURN_TEXT&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS OK while deleting from &nbsp;CU09TB39&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 6 $SQL_RETURN_TEXT&quot;
<br>
fi
<br>

<br>
NumRows=$(expr `echo $SQL_RETURN_TEXT|cut -d' ' -f1`)
<br>
if [ $NumRows -eq 0 ]
<br>
then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 6 Cannot find ID_PREM $ID_PREM on $DATABASE2&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
fi
<br>

<br>

<br>
##
<br>
# Log the 'after update' picture
<br>
##
<br>
SQL_RETURN_TEXT=$(sqlplus -s $DBUSER/$DBPASSWD@$DATABASE2 &lt;&lt; END_SQL_7
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;select *
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; from CU09TB39
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; where id_prem = $ID_PREM;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;exit SQL.SQLCODE;
<br>
END_SQL_7)
<br>

<br>
SQL_RESULT=$?
<br>

<br>
if (( $SQL_RESULT != 0 ))
<br>
then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS $SQL_RESULT occured while selecting from CU09TB39&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 7 $SQL_RETURN_TEXT&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS OK while selecting from CU09TB39&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 7 $SQL_RETURN_TEXT&quot;
<br>
fi
<br>

<br>

<br>
}
<br>
#*******************************************************************************
<br>
#
<br>
# FUNCTION:&nbsp; &nbsp; UpdateIDBA
<br>
#
<br>
# DESCRIPTION:
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;This function is called once for each ID_BA to be updated
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;It first determines which instance of the database the ID_BA
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;is held on. 
<br>
#
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;The following script wide variables are used as input to this
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;function:
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; ID_BA&nbsp; &nbsp;  &nbsp; &nbsp;the ID_BA to update
<br>
#
<br>
#*******************************************************************************
<br>

<br>
UpdateIDBA ()
<br>
{
<br>

<br>
log &quot;Finding out which database owns the ID_BA $ID_BA&quot;
<br>

<br>
SQL_RETURN_TEXT=$(sqlplus -s $DBUSER/$DBPASSWD@$DATABASE1 &lt;&lt;END_SQL_1
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;set heading OFF;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;select DATABASE from T_PARTITIONS
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;where TABLENAME &nbsp; = $IDBA_PARTITION_TABLE
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;and LOW_VALUE &nbsp;&lt;= $ID_BA 
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;and HIGH_VALUE &gt;= $ID_BA;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;exit SQL.SQLCODE;
<br>
END_SQL_1)
<br>

<br>
SQL_RESULT=$?
<br>
if (( $SQL_RESULT != 0 ))
<br>
then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS $SQL_RESULT occured while selecting from T_PARTITIONS&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 1 $SQL_RETURN_TEXT&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS OK while selecting from T_PARTITIONS&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 1 $SQL_RETURN_TEXT&quot;
<br>
fi
<br>

<br>
##
<br>
# Get the database name returned by sql
<br>
##
<br>
echo &quot;$SQL_RETURN_TEXT&quot; | awk ' !/^$/ {print $0} ' | read IDBA_DATABASE
<br>
log &quot;ID_BA $ID_BA found to be on Database Instance $IDBA_DATABASE&quot;
<br>

<br>

<br>
##
<br>
# Determine Premise
<br>
##
<br>
SQL_RETURN_TEXT=$(sqlplus -s $DBUSER/$DBPASSWD@$IDBA_DATABASE &lt;&lt; END_SQL_2
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;set heading off;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;select id_prem
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;from CU02TB01
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; where id_ba = $ID_BA;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;exit SQL.SQLCODE;
<br>
END_SQL_2)
<br>

<br>
SQL_RESULT=$?
<br>

<br>
if (( $SQL_RESULT != 0 ))
<br>
then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS $SQL_RESULT occured while selecting from CU02TB01&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 2 $SQL_RETURN_TEXT&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS OK while selecting from CU02TB01&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 2 ID_PREM = $SQL_RETURN_TEXT&quot;
<br>
fi
<br>

<br>
echo &quot;$SQL_RETURN_TEXT&quot; | grep &quot;no rows selected&quot;
<br>
if [[ $? = 0 ]]
<br>
then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 2 Cannot find ID_BA $ID_BA on $IDBA_DATABASE&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
fi
<br>

<br>
echo &quot;$SQL_RETURN_TEXT&quot; | awk ' !/^$/ {print $0} ' | read ID_PREM
<br>
if [[ -z ${ID_PREM} ]]
<br>
then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 2 Cannot find ID_BA $ID_BA on $IDBA_DATABASE&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
fi
<br>

<br>

<br>
##
<br>
# Determine MSID Using ID_PREM
<br>
##
<br>
SQL_RETURN_TEXT=$(sqlplus -s $DBUSER/$DBPASSWD@$IDBA_DATABASE &lt;&lt; END_SQL_3
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;set heading off;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;select id_mtr_sys
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;from CU09TB04
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; where id_prem = $ID_PREM;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;exit SQL.SQLCODE;
<br>
END_SQL_3)
<br>

<br>
SQL_RESULT=$?
<br>

<br>
if (( $SQL_RESULT != 0 ))
<br>
then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS $SQL_RESULT occured while selecting from CU09TB04&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 3 $SQL_RETURN_TEXT&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS OK while selecting from CU09TB04&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 3 ID_MTR_SYS = $SQL_RETURN_TEXT&quot;
<br>
fi
<br>

<br>
echo &quot;$SQL_RETURN_TEXT&quot; | grep &quot;no rows selected&quot;
<br>
if [[ $? = 0 ]]
<br>
then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 3 Cannot find ID_PREM $ID_PREM on $IDBA_DATABASE&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
fi
<br>

<br>
echo &quot;$SQL_RETURN_TEXT&quot; | awk ' !/^$/ {print $0} ' | read MSID
<br>
if [[ -z ${MSID} ]]
<br>
then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 3 Cannot find ID_PREM $ID_PREM on $IDBA_DATABASE&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
fi
<br>

<br>

<br>
##
<br>
# Determine if valid Fix on Fail
<br>
##
<br>
SQL_RETURN_TEXT=$(sqlplus -s $DBUSER/$DBPASSWD@$DATABASE2 &lt;&lt; END_SQL_4
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;set heading off;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;select sum(decode(id_prem,0,2,3))
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;from IN07TB01
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; where msid = $MSID;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;exit SQL.SQLCODE;
<br>
END_SQL_4)
<br>

<br>
SQL_RESULT=$?
<br>

<br>
if (( $SQL_RESULT != 0 ))
<br>
then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS $SQL_RESULT occured while selecting from IN07TB01&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 4 $SQL_RETURN_TEXT&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS OK while selecting from IN07TB01&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 4 $SQL_RETURN_TEXT&quot;
<br>
fi
<br>

<br>
echo &quot;$SQL_RETURN_TEXT&quot; | awk ' !/^$/ {print $0} ' | read MSID_COUNT
<br>
if [[ ${MSID_COUNT} -ne 5 ]]
<br>
then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;WARNING - This Skip script is inappropriate for this failure&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
fi
<br>

<br>
##
<br>
# Log the 'before update' picture
<br>
##
<br>
SQL_RETURN_TEXT=$(sqlplus -s $DBUSER/$DBPASSWD@$DATABASE2 &lt;&lt; END_SQL_5
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;select msid, id_prem, supp_eff_date 
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;from IN07TB01 
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; where msid = $MSID;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;exit SQL.SQLCODE;
<br>
END_SQL_5)
<br>

<br>
SQL_RESULT=$?
<br>

<br>
if (( $SQL_RESULT != 0 ))
<br>
then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS $SQL_RESULT occured while selecting from IN07TB01&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 5 $SQL_RETURN_TEXT&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS OK while selecting from IN07TB01&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 5 $SQL_RETURN_TEXT&quot;
<br>
fi
<br>

<br>

<br>
##
<br>
# Update rows
<br>
##
<br>
SQL_RETURN_TEXT=$(sqlplus -s $DBUSER/$DBPASSWD@$DATABASE2 &lt;&lt;END_SQL_6
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;set heading off;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;update IN07TB01 
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; set supp_eff_date = $SKIP_FORMULA
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;where msid = $MSID
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;and id_prem = 0;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;exit SQL.SQLCODE;
<br>
END_SQL_6)
<br>

<br>
SQL_RESULT=$?
<br>

<br>
if (( $SQL_RESULT != 0 ))
<br>
then
<br>
&nbsp; &nbsp; log &quot;SQL*PLUS $SQL_RESULT occured while updating IN07TB01&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 6 $SQL_RETURN_TEXT&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
else
<br>
&nbsp; &nbsp; log &quot;SQL*PLUS OK while updating IN07TB01&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 6 $SQL_RETURN_TEXT&quot;
<br>
fi
<br>

<br>
NumRows=$(expr `echo $SQL_RETURN_TEXT|cut -d' ' -f1`)
<br>
if [ $NumRows -eq 0 ]
<br>
then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 6 Cannot find MSID $MSID on $DATABASE2&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
fi
<br>

<br>

<br>
##
<br>
# Log the 'after update' picture
<br>
##
<br>
SQL_RETURN_TEXT=$(sqlplus -s $DBUSER/$DBPASSWD@$DATABASE2 &lt;&lt; END_SQL_7
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;select msid, id_prem, supp_eff_date 
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;from IN07TB01 
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; where msid = $MSID;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;exit SQL.SQLCODE;
<br>
END_SQL_7)
<br>

<br>
SQL_RESULT=$?
<br>

<br>
if (( $SQL_RESULT != 0 ))
<br>
then
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS $SQL_RESULT occured while selecting from IN07TB01&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 7 $SQL_RETURN_TEXT&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;Stop
<br>
else
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;SQL*PLUS OK while selecting from IN07TB01&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;The SQL*PLUS return text is shown below&quot;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;log &quot;Phase 7 $SQL_RETURN_TEXT&quot;
<br>
fi
<br>

<br>

<br>
}
<br>
#*******************************************************************************
<br>
#
<br>
# END OF FUNCTION:&nbsp; &nbsp; UpdateIDBA
<br>
#
<br>
#******************************************************************************* 
<br>
#*******************************************************************************
<br>
#
<br>
# FUNCTION:&nbsp; &nbsp; PrintUsage
<br>
#
<br>
# DESCRIPTION:
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;Print the correct command line to call the script
<br>
#
<br>
#*******************************************************************************
<br>

<br>
PrintUsage ()
<br>
{
<br>
echo &quot;Usage: $SCRIPT_NAME -s&lt;stream number&gt;&quot;
<br>
exit 100
<br>
}
<br>
#*******************************************************************************
<br>
#
<br>
# END OF FUNCTION PrintUsage
<br>
#
<br>
#*******************************************************************************
<br>

<br>
#*******************************************************************************
<br>
#
<br>
# Main Function
<br>
#
<br>
#*******************************************************************************
<br>

<br>
##
<br>
# Validate options and input parameters
<br>
##
<br>

<br>
if [[ $# != 1 ]]
<br>
then
<br>
&nbsp; &nbsp; PrintUsage
<br>
fi
<br>

<br>
while getopts &quot;:s:&quot; options
<br>
do
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;case $options in
<br>

<br>
  &nbsp; &nbsp;&nbsp; &nbsp; s)&nbsp; &nbsp; STREAM_NUM=$OPTARG;;
<br>

<br>
  &nbsp; &nbsp;&nbsp; &nbsp; \?)&nbsp; &nbsp; PrintUsage;; 
<br>

<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*) &nbsp; ;;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;esac
<br>
done
<br>

<br>

<br>
if [[ $SEARCH_LOG = &quot;TRUE&quot; ]] &amp;&amp; [[ $STREAM_NUM &nbsp;= &quot;--&quot; ]]
<br>
then
<br>
&nbsp; &nbsp; echo &quot;The stream number must be supplied&quot;
<br>
&nbsp; &nbsp; PrintUsage
<br>
fi
<br>

<br>
##
<br>
# First of all determine if the id_prem is available in the logfile
<br>
##
<br>
&nbsp; &nbsp; SearchForIdPrem
<br>

<br>
&nbsp; &nbsp; if [ x&quot;$ID_PREM&quot; != &quot;x&quot; ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp; ##
<br>
&nbsp; &nbsp; # Remove the offending row from the driving cursor
<br>
&nbsp; &nbsp; ##
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;UpdateIDPREM
<br>
&nbsp; &nbsp; else
<br>
&nbsp; &nbsp; ##
<br>
&nbsp; &nbsp; # Get the id_ba to process from the msg file for the abended stream
<br>
&nbsp; &nbsp; ##
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;SearchForIdBA
<br>

<br>
&nbsp; &nbsp; ##
<br>
&nbsp; &nbsp; # Update the IN07TB01 to remove the offending row from the driving cursor
<br>
&nbsp; &nbsp; ##
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; UpdateIDBA
<br>
&nbsp; &nbsp; fi
<br>

<br>
##
<br>
# Log program end
<br>
##
<br>

<br>
log &quot;$JOBNAME completed OK on $APP_SERVER&quot;
<br>

<br>
exit 0
<br>
#*******************************************************************************
<br>
#
<br>
# END OF SCRIPT: CP_SKIP_SO125
<br>
#
<br>
#*******************************************************************************
<br>
-----------------------------------------------------------------------------------------------------------------------
<br>
**********
<br>
* geftp *
<br>
**********
<br>
#!/bin/ksh
<br>
####################################################################
<br>
#
<br>
#&nbsp; &nbsp; geftp.ksh&nbsp; &nbsp; (puftp.ksh)
<br>
#
<br>
#&nbsp; &nbsp; v 1.0&nbsp; &nbsp; 4/12/1998
<br>
#
<br>
#&nbsp; &nbsp; Shell script to perform menu driven ftp between TCP/IP hosts
<br>
#
<br>
#&nbsp; &nbsp; Author&nbsp; &nbsp; Tony Hughes
<br>
#
<br>
# &nbsp; &nbsp; &nbsp; (c) Data Enterprise Ltd
<br>
#
<br>
####################################################################
<br>
#
<br>
##############
<br>
# Variables
<br>
##############
<br>
#
<br>
bold=$(tput smso)
<br>
reset=$(tput rmso)
<br>
ME=/home/capps/workarea/tony/$(basename $0)
<br>
ITEMS=${ITEMS=15}
<br>
TYPE=${TYPE=&quot;binary&quot;}
<br>
#
<br>
# Determine the invocation mode of the script
<br>
# either &quot;put&quot; or &quot;get&quot;
<br>
#
<br>
if [ &quot;$(basename $0)&quot; = &quot;geftp&quot; ]
<br>
then
<br>
&nbsp; &nbsp; MODE=&quot;GET&quot;
<br>
&nbsp; &nbsp; REMDIR=$1
<br>
else
<br>
&nbsp; &nbsp; MODE=&quot;PUT&quot;
<br>
&nbsp; &nbsp; if [ $# -gt 1 ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;OPDIR=$1
<br>
&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;OPDIR=${OPDIR=/home/capps/workarea/tony/download}
<br>
&nbsp; &nbsp; fi
<br>
fi
<br>
OPDIR=${OPDIR=/home/capps/workarea/tony/download}
<br>
#
<br>
################
<br>
# Functions
<br>
################
<br>
#
<br>
#####################################################
<br>
# Function to ensure &quot;echo&quot; works for BSD and Sys V
<br>
#####################################################
<br>
#
<br>
which_echo(){
<br>
NULL=/dev/null
<br>
if echo -n | grep 'n' &gt; $NULL 2&gt;&amp;1
<br>
then
<br>
&nbsp; &nbsp; N=''
<br>
&nbsp; &nbsp; C='\c'
<br>
else
<br>
&nbsp; &nbsp; N='-n '
<br>
&nbsp; &nbsp; C=''
<br>
fi
<br>
}
<br>
######################
<br>
# function to &nbsp;provide 
<br>
# numerical lists
<br>
######################
<br>
#
<br>
jot(){
<br>
start=$1
<br>
finish=$2
<br>
if [ $3 ]
<br>
then
<br>
&nbsp; &nbsp; incr=$3
<br>
else
<br>
&nbsp; &nbsp; incr=1
<br>
fi
<br>
if [ $start -lt $finish ]
<br>
then
<br>
&nbsp; &nbsp; while [ $start -le $finish ]
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo $N$start&quot; &quot;$C
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;start=`expr $start + $incr`
<br>
&nbsp; &nbsp; done
<br>
else
<br>
&nbsp; &nbsp; while [ $start -ge $finish ]
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo $N$start&quot; &quot;$C
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;start=`expr $start - $incr`
<br>
&nbsp; &nbsp; done
<br>
fi
<br>
echo
<br>
}
<br>
#
<br>
###################################
<br>
# Function to display menu header
<br>
###################################
<br>
#
<br>
header(){
<br>
&nbsp; &nbsp; tput clear
<br>
&nbsp; &nbsp; cat &lt;&lt;!
<br>
####################### FTP FILE TRANSFER MENU #######################
<br>

<br>
!
<br>
&nbsp; &nbsp; echo &quot;Remote: &quot;$bold$HOST$reset&quot; Directory: &quot;$bold$REMDIR$reset&quot; Transfer: &quot;$bold$TYPE$reset
<br>
&nbsp; &nbsp; echo &quot;\nLocal: &quot;$bold$OPDIR$reset&quot; Mode: &quot;$bold$MODE$reset
<br>
&nbsp; &nbsp; echo
<br>
}
<br>

<br>
#
<br>
###########################
<br>
# Function to display menus
<br>
###########################
<br>
#
<br>
menu(){
<br>
&nbsp; &nbsp; loop=0
<br>
&nbsp; &nbsp; while [ $loop -eq 0 ]
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;#
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;# Initialise Menu Array
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;#
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;set -A menuline
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;set -A filetype
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;linecnt=0
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;menuitems=$(dirlist | wc -l)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;menuitems=$(expr $menuitems - 2)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;if [ $menuitems -le 15 ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; ITEMS=$menuitems
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;for filename in $(dirlist | awk '{ if(NR&gt;2){ print substr($1,1,1) $9 } }')
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; linecnt=$(expr $linecnt + 1)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; FT=$(echo $filename | awk '{ print substr($1,1,1)}')
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; case $FT in
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&quot;d&quot;)&nbsp; &nbsp; set ${filetype[$linecnt]=&quot;DIR&quot;};;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&quot;-&quot;)&nbsp; &nbsp; set ${filetype[$linecnt]=&quot;FILE&quot;};;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&quot;l&quot;)&nbsp; &nbsp; set ${filetype[$linecnt]=&quot;LINK&quot;};;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;*)&nbsp; &nbsp; set ${filetype[$linecnt]=&quot;SPEC&quot;};;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; esac
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; set ${menuline[$linecnt]=$(echo $filename | awk '{ print substr($1,2,length($1)) }')}
<br>

<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; if [ $linecnt -eq $ITEMS ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;REDRAW=1
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;while [ $REDRAW -eq 1 ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; header
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; display_items $linecnt
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;done
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;if [ $REDRAW -eq 2 ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; break
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;header
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;linecnt=0
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;set -A menuline
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;set -A filetype
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;if [ 1$menuitems -le 115 ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; ITEMS=$menuitems
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; menuitems=$(expr $menuitems - 15)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; if [ $menuitems -lt 15 ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;ITEMS=$menuitems
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;ITEMS=15
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;done
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;ITEMS=15
<br>
&nbsp; &nbsp; done
<br>
}
<br>
#
<br>
#################################
<br>
# Function to display menu items
<br>
#################################
<br>
#
<br>
display_items(){
<br>
&nbsp; &nbsp; max=$1
<br>
&nbsp; &nbsp; for lcnt in $(jot 1 $max)
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo $lcnt&quot;)&nbsp; &nbsp; &quot;${menuline[$lcnt]}&quot; (&quot;${filetype[$lcnt]}&quot;)&quot; | \
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;awk '{ printf(&quot; %-4s %-25s %8s\n&quot;,$1,$2,$3) }'
<br>
&nbsp; &nbsp; done
<br>
&nbsp; &nbsp; getsel $max
<br>
}
<br>

<br>
#
<br>
###############################
<br>
# Function to display remote
<br>
# working directory
<br>
###############################
<br>
#
<br>
getcwd(){
<br>
&nbsp; &nbsp; if [ &quot;$REMDIR&quot; = &quot;&quot; ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;ftp -ni $HOST &lt;&lt;!
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;user &quot;$LOGINAME&quot; &quot;$PASSWORD&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;pwd
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;bye
<br>
!
<br>
&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo $REMDIR
<br>
&nbsp; &nbsp; fi
<br>
}
<br>
#
<br>
#############################
<br>
# Function to list directory 
<br>
# contents either local or
<br>
# remote depending on $MODE
<br>
#############################
<br>
#
<br>
dirlist(){
<br>
&nbsp; &nbsp; if [ &quot;$MODE&quot; = &quot;GET&quot; ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;ftp -ni $HOST &lt;&lt;!
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;user &quot;$LOGINAME&quot; &quot;$PASSWORD&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;cd $REMDIR
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;dir
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;bye
<br>
!
<br>
&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;cd $OPDIR
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;ls -al
<br>
&nbsp; &nbsp; fi
<br>
}
<br>
#
<br>
############################
<br>
# Function to process
<br>
# selection
<br>
############################
<br>
#
<br>
getsel(){
<br>
&nbsp; &nbsp; REDRAW=0
<br>
&nbsp; &nbsp; max=$1
<br>
&nbsp; &nbsp; echo
<br>
&nbsp; &nbsp; echo $N&quot;Enter Selection: (1-$max) &quot;$C
<br>
&nbsp; &nbsp; read sel
<br>
&nbsp; &nbsp; if [ &quot;$sel&quot; = &quot;&quot; ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;sel=&quot;n&quot;
<br>
&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp; case &quot;$sel&quot; in
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;q&quot;)&nbsp; &nbsp; exit;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;a&quot;)&nbsp; &nbsp; TYPE=&quot;ascii&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; REDRAW=1;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;b&quot;)&nbsp; &nbsp; TYPE=&quot;binary&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; REDRAW=1;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;n&quot;)&nbsp; &nbsp; ;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;p&quot;)&nbsp; &nbsp; MODE=&quot;PUT&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; ME=/home/capps/workarea/tony/puftp
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; REDRAW=2;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;g&quot;)&nbsp; &nbsp; MODE=&quot;GET&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; ME=/home/capps/workarea/tony/geftp
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; REDRAW=2;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;h&quot;)&nbsp; &nbsp; help
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; REDRAW=1;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;*)&nbsp; &nbsp; if [ x&quot;${filetype[$sel]}&quot; = &quot;xDIR&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;if [ &quot;$MODE&quot; = &quot;GET&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; if [ &quot;${menuline[$sel]}&quot; = &quot;..&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;NEWREMDIR=$(echo $REMDIR | awk -F\/ '{ \
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;for(cnt=2;cnt&lt;NF;cnt++)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;{
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; printf(&quot;\/%s&quot;,$(cnt))
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;printf(&quot;\n&quot;)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;}')
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;NEWREMDIR=$REMDIR&quot;/&quot;${menuline[$sel]}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; export OPDIR
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; #DEBUG
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; echo ksh $ME $NEWREMDIR
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; read xxx
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; ksh $ME $NEWREMDIR
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; REDRAW=1
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; if [ &quot;${menuline[$sel]}&quot; = &quot;..&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;NEWOPDIR=$(echo $OPDIR | awk -F\/ '{ \
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;for(cnt=2;cnt&lt;NF;cnt++)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;{
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; printf(&quot;\/%s&quot;,$(cnt))
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;printf(&quot;\n&quot;)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;}')
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;NEWOPDIR=$OPDIR&quot;/&quot;${menuline[$sel]}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; export REMDIR
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; #DEBUG
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; echo ksh $ME $NEWOPDIR
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; read xxx
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; ksh $ME $NEWOPDIR
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; REDRAW=1
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; #
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; # &nbsp;Get or Put &nbsp;the file
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; #
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; if [ &quot;$MODE&quot; = &quot;GET&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;getfile ${menuline[$sel]}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;putfile ${menuline[$sel]}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; REDRAW=1
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;fi;;
<br>
&nbsp; &nbsp; esac
<br>
}
<br>

<br>
#
<br>
#############################
<br>
# Function to &quot;get&quot; selected
<br>
# file.
<br>
#############################
<br>
#
<br>
getfile(){
<br>
&nbsp; &nbsp; remotefile=$1
<br>
&nbsp; &nbsp; ftp -ni $HOST &lt;&lt;!&gt; /dev/null 2&gt;&amp;1
<br>
&nbsp; &nbsp; user &quot;$LOGINAME&quot; &quot;$PASSWORD&quot;
<br>
&nbsp; &nbsp; $TYPE
<br>
&nbsp; &nbsp; cd $REMDIR
<br>
&nbsp; &nbsp; lcd $OPDIR
<br>
&nbsp; &nbsp; get $remotefile
<br>
&nbsp; &nbsp; bye
<br>
!
<br>
}
<br>
#
<br>
#############################
<br>
# Function to &quot;put&quot; selected
<br>
# file.
<br>
#############################
<br>
#
<br>
putfile(){
<br>
&nbsp; &nbsp; localfile=$1
<br>
&nbsp; &nbsp; ftp -ni $HOST &lt;&lt;!&gt; /dev/null 2&gt;&amp;1
<br>
&nbsp; &nbsp; user &quot;$LOGINAME&quot; &quot;$PASSWORD&quot;
<br>
&nbsp; &nbsp; $TYPE
<br>
&nbsp; &nbsp; cd $REMDIR
<br>
&nbsp; &nbsp; lcd $OPDIR
<br>
&nbsp; &nbsp; get $localfile
<br>
&nbsp; &nbsp; bye
<br>
!
<br>
}
<br>
#
<br>
############################
<br>
# Function to display help
<br>
############################
<br>
#
<br>
help(){
<br>
&nbsp; &nbsp; tput clear
<br>
&nbsp; &nbsp; cat &lt;&lt;! | more
<br>
#################### FTP MENU SYSTEM HELP SCREEN ######################
<br>

<br>
&nbsp; &nbsp; Key&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Function
<br>
&nbsp; &nbsp; a&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Switch to ASCII mode transfer
<br>
&nbsp; &nbsp; b&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Switch to BINARY mode transfer
<br>
&nbsp; &nbsp; p&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Switch to PUT mode. Send file from
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;Local host, and directory indicated
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;to Remote host.
<br>
&nbsp; &nbsp; g&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Switch to GET mode. Get files from
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;Remote host, and directory indicated
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;and transfer them to the local host.
<br>
&nbsp; &nbsp; n&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; View next screen.
<br>
&nbsp; &nbsp; &lt;Enter&gt;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; View next screen.
<br>
&nbsp; &nbsp; q&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Quit.
<br>
&nbsp; &nbsp; h&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Display this screen.
<br>
&nbsp; &nbsp; &lt;1-15&gt;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Select file or directory. If selection
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;is a directory, then a listing for the
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;new directory is displayed. If it is a 
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;file, then the file is transferred
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;depending on current mode (get or put).
<br>

<br>
!
<br>
}
<br>
#
<br>
###########################
<br>
# Function to set up FTP
<br>
# connection.
<br>
###########################
<br>
#
<br>
setup(){
<br>
&nbsp; &nbsp; tput clear
<br>
&nbsp; &nbsp; cat &lt;&lt;!
<br>
#################### SET UP FTP CONNECTION ######################
<br>

<br>
!
<br>
&nbsp; &nbsp; echo $N&quot;Enter Remote Host Name: &quot;$C
<br>
&nbsp; &nbsp; read HOST
<br>
&nbsp; &nbsp; echo $N&quot;Enter Login Name: &quot;$C
<br>
&nbsp; &nbsp; read LOGINAME
<br>
&nbsp; &nbsp; echo $N&quot;Enter Password: &quot;$C
<br>
&nbsp; &nbsp; stty -echo
<br>
&nbsp; &nbsp; read PASSWORD
<br>
&nbsp; &nbsp; stty echo
<br>
&nbsp; &nbsp; echo
<br>
&nbsp; &nbsp; export LOGINAME PASSWORD HOST
<br>
}
<br>
#
<br>
#######################
<br>
# Main Program
<br>
#######################
<br>
which_echo
<br>
REMIDR=$1
<br>
if [ x&quot;$LOGINAME&quot; = &quot;x&quot; ] || [ x&quot;$HOST&quot; = &quot;x&quot; ] || [ x&quot;$PASSWORD&quot; = &quot;x&quot; ] 
<br>
then
<br>
&nbsp; &nbsp; setup
<br>
fi
<br>
if [ x&quot;$REMDIR&quot; = &quot;x&quot; ]
<br>
then
<br>
&nbsp; &nbsp; REMDIR=$(getcwd | awk '{ print $2 }' | sed s/\&quot;//g)
<br>
fi
<br>
menu
<br>
-------------------------------------------------------------------------------------------------------------------------
<br>
*********
<br>
* puftp *
<br>
*********
<br>
#!/bin/ksh
<br>
####################################################################
<br>
#
<br>
#&nbsp; &nbsp; geftp.ksh&nbsp; &nbsp; (puftp.ksh)
<br>
#
<br>
#&nbsp; &nbsp; v 1.0&nbsp; &nbsp; 4/12/1998
<br>
#
<br>
#&nbsp; &nbsp; Shell script to perform menu driven ftp between TCP/IP hosts
<br>
#
<br>
#&nbsp; &nbsp; Author&nbsp; &nbsp; Tony Hughes
<br>
#
<br>
# &nbsp; &nbsp; &nbsp; (c) Data Enterprise Ltd
<br>
#
<br>
####################################################################
<br>
#
<br>
##############
<br>
# Variables
<br>
##############
<br>
#
<br>
bold=$(tput smso)
<br>
reset=$(tput rmso)
<br>
ME=/home/capps/workarea/tony/$(basename $0)
<br>
ITEMS=${ITEMS=15}
<br>
TYPE=${TYPE=&quot;binary&quot;}
<br>
#
<br>
# Determine the invocation mode of the script
<br>
# either &quot;put&quot; or &quot;get&quot;
<br>
#
<br>
if [ &quot;$(basename $0)&quot; = &quot;geftp&quot; ]
<br>
then
<br>
&nbsp; &nbsp; MODE=&quot;GET&quot;
<br>
&nbsp; &nbsp; REMDIR=$1
<br>
else
<br>
&nbsp; &nbsp; MODE=&quot;PUT&quot;
<br>
&nbsp; &nbsp; if [ $# -gt 1 ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;OPDIR=$1
<br>
&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;OPDIR=${OPDIR=/home/capps/workarea/tony/download}
<br>
&nbsp; &nbsp; fi
<br>
fi
<br>
OPDIR=${OPDIR=/home/capps/workarea/tony/download}
<br>
#
<br>
################
<br>
# Functions
<br>
################
<br>
#
<br>
#####################################################
<br>
# Function to ensure &quot;echo&quot; works for BSD and Sys V
<br>
#####################################################
<br>
#
<br>
which_echo(){
<br>
NULL=/dev/null
<br>
if echo -n | grep 'n' &gt; $NULL 2&gt;&amp;1
<br>
then
<br>
&nbsp; &nbsp; N=''
<br>
&nbsp; &nbsp; C='\c'
<br>
else
<br>
&nbsp; &nbsp; N='-n '
<br>
&nbsp; &nbsp; C=''
<br>
fi
<br>
}
<br>
######################
<br>
# function to &nbsp;provide 
<br>
# numerical lists
<br>
######################
<br>
#
<br>
jot(){
<br>
start=$1
<br>
finish=$2
<br>
if [ $3 ]
<br>
then
<br>
&nbsp; &nbsp; incr=$3
<br>
else
<br>
&nbsp; &nbsp; incr=1
<br>
fi
<br>
if [ $start -lt $finish ]
<br>
then
<br>
&nbsp; &nbsp; while [ $start -le $finish ]
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo $N$start&quot; &quot;$C
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;start=`expr $start + $incr`
<br>
&nbsp; &nbsp; done
<br>
else
<br>
&nbsp; &nbsp; while [ $start -ge $finish ]
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo $N$start&quot; &quot;$C
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;start=`expr $start - $incr`
<br>
&nbsp; &nbsp; done
<br>
fi
<br>
echo
<br>
}
<br>
#
<br>
###################################
<br>
# Function to display menu header
<br>
###################################
<br>
#
<br>
header(){
<br>
&nbsp; &nbsp; tput clear
<br>
&nbsp; &nbsp; cat &lt;&lt;!
<br>
####################### FTP FILE TRANSFER MENU #######################
<br>

<br>
!
<br>
&nbsp; &nbsp; echo &quot;Remote: &quot;$bold$HOST$reset&quot; Directory: &quot;$bold$REMDIR$reset&quot; Transfer: &quot;$bold$TYPE$reset
<br>
&nbsp; &nbsp; echo &quot;\nLocal: &quot;$bold$OPDIR$reset&quot; Mode: &quot;$bold$MODE$reset
<br>
&nbsp; &nbsp; echo
<br>
}
<br>

<br>
#
<br>
###########################
<br>
# Function to display menus
<br>
###########################
<br>
#
<br>
menu(){
<br>
&nbsp; &nbsp; loop=0
<br>
&nbsp; &nbsp; while [ $loop -eq 0 ]
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;#
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;# Initialise Menu Array
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;#
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;set -A menuline
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;set -A filetype
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;linecnt=0
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;menuitems=$(dirlist | wc -l)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;menuitems=$(expr $menuitems - 2)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;if [ $menuitems -le 15 ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; ITEMS=$menuitems
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;for filename in $(dirlist | awk '{ if(NR&gt;2){ print substr($1,1,1) $9 } }')
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; linecnt=$(expr $linecnt + 1)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; FT=$(echo $filename | awk '{ print substr($1,1,1)}')
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; case $FT in
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&quot;d&quot;)&nbsp; &nbsp; set ${filetype[$linecnt]=&quot;DIR&quot;};;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&quot;-&quot;)&nbsp; &nbsp; set ${filetype[$linecnt]=&quot;FILE&quot;};;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&quot;l&quot;)&nbsp; &nbsp; set ${filetype[$linecnt]=&quot;LINK&quot;};;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;*)&nbsp; &nbsp; set ${filetype[$linecnt]=&quot;SPEC&quot;};;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; esac
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; set ${menuline[$linecnt]=$(echo $filename | awk '{ print substr($1,2,length($1)) }')}
<br>

<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; if [ $linecnt -eq $ITEMS ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;REDRAW=1
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;while [ $REDRAW -eq 1 ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; header
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; display_items $linecnt
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;done
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;if [ $REDRAW -eq 2 ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; break
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;header
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;linecnt=0
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;set -A menuline
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;set -A filetype
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;if [ 1$menuitems -le 115 ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; ITEMS=$menuitems
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; menuitems=$(expr $menuitems - 15)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; if [ $menuitems -lt 15 ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;ITEMS=$menuitems
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;ITEMS=15
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;done
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;ITEMS=15
<br>
&nbsp; &nbsp; done
<br>
}
<br>
#
<br>
#################################
<br>
# Function to display menu items
<br>
#################################
<br>
#
<br>
display_items(){
<br>
&nbsp; &nbsp; max=$1
<br>
&nbsp; &nbsp; for lcnt in $(jot 1 $max)
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo $lcnt&quot;)&nbsp; &nbsp; &quot;${menuline[$lcnt]}&quot; (&quot;${filetype[$lcnt]}&quot;)&quot; | \
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;awk '{ printf(&quot; %-4s %-25s %8s\n&quot;,$1,$2,$3) }'
<br>
&nbsp; &nbsp; done
<br>
&nbsp; &nbsp; getsel $max
<br>
}
<br>

<br>
#
<br>
###############################
<br>
# Function to display remote
<br>
# working directory
<br>
###############################
<br>
#
<br>
getcwd(){
<br>
&nbsp; &nbsp; if [ &quot;$REMDIR&quot; = &quot;&quot; ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;ftp -ni $HOST &lt;&lt;!
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;user &quot;$LOGINAME&quot; &quot;$PASSWORD&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;pwd
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;bye
<br>
!
<br>
&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo $REMDIR
<br>
&nbsp; &nbsp; fi
<br>
}
<br>
#
<br>
#############################
<br>
# Function to list directory 
<br>
# contents either local or
<br>
# remote depending on $MODE
<br>
#############################
<br>
#
<br>
dirlist(){
<br>
&nbsp; &nbsp; if [ &quot;$MODE&quot; = &quot;GET&quot; ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;ftp -ni $HOST &lt;&lt;!
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;user &quot;$LOGINAME&quot; &quot;$PASSWORD&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;cd $REMDIR
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;dir
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;bye
<br>
!
<br>
&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;cd $OPDIR
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;ls -al
<br>
&nbsp; &nbsp; fi
<br>
}
<br>
#
<br>
############################
<br>
# Function to process
<br>
# selection
<br>
############################
<br>
#
<br>
getsel(){
<br>
&nbsp; &nbsp; REDRAW=0
<br>
&nbsp; &nbsp; max=$1
<br>
&nbsp; &nbsp; echo
<br>
&nbsp; &nbsp; echo $N&quot;Enter Selection: (1-$max) &quot;$C
<br>
&nbsp; &nbsp; read sel
<br>
&nbsp; &nbsp; if [ &quot;$sel&quot; = &quot;&quot; ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;sel=&quot;n&quot;
<br>
&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp; case &quot;$sel&quot; in
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;q&quot;)&nbsp; &nbsp; exit;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;a&quot;)&nbsp; &nbsp; TYPE=&quot;ascii&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; REDRAW=1;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;b&quot;)&nbsp; &nbsp; TYPE=&quot;binary&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; REDRAW=1;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;n&quot;)&nbsp; &nbsp; ;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;p&quot;)&nbsp; &nbsp; MODE=&quot;PUT&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; ME=/home/capps/workarea/tony/puftp
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; REDRAW=2;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;g&quot;)&nbsp; &nbsp; MODE=&quot;GET&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; ME=/home/capps/workarea/tony/geftp
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; REDRAW=2;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;h&quot;)&nbsp; &nbsp; help
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; REDRAW=1;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;*)&nbsp; &nbsp; if [ x&quot;${filetype[$sel]}&quot; = &quot;xDIR&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;if [ &quot;$MODE&quot; = &quot;GET&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; if [ &quot;${menuline[$sel]}&quot; = &quot;..&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;NEWREMDIR=$(echo $REMDIR | awk -F\/ '{ \
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;for(cnt=2;cnt&lt;NF;cnt++)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;{
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; printf(&quot;\/%s&quot;,$(cnt))
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;printf(&quot;\n&quot;)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;}')
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;NEWREMDIR=$REMDIR&quot;/&quot;${menuline[$sel]}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; export OPDIR
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; #DEBUG
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; echo ksh $ME $NEWREMDIR
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; read xxx
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; ksh $ME $NEWREMDIR
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; REDRAW=1
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; if [ &quot;${menuline[$sel]}&quot; = &quot;..&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;NEWOPDIR=$(echo $OPDIR | awk -F\/ '{ \
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;for(cnt=2;cnt&lt;NF;cnt++)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;{
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; printf(&quot;\/%s&quot;,$(cnt))
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;printf(&quot;\n&quot;)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;}')
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;NEWOPDIR=$OPDIR&quot;/&quot;${menuline[$sel]}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; export REMDIR
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; #DEBUG
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; echo ksh $ME $NEWOPDIR
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; read xxx
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; ksh $ME $NEWOPDIR
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; REDRAW=1
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; #
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; # &nbsp;Get or Put &nbsp;the file
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; #
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; if [ &quot;$MODE&quot; = &quot;GET&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;getfile ${menuline[$sel]}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;putfile ${menuline[$sel]}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; REDRAW=1
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;fi;;
<br>
&nbsp; &nbsp; esac
<br>
}
<br>

<br>
#
<br>
#############################
<br>
# Function to &quot;get&quot; selected
<br>
# file.
<br>
#############################
<br>
#
<br>
getfile(){
<br>
&nbsp; &nbsp; remotefile=$1
<br>
&nbsp; &nbsp; ftp -ni $HOST &lt;&lt;!&gt; /dev/null 2&gt;&amp;1
<br>
&nbsp; &nbsp; user &quot;$LOGINAME&quot; &quot;$PASSWORD&quot;
<br>
&nbsp; &nbsp; $TYPE
<br>
&nbsp; &nbsp; cd $REMDIR
<br>
&nbsp; &nbsp; lcd $OPDIR
<br>
&nbsp; &nbsp; get $remotefile
<br>
&nbsp; &nbsp; bye
<br>
!
<br>
}
<br>
#
<br>
#############################
<br>
# Function to &quot;put&quot; selected
<br>
# file.
<br>
#############################
<br>
#
<br>
putfile(){
<br>
&nbsp; &nbsp; localfile=$1
<br>
&nbsp; &nbsp; ftp -ni $HOST &lt;&lt;!&gt; /dev/null 2&gt;&amp;1
<br>
&nbsp; &nbsp; user &quot;$LOGINAME&quot; &quot;$PASSWORD&quot;
<br>
&nbsp; &nbsp; $TYPE
<br>
&nbsp; &nbsp; cd $REMDIR
<br>
&nbsp; &nbsp; lcd $OPDIR
<br>
&nbsp; &nbsp; get $localfile
<br>
&nbsp; &nbsp; bye
<br>
!
<br>
}
<br>
#
<br>
############################
<br>
# Function to display help
<br>
############################
<br>
#
<br>
help(){
<br>
&nbsp; &nbsp; tput clear
<br>
&nbsp; &nbsp; cat &lt;&lt;! | more
<br>
#################### FTP MENU SYSTEM HELP SCREEN ######################
<br>

<br>
&nbsp; &nbsp; Key&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Function
<br>
&nbsp; &nbsp; a&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Switch to ASCII mode transfer
<br>
&nbsp; &nbsp; b&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Switch to BINARY mode transfer
<br>
&nbsp; &nbsp; p&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Switch to PUT mode. Send file from
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;Local host, and directory indicated
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;to Remote host.
<br>
&nbsp; &nbsp; g&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Switch to GET mode. Get files from
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;Remote host, and directory indicated
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;and transfer them to the local host.
<br>
&nbsp; &nbsp; n&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; View next screen.
<br>
&nbsp; &nbsp; &lt;Enter&gt;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; View next screen.
<br>
&nbsp; &nbsp; q&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Quit.
<br>
&nbsp; &nbsp; h&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Display this screen.
<br>
&nbsp; &nbsp; &lt;1-15&gt;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Select file or directory. If selection
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;is a directory, then a listing for the
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;new directory is displayed. If it is a 
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;file, then the file is transferred
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;depending on current mode (get or put).
<br>

<br>
!
<br>
}
<br>
#
<br>
###########################
<br>
# Function to set up FTP
<br>
# connection.
<br>
###########################
<br>
#
<br>
setup(){
<br>
&nbsp; &nbsp; tput clear
<br>
&nbsp; &nbsp; cat &lt;&lt;!
<br>
#################### SET UP FTP CONNECTION ######################
<br>

<br>
!
<br>
&nbsp; &nbsp; echo $N&quot;Enter Remote Host Name: &quot;$C
<br>
&nbsp; &nbsp; read HOST
<br>
&nbsp; &nbsp; echo $N&quot;Enter Login Name: &quot;$C
<br>
&nbsp; &nbsp; read LOGINAME
<br>
&nbsp; &nbsp; echo $N&quot;Enter Password: &quot;$C
<br>
&nbsp; &nbsp; stty -echo
<br>
&nbsp; &nbsp; read PASSWORD
<br>
&nbsp; &nbsp; stty echo
<br>
&nbsp; &nbsp; echo
<br>
&nbsp; &nbsp; export LOGINAME PASSWORD HOST
<br>
}
<br>
#
<br>
#######################
<br>
# Main Program
<br>
#######################
<br>
which_echo
<br>
REMIDR=$1
<br>
if [ x&quot;$LOGINAME&quot; = &quot;x&quot; ] || [ x&quot;$HOST&quot; = &quot;x&quot; ] || [ x&quot;$PASSWORD&quot; = &quot;x&quot; ] 
<br>
then
<br>
&nbsp; &nbsp; setup
<br>
fi
<br>
if [ x&quot;$REMDIR&quot; = &quot;x&quot; ]
<br>
then
<br>
&nbsp; &nbsp; REMDIR=$(getcwd | awk '{ print $2 }' | sed s/\&quot;//g)
<br>
fi
<br>
menu
<br>
----------------------------------------------------------------------------------------------------------------------
<br>
************
<br>
* getstuff *
<br>
************
<br>

<br>
cat /etc/group | while read line
<br>
do
<br>
&nbsp; &nbsp; group=$(echo $line | awk -F: '{ print $1 }')
<br>
&nbsp; &nbsp; groupid=$(echo $line | awk -F: '{ print $3 }')
<br>
&nbsp; &nbsp; echo $group &quot; id = &quot;$groupid
<br>
&nbsp; &nbsp; echo $group | awk '{ for(cnt=1;cnt&lt;=length($1);cnt++)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;{
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; printf(&quot;#&quot;)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;}
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;printf(&quot;\n&quot;)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; }'
<br>

<br>
&nbsp; &nbsp; echo &quot;\nMember Users: \n&quot;
<br>
&nbsp; &nbsp; echo $line | awk -F: '{ print $NF }' | tr &quot;,&quot; &quot;\n&quot; &gt; LIST
<br>
&nbsp; &nbsp; cat /etc/passwd | grep &quot;[0-9]:&quot;$groupid&quot;:&quot; | awk -F: '{ print $1 }' &gt;&gt; LIST
<br>
&nbsp; &nbsp; cat LIST | sort -u | pr -5t
<br>
&nbsp; &nbsp; echo &quot;\n&nbsp; &nbsp;  &nbsp; &nbsp;-------------------------- &nbsp; &nbsp;\n&quot;
<br>
done
<br>
-----------------------------------------------------------------------------------------------------------------------
<br>
***********
<br>
* viewjob *
<br>
***********
<br>
#!/usr/bin/ksh
<br>
#****************************************************************************** 
<br>
#
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;BRITISH GAS CUSTOMER 1
<br>
#
<br>
#*******************************************************************************
<br>
# &nbsp; &nbsp; &nbsp; Module Id: &nbsp; &nbsp; &nbsp;viewjob
<br>
# &nbsp; &nbsp; &nbsp; Module Type: &nbsp; &nbsp;Unix Script 
<br>
# &nbsp; &nbsp; &nbsp; Version: &nbsp; &nbsp; &nbsp; &nbsp;v1.0
<br>
# &nbsp; &nbsp; &nbsp; Source Type: &nbsp; &nbsp;UNIX Shell script
<br>
#*******************************************************************************#
<br>
#
<br>
# &nbsp; &nbsp; &nbsp; Purpose:
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; 
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; 
<br>
#&nbsp; &nbsp; Parameters:&nbsp; &nbsp; P1&nbsp; &nbsp; Jobname to investigate
<br>
#
<br>
# &nbsp; &nbsp; &nbsp; Return Codes:
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;Success  &nbsp; &nbsp;0
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp;Error &nbsp;  &nbsp; &nbsp;2
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; Incorrect Usage 100
<br>
#
<br>
#
<br>
#
<br>
#*******************************************************************************
<br>
#
<br>
# &nbsp;Functions: &nbsp;
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;header&nbsp; &nbsp; 
<br>
#
<br>
#
<br>
#*******************************************************************************
<br>

<br>
##
<br>
# Define Variables
<br>
##
<br>
LOGFILES=$(grep &quot;:103:102:&quot; /etc/passwd | awk -F\: '{ print $(NF-1)}')/logging
<br>
JOBNAME=$1
<br>
TODAY=$(date &quot;+%b %d&quot;)
<br>
OPSODLOG=/opt/ultracomp/rboxuser/opsod/log_exec/opsod.log
<br>
BOLD=$(tput smso)
<br>
RESET=$(tput rmso)
<br>
HOST=$(uname -n)
<br>

<br>
##
<br>
# Function Definitions
<br>
##
<br>

<br>
usage(){
<br>
&nbsp; &nbsp; if [ $1 -ne 1 ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo &quot;usage: viewjob &lt;JOBNAME&gt;&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;exit
<br>
&nbsp; &nbsp; fi 
<br>
}
<br>

<br>
header(){
<br>
tput clear
<br>
cat &lt;&lt;!
<br>
Checking Streams for : $JOBNAME on $HOST
<br>

<br>
Key: C=Completed&nbsp; &nbsp; S=Started&nbsp; &nbsp; A=Aborted  &nbsp; &nbsp;J=Pending Start&nbsp; &nbsp;  &nbsp; &nbsp;R=Running
<br>

<br>

<br>
Streams:
<br>

<br>
!
<br>

<br>
cd $LOGFILES
<br>
STREAMS=$(ls -ltr | grep -i $JOBNAME | grep &quot;.msg$&quot; | grep &quot;$TODAY&quot; | awk -F\_ '{ print $NF }' | sed s/&quot;.msg&quot;/&quot;&quot;/g)
<br>
STREAMS=$(echo &quot;$STREAMS&quot; | sort -n | awk '{ printf(&quot;%s &quot;,$1) }')
<br>
echo $STREAMS
<br>
STATUSLINE=&quot;&quot;
<br>
ABORTED=&quot;&quot;
<br>
for STREAM in $STREAMS
<br>
do
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; # Check OPSOD.LOG
<br>
&nbsp; &nbsp; #
<br>
&nbsp; &nbsp; STATUS=$(grep &quot;$JOBNAME&quot; $OPSODLOG | egrep &quot;JOB|STARTED|COMPLETED|ABORTED&quot; | egrep &quot;_00$STREAM | _0$STREAM | _$STREAM&quot; | tail -1 | awk '{ print $3 }')
<br>
&nbsp; &nbsp; case &quot;x$STATUS&quot; in
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;xSTARTED&quot;)&nbsp; &nbsp; echo &quot;S \c&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;STATUSLINE=$STATUSLINE&quot;S &quot;;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;xCOMPLETED&quot;)&nbsp; &nbsp; echo &quot;C \c&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;STATUSLINE=$STATUSLINE&quot;C &quot;;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;xJOB&quot;)&nbsp; &nbsp;  &nbsp; &nbsp;echo &quot;J \c&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;STATUSLINE=$STATUSLINE&quot;J &quot;;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;xABORTED&quot;)&nbsp; &nbsp; echo $BOLD&quot;A&quot;$RESET&quot; \c&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;ABORTED=$ABORTED&quot;$STREAM &quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;STATUSLINE=$STATUSLINE$BOLD&quot;A&quot;$RESET&quot; &quot;;;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&quot;x&quot;)&nbsp; &nbsp;  &nbsp; &nbsp;echo &quot;R \c&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;STATUSLINE=$STATUSLINE&quot;R &quot;;;
<br>
&nbsp; &nbsp; esac&nbsp; &nbsp; 
<br>
&nbsp; &nbsp; if [ $STREAM -gt 9 ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;STATUSLINE=$STATUSLINE&quot; &quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo &quot; \c&quot;
<br>
&nbsp; &nbsp; fi
<br>
done
<br>
if [ x&quot;$ABORTED&quot; = &quot;x&quot; ]
<br>
then
<br>
&nbsp; &nbsp; ABORTED=&quot;NONE&quot;
<br>
fi
<br>
echo
<br>
echo &quot;\n\nABORTED STREAMS: &quot;$ABORTED
<br>
echo
<br>
LOOP=1
<br>
while [ $LOOP -eq 1 ]
<br>
do
<br>
&nbsp; &nbsp; echo &quot;\nView which stream of $JOBNAME ? (Q to quit) : &quot;$(echo $STREAMS | tr &quot; &quot; &quot;,&quot;)
<br>
&nbsp; &nbsp; echo &quot;&gt;&gt; \c&quot;
<br>
&nbsp; &nbsp; read STREAM
<br>
&nbsp; &nbsp; if [ x&quot;$STREAM&quot; = &quot;x&quot; ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo &quot;INVALID SELECTION&quot;
<br>
&nbsp; &nbsp; else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;if [ &quot;$STREAM&quot; = &quot;Q&quot; ] || [ &quot;$STREAM&quot; = &quot;q&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; echo &quot;Viewjob: completed&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; exit
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;VALID=0
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;for CHECK in $STREAMS
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; if [ &quot;$CHECK&quot; = &quot;$STREAM&quot; ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp;  &nbsp; &nbsp;VALID=1
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;done&nbsp; &nbsp; 
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;if [ $VALID -eq 0 ]
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; echo &quot;INVALID SELECTION&quot;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;else
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; FILENAME=$(ls -ltr | grep -i $JOBNAME | egrep &quot;_00$STREAM.msg|_0$STREAM.msg|_$STREAM.msg&quot; | tail -1 | awk '{ print $NF }')
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; echo &quot;VIEWING STREAM: $STREAM FILENAME&quot;$FILENAME
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; view $LOGFILES/$FILENAME
<br>

<br>
&nbsp; &nbsp;  &nbsp; &nbsp;fi
<br>
&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp; tput clear
<br>
&nbsp; &nbsp; cat &lt;&lt;!
<br>
Checking Streams for : $JOBNAME on $HOST
<br>

<br>
Key: C=Completed&nbsp; &nbsp; S=Started&nbsp; &nbsp; A=Aborted  &nbsp; &nbsp;J=Pending Start&nbsp; &nbsp;  &nbsp; &nbsp;R=Running
<br>

<br>

<br>
Streams:
<br>

<br>
!
<br>
&nbsp; &nbsp; echo $STREAMS
<br>
&nbsp; &nbsp; echo &quot;$STATUSLINE&quot;
<br>
&nbsp; &nbsp; echo &quot;\nABORTED STREAMS: &quot;$ABORTED&quot;\n&quot;
<br>
done
<br>
}
<br>

<br>
##
<br>
# Main Program
<br>
##
<br>

<br>
##
<br>
# Check Usage
<br>
## 
<br>

<br>
usage $#
<br>

<br>
##
<br>
# Display header
<br>
##
<br>

<br>
header
<br>
-----------------------------------------------------------------------------------------------------------------------
<br>
*******
<br>
* ten *
<br>
*******
<br>
tenlong(){
<br>
var=$1
<br>
&nbsp; &nbsp; CHKLEN=$(echo $var | wc -c)
<br>
&nbsp; &nbsp; if [ $CHKLEN -ne 11 ]
<br>
&nbsp; &nbsp; then
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;for pad in $(jot $CHKLEN 10)
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;&nbsp; &nbsp; var=&quot;0&quot;$var
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;done
<br>
&nbsp; &nbsp; fi
<br>
&nbsp; &nbsp; echo &quot;$var&quot;
<br>
}
<br>
######################
<br>
# function to &nbsp;provide 
<br>
# numerical lists
<br>
######################
<br>
#
<br>
jot(){
<br>
start=$1
<br>
finish=$2
<br>
if [ $3 ]
<br>
then
<br>
&nbsp; &nbsp; incr=$3
<br>
else
<br>
&nbsp; &nbsp; incr=1
<br>
fi
<br>
if [ $start -lt $finish ]
<br>
then
<br>
&nbsp; &nbsp; while [ $start -le $finish ]
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo $N$start&quot; &quot;$C
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;start=`expr $start + $incr`
<br>
&nbsp; &nbsp; done
<br>
else
<br>
&nbsp; &nbsp; while [ $start -ge $finish ]
<br>
&nbsp; &nbsp; do
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;echo $N$start&quot; &quot;$C
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;start=`expr $start - $incr`
<br>
&nbsp; &nbsp; done
<br>
fi
<br>
echo
<br>
}
<br>
tenlong 1111
<br>
tenlong 221
<br>
tenlong 71111
<br>
tenlong 101111
<br>
tenlong 1991
<br>
-----------------------------------------------------------------------------------------------------------------------
<br>
*************
<br>
* ampod.htm *
<br>
*************
<br>

<br>
&lt;html&gt;
<br>

<br>
&lt;head&gt;
<br>
&lt;meta http-equiv=&quot;Content-Language&quot; content=&quot;en-gb&quot;&gt;
<br>
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=windows-1252&quot;&gt;
<br>
&lt;meta name=&quot;GENERATOR&quot; content=&quot;Microsoft FrontPage 4.0&quot;&gt;
<br>
&lt;meta name=&quot;ProgId&quot; content=&quot;FrontPage.Editor.Document&quot;&gt;
<br>
&lt;title&gt;Ampod Status&lt;/title&gt;
<br>
&lt;meta name=&quot;Microsoft Theme&quot; content=&quot;blends 011&quot;&gt;
<br>
&lt;/head&gt;
<br>

<br>
&lt;body background=&quot;blegtext.gif&quot; bgcolor=&quot;#CCCCCC&quot; text=&quot;#000000&quot; link=&quot;#993300&quot; vlink=&quot;#0000FF&quot; alink=&quot;#FF9900&quot;&gt;
<br>

<br>
&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;
<br>
&lt;p align=&quot;center&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;am.jpg&quot; width=&quot;520&quot; height=&quot;47&quot;&gt;&lt;/p&gt;
<br>
&lt;p align=&quot;center&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;ampodstats.jpg&quot; width=&quot;550&quot; height=&quot;82&quot;&gt;&lt;/p&gt;
<br>
&lt;p align=&quot;center&quot;&gt;&lt;b&gt;Thursday 05 October&lt;/b&gt;&lt;/p&gt;
<br>
&lt;p align=&quot;center&quot;&gt;Last Updated: &lt;b&gt;17:01:00&lt;/b&gt;&lt;/p&gt;
<br>
&lt;p align=&quot;center&quot;&gt;(This page updates every 15 mins - please refresh view
<br>
periodically)&lt;/p&gt;
<br>
&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
&lt;table border=&quot;1&quot; width=&quot;100%&quot; bordercolorlight=&quot;#999999&quot; bordercolordark=&quot;#000000&quot;&gt;
<br>
 &nbsp;&lt;tr&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;40%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;p align=&quot;center&quot;&gt;&lt;b&gt;Reports&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;8%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&lt;b&gt;Status&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;43%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;p align=&quot;center&quot;&gt;&lt;b&gt;Tasks&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;9%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&lt;b&gt;Status&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp;&lt;/tr&gt;
<br>
 &nbsp;&lt;tr&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;40%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;Peer
<br>
 &nbsp; &nbsp; &nbsp;Group Data Report&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;8%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&lt;b&gt;&lt;font size=&quot;1&quot;&gt;COMPLETED&lt;/font&gt;&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;43%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;Current
<br>
 &nbsp; &nbsp; &nbsp;Pre-Payment Suspense Code&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;9%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&lt;b&gt;&lt;font size=&quot;1&quot;&gt;4100000005&lt;/font&gt;&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp;&lt;/tr&gt;
<br>
 &nbsp;&lt;tr&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;40%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;Glenda's
<br>
 &nbsp; &nbsp; &nbsp;Report (Tue)&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;8%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&lt;b&gt;&lt;font size=&quot;1&quot;&gt;NOT RUN TODAY&lt;/font&gt;&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;43%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;Current
<br>
 &nbsp; &nbsp; &nbsp;Suspense Code&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;9%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&lt;b&gt;&lt;font size=&quot;1&quot;&gt;2500000005&lt;/font&gt;&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp;&lt;/tr&gt;
<br>
 &nbsp;&lt;tr&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;40%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;Judy
<br>
 &nbsp; &nbsp; &nbsp;Hardicre's Refund Report (Wed/Fri)&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;8%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&lt;b&gt;&lt;font size=&quot;1&quot;&gt;NOT RUN TODAY&lt;/font&gt;&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;43%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;ADDACS
<br>
 &nbsp; &nbsp; &nbsp;Check&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;9%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&lt;b&gt;&lt;font size=&quot;1&quot;&gt;COMPLETED&lt;/font&gt;&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp;&lt;/tr&gt;
<br>
 &nbsp;&lt;tr&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;40%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;Nick
<br>
 &nbsp; &nbsp; &nbsp;Bates Daily Report&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;8%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&lt;b&gt;&lt;font size=&quot;1&quot;&gt;COMPLETED&lt;/font&gt;&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;43%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;Delete
<br>
 &nbsp; &nbsp; &nbsp;of CU04TB54 &amp;amp; CU04TB82&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;9%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&lt;b&gt;&lt;font size=&quot;1&quot;&gt;COMPLETED&lt;/font&gt;&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp;&lt;/tr&gt;
<br>
 &nbsp;&lt;tr&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;40%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&amp;nbsp;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;8%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&amp;nbsp;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;43%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;Check_ack.sql&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;9%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&lt;b&gt;&lt;font size=&quot;1&quot;&gt;PENDING&lt;/font&gt;&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp;&lt;/tr&gt;
<br>
 &nbsp;&lt;tr&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;40%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&amp;nbsp;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;8%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&amp;nbsp;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;43%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;Batch
<br>
 &nbsp; &nbsp; &nbsp;Predictions AM&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;9%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&lt;b&gt;&lt;font size=&quot;1&quot;&gt;COMPLETED&lt;/font&gt;&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp;&lt;/tr&gt;
<br>
 &nbsp;&lt;tr&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;40%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&amp;nbsp;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;8%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&amp;nbsp;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;43%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;Batch
<br>
 &nbsp; &nbsp; &nbsp;Predictions PM&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;9%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&lt;b&gt;&lt;font size=&quot;1&quot;&gt;COMPLETED&lt;/font&gt;&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp;&lt;/tr&gt;
<br>
 &nbsp;&lt;tr&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;40%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&amp;nbsp;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;8%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&amp;nbsp;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;43%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;Process
<br>
 &nbsp; &nbsp; &nbsp;Edtmarr interface files&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;9%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;&lt;b&gt;&lt;font size=&quot;1&quot;&gt;PENDING&lt;/font&gt;&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp;&lt;/tr&gt;
<br>
&lt;/table&gt;
<br>
&lt;!--mstheme--&gt;&lt;font face=&quot;Trebuchet MS, Arial, Helvetica&quot;&gt;
<br>
&lt;p align=&quot;center&quot;&gt;&lt;b&gt;&lt;font size=&quot;1&quot;&gt;&lt;a href=&quot;file://ose-healthcheck/predictions/index.htm&quot;&gt;Batch
<br>
Predictions Pages&lt;/a&gt;&lt;/font&gt;&lt;/b&gt;&lt;/p&gt;
<br>
&lt;!--mstheme--&gt;&lt;/font&gt;
<br>

<br>
&lt;/body&gt;
<br>

<br>
&lt;/html&gt;
<br>
-------------------------------------------------------------------------------------------------------------------------
<br>
*****************
<br>
* generate_html *
<br>
*****************
<br>

<br>
gen_html(){
<br>
cnt=0
<br>
IPFILE=$1
<br>
TITLE=&quot;Friday&quot;
<br>
cat $IPFILE | while read line
<br>
do
<br>
&nbsp; &nbsp; cnt=$(expr $cnt + 1)
<br>
&nbsp; &nbsp; case $cnt in
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;2)&nbsp; &nbsp; DATE_TIME=$(echo $line | awk '{ print $1&quot; &quot;$2 }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;3)&nbsp; &nbsp; SUSCODE=$(echo $line | awk '{ print $NF }' | sed s/\)//g);;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;8)&nbsp; &nbsp; DDUPLOADS=$(echo $line | awk '{ print $NF }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;9)&nbsp; &nbsp; VDD=$(echo $line | awk '{ print $NF }' | sed s/#//g);;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;10)&nbsp; &nbsp; MREADS=$(echo $line | awk '{ print $NF }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;11)&nbsp; &nbsp; EBILLS=$(echo $line | awk '{ print $NF }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;12)&nbsp; &nbsp; REFUNDS=$(echo $line | awk '{ print $NF }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;13)&nbsp; &nbsp; WELCOME=$(echo $line | awk '{ print $NF }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;14)&nbsp; &nbsp; DBTREC=$(echo $line | awk '{ print $NF }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;15)&nbsp; &nbsp; ACTACC=$(echo $line | awk '{ print $NF }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;16)&nbsp; &nbsp; METRE=$(echo $line | awk '{ print $NF }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;17)&nbsp; &nbsp; WFMS=$(echo $line | awk '{ print $NF }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;18)&nbsp; &nbsp; FORDERS=$(echo $line | awk '{ print $NF }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;19)&nbsp; &nbsp; CPARTRDS=$(echo $line | awk '{ print $NF }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;20)&nbsp; &nbsp; EMR=$(echo $line | awk '{ print $NF }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;21)&nbsp; &nbsp; D10S=$(echo $line | awk '{ print $NF }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;22)&nbsp; &nbsp; D149S=$(echo $line | awk '{ print $NF }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;23)&nbsp; &nbsp; UMSIDS=$(echo $line | awk '{ print $NF }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;24)&nbsp; &nbsp; D4S=$(echo $line | awk '{ print $NF }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;25)&nbsp; &nbsp; CIS=$(echo $line | awk '{ print $NF }');;
<br>
&nbsp; &nbsp;  &nbsp; &nbsp;*)&nbsp; &nbsp; echo &gt; /dev/null;
<br>
&nbsp; &nbsp; esac
<br>
done
<br>
DATE_STAMP=$(grep &quot;This data is correct&quot; $IPFILE)
<br>
cat &lt;&lt;!
<br>
&lt;html&gt;
<br>

<br>
&lt;head&gt;
<br>
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=windows-1252&quot;&gt;
<br>
&lt;meta name=&quot;GENERATOR&quot; content=&quot;Microsoft FrontPage 4.0&quot;&gt;
<br>
&lt;meta name=&quot;ProgId&quot; content=&quot;FrontPage.Editor.Document&quot;&gt;
<br>
&lt;title&gt;$TITLE&lt;/title&gt;
<br>
&lt;meta name=&quot;Microsoft Theme&quot; content=&quot;tmbuddha 011&quot;&gt;
<br>
&lt;/head&gt;
<br>

<br>
&lt;body background bgcolor=&quot;#FFFFFF&quot; text=&quot;#000000&quot; link=&quot;#FF0000&quot; vlink=&quot;#FFD700&quot; alink=&quot;#808080&quot;&gt;
<br>

<br>
&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;
<br>
&lt;div align=&quot;center&quot;&gt;
<br>
 &nbsp;&lt;center&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp;&lt;pre&gt;&lt;font face=&quot;Arial&quot;&gt;&lt;b&gt;&lt;u&gt;&lt;font size=&quot;4&quot;&gt;$DATE_TIME predictions for C/1 Batch&lt;/font&gt;&lt;/u&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/span&gt;&lt;/font&gt;&lt;/pre&gt;
<br>
 &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;/center&gt;
<br>
&lt;/div&gt;
<br>
&lt;div align=&quot;center&quot;&gt;
<br>
 &nbsp;&lt;center&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp;&lt;pre&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;are as follows: (Suspense Code = &lt;b&gt;$SUSCODE&lt;/b&gt;)&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;/center&gt;
<br>
&lt;/div&gt;
<br>
&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
&lt;table border=&quot;1&quot; width=&quot;100%&quot; bordercolorlight=&quot;#CCCCCC&quot; bordercolordark=&quot;#666666&quot;&gt;
<br>
 &nbsp;&lt;tr&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;50%&quot; valign=&quot;top&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;div align=&quot;center&quot;&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;center&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;&lt;u&gt;&lt;b&gt;BATCH PREDICTED VOLUMES &lt;/b&gt;&lt;/u&gt;&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;/center&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;/div&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot;&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;Direct Debit Uploads $DDUPLOADS&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;Value of Direct Debits $VDD&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;Meter Reads $MREADS&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;Estimated bills $EBILLS&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;Refunds $REFUNDS&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;Welcome Letters $WELCOME&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;Debt Recovery Letters $DBTREC&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;Active Accounts $ACTACC&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;Meter Reroutes $METRE&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;WFM's $WFMS&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;Field Orders $FORDERS&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;Counterpart Reads $CPARTRDS&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;Exceptional Meter Reads $EMR&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;Number of D10 Files $D10S&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;Number of D149 Files $D149S&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;Unmapped MSID's $UMSIDS&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;Number of D4 Files $D4S&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre style=&quot;line-height: 100%&quot;&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;Number of Cash items in suspense $CIS&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;/table&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;50%&quot; valign=&quot;top&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;div align=&quot;center&quot;&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;center&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;pre&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;&lt;u&gt;&lt;b&gt;METER READ FILE INFORMATION&lt;/b&gt;&lt;/u&gt;&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;/center&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;/div&gt;
<br>
!
<br>
#
<br>
# Dynamically Generate this bit
<br>
#
<br>
cat $1 | grep &quot;Meter Reads from&quot; | while read line
<br>
do
<br>
&nbsp; &nbsp; part1=$(echo $line | awk '{ print $1&quot; &quot;$2&quot; &quot;$3&quot; &quot;$4 }')
<br>
&nbsp; &nbsp; part2=$(echo $line | awk '{ print $5&quot; &quot;$6&quot; &quot;$7 }')
<br>
cat &lt;&lt;!
<br>
 &nbsp; &nbsp; &nbsp;&lt;address&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;$part1
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;$part2&lt;o:p&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/o:p&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/font&gt;&lt;/span&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;/address&gt;
<br>
!
<br>
done
<br>
cat &lt;&lt;!
<br>
 &nbsp; &nbsp; &nbsp;&lt;p&gt;&amp;nbsp;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp;&lt;/tr&gt;
<br>
&lt;/table&gt;
<br>
&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;
<br>
&lt;div align=&quot;center&quot;&gt;
<br>
 &nbsp;&lt;center&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp;&lt;pre&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;&lt;b&gt;This data is correct as at $DATE_STAMP&lt;/b&gt;.&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
 &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;/center&gt;
<br>
&lt;/div&gt;
<br>
&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
&lt;pre&gt;&lt;span style=&quot;font-size: 10.0pt&quot;&gt;&lt;font face=&quot;Arial&quot;&gt;&lt;o:p&gt;
<br>
&lt;/o:p&gt;
<br>
&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;
<br>
&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
&lt;p align=&quot;center&quot;&gt;&lt;font size=&quot;3&quot;&gt;&lt;a href=&quot;index.htm&quot;&gt;Back to Main Screen&lt;/a&gt;&lt;/font&gt;&lt;/p&gt;
<br>
&lt;/body&gt;
<br>

<br>
&lt;/html&gt;
<br>
!
<br>
}
<br>

<br>
gen_html $1
<br>
-------------------------------------------------------------------------------------------------------------------------
<br>
*************
<br>
* index.htm *
<br>
*************
<br>
&lt;html&gt;
<br>

<br>
&lt;head&gt;
<br>
&lt;meta http-equiv=&quot;Content-Language&quot; content=&quot;en-gb&quot;&gt;
<br>
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=windows-1252&quot;&gt;
<br>
&lt;meta name=&quot;GENERATOR&quot; content=&quot;Microsoft FrontPage 4.0&quot;&gt;
<br>
&lt;meta name=&quot;ProgId&quot; content=&quot;FrontPage.Editor.Document&quot;&gt;
<br>
&lt;title&gt;AM&lt;/title&gt;
<br>
&lt;meta name=&quot;Microsoft Theme&quot; content=&quot;tmbuddha 011&quot;&gt;
<br>
&lt;/head&gt;
<br>

<br>
&lt;body background bgcolor=&quot;#FFFFFF&quot; text=&quot;#000000&quot; link=&quot;#FF0000&quot; vlink=&quot;#FFD700&quot; alink=&quot;#808080&quot;&gt;
<br>

<br>
&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;
<br>
&lt;p align=&quot;center&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;predict.gif&quot; width=&quot;545&quot; height=&quot;68&quot;&gt;&lt;/p&gt;
<br>
&lt;p align=&quot;center&quot;&gt;&lt;b&gt;Week Commencing Tuesday 19 September&lt;/b&gt;&lt;/p&gt;
<br>
&lt;div align=&quot;center&quot;&gt;
<br>
 &nbsp;&lt;center&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
&lt;table border=&quot;1&quot; width=&quot;74%&quot; bordercolorlight=&quot;#CCCCCC&quot; bordercolordark=&quot;#666666&quot;&gt;
<br>
 &nbsp;&lt;tr&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;49%&quot;&gt;&lt;!--msTheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;b&gt;AM&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;51%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;b&gt;PM&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp;&lt;/tr&gt;
<br>
 &nbsp;&lt;tr&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;49%&quot; valign=&quot;top&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot;&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;monam.htm&quot;&gt;Monday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;tueam.htm&quot;&gt;Tuesday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;wedam.htm&quot;&gt;Wednesday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;thuam.htm&quot;&gt;Thursday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;friam.htm&quot;&gt;Friday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;satam.htm&quot;&gt;Saturday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;/table&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;51%&quot; valign=&quot;top&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot;&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;monpm.htm&quot;&gt;Monday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;tuepm.htm&quot;&gt;Tuesday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;wedpm.htm&quot;&gt;Wednesday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;thupm.htm&quot;&gt;Thursday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;fripm.htm&quot;&gt;Friday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;satpm.htm&quot;&gt;Saturday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;/table&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;p&gt;&amp;nbsp;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp;&lt;/tr&gt;
<br>
&lt;/table&gt;
<br>
 &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;/center&gt;
<br>
&lt;/div&gt;
<br>
&lt;p align=&quot;center&quot;&gt;
<br>
&lt;marquee&gt;Click on the links to view the statistics for the required day - AM or
<br>
PM&lt;/marquee&gt;
<br>
&lt;/p&gt;
<br>
&lt;!--mstheme--&gt;&lt;/font&gt;
<br>

<br>
&lt;/body&gt;
<br>

<br>
&lt;/html&gt;
<br>
--------------------------------------------------------------------------------------------------------------------------
<br>
*************
<br>
* index_gen *
<br>
*************
<br>
BASEDIR=/capps/sql_scripts/html_templates
<br>
HOST=&quot;10.16.7.4&quot;
<br>
USERNAME=&quot;osecheck&quot;
<br>
PASSWORD=&quot;osecheck&quot;
<br>
export HOST USERNAME PASSWORD
<br>
DAY=$(date &quot;+%a&quot;)
<br>
DATE=$(date &quot;+%A %d %B&quot;)
<br>

<br>
##
<br>
# Functions
<br>
##
<br>

<br>

<br>
#*******************************************************************************
<br>
#
<br>
# FUNCTION: &nbsp; &nbsp; sender
<br>
#
<br>
# DESCRIPTION:
<br>
# &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Transfer Mondays blank html documents to batch predictions 
<br>
#&nbsp; &nbsp;  &nbsp; &nbsp;intranet directory.
<br>
#
<br>
#
<br>
#*******************************************************************************
<br>
sender(){
<br>
cd $BASEDIR
<br>
HOST=&quot;10.16.7.4&quot;
<br>
ftp -ni $HOST &lt;&lt;! 2&gt; /dev/null
<br>
user &quot;$USERNAME&quot; &quot;$PASSWORD&quot;
<br>
cd Am
<br>
cd predict
<br>
cd html
<br>
mput *.htm
<br>
bye
<br>
!
<br>
}
<br>

<br>

<br>
gen_index(){
<br>
cat &lt;&lt;!&gt; $BASEDIR/index.htm
<br>
&lt;html&gt;
<br>

<br>
&lt;head&gt;
<br>
&lt;meta http-equiv=&quot;Content-Language&quot; content=&quot;en-gb&quot;&gt;
<br>
&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=windows-1252&quot;&gt;
<br>
&lt;meta name=&quot;GENERATOR&quot; content=&quot;Microsoft FrontPage 4.0&quot;&gt;
<br>
&lt;meta name=&quot;ProgId&quot; content=&quot;FrontPage.Editor.Document&quot;&gt;
<br>
&lt;title&gt;Batch Predictions Main Menu&lt;/title&gt;
<br>
&lt;meta name=&quot;Microsoft Theme&quot; content=&quot;tmbuddha 011&quot;&gt;
<br>
&lt;/head&gt;
<br>

<br>
&lt;body background bgcolor=&quot;#FFFFFF&quot; text=&quot;#000000&quot; link=&quot;#FF0000&quot; vlink=&quot;#FFD700&quot; alink=&quot;#808080&quot;&gt;
<br>

<br>
&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;
<br>
&lt;p align=&quot;center&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;ose.gif&quot; width=&quot;452&quot; height=&quot;50&quot;&gt;&lt;/p&gt;
<br>
&lt;p align=&quot;center&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;predict.gif&quot; width=&quot;545&quot; height=&quot;68&quot;&gt;&lt;/p&gt;
<br>
&lt;p align=&quot;center&quot;&gt;&lt;b&gt;Week Commencing $DATE&lt;/b&gt;&lt;/p&gt;
<br>
&lt;div align=&quot;center&quot;&gt;
<br>
 &nbsp;&lt;center&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
&lt;table border=&quot;1&quot; width=&quot;74%&quot; bordercolorlight=&quot;#CCCCCC&quot; bordercolordark=&quot;#666666&quot;&gt;
<br>
 &nbsp;&lt;tr&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;49%&quot;&gt;&lt;!--msTheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;b&gt;AM&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;51%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;b&gt;PM&lt;/b&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp;&lt;/tr&gt;
<br>
 &nbsp;&lt;tr&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;49%&quot; valign=&quot;top&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot;&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;monam.htm&quot;&gt;Monday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;tueam.htm&quot;&gt;Tuesday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;wedam.htm&quot;&gt;Wednesday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;thuam.htm&quot;&gt;Thursday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;friam.htm&quot;&gt;Friday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;satam.htm&quot;&gt;Saturday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;/table&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp;&lt;td width=&quot;51%&quot; valign=&quot;top&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;!--mstheme--&gt;&lt;/font&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; width=&quot;100%&quot;&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;monpm.htm&quot;&gt;Monday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;tuepm.htm&quot;&gt;Tuesday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;wedpm.htm&quot;&gt;Wednesday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;thupm.htm&quot;&gt;Thursday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;fripm.htm&quot;&gt;Friday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;tr&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;td valign=&quot;baseline&quot; width=&quot;42&quot;&gt;&lt;img src=&quot;buddhabul1.gif&quot; width=&quot;16&quot; height=&quot;16&quot; hspace=&quot;13&quot;&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;td valign=&quot;top&quot; width=&quot;100%&quot;&gt;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;a href=&quot;satpm.htm&quot;&gt;Saturday
<br>
 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/a&gt;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;!--msthemelist--&gt;&lt;/td&gt;
<br>
 &nbsp; &nbsp; &nbsp; &nbsp;&lt;/tr&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;!--msthemelist--&gt;&lt;/table&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;
<br>
 &nbsp; &nbsp; &nbsp;&lt;p&gt;&amp;nbsp;&lt;!--mstheme--&gt;&lt;/font&gt;&lt;/td&gt;
<br>
 &nbsp;&lt;/tr&gt;
<br>
&lt;/table&gt;
<br>
 &nbsp;&lt;!--mstheme--&gt;&lt;font face=&quot;Tahoma, Arial, Helvetica&quot;&gt;&lt;/center&gt;
<br>
&lt;/div&gt;
<br>
&lt;p align=&quot;center&quot;&gt;
<br>
&lt;marquee&gt;Click on the links to view the statistics for the required day - AM or
<br>
PM&lt;/marquee&gt;
<br>
&lt;/p&gt;
<br>
&lt;!--mstheme--&gt;&lt;/font&gt;
<br>

<br>
&lt;/body&gt;
<br>

<br>
&lt;/html&gt;
<br>
!
<br>
}
<br>

<br>
gen_index
<br>

<br>
sender
<br>
--------------------------------------------------------------------------------------------------------------------------
<br>
</font>
</td></tr></table>
</td>
</tr>

<form name=reply action="/ExciteMail/message/rs=52893;aff=3AD53470;ck=794868389/uid=1052;sort=-received/1052.html" method=GET>
<tr bgcolor="#999999">
<td align=right><font face=geneva,arial size=-1><a href="javascript:downloadPopup()"><font color="#ffffff"><b>Download</b></font></a>
<input type=submit name=action value="Reply">
<input type=submit name=action value="Reply All">
<input type=submit name=action value="Forward"></font></td>
</tr>
</form><form name=controlbar action="/ExciteMail/message/rs=49418;aff=3AD53470;ck=759984634/uid=1052;sort=-received/1052.html" method=GET>
<tr bgcolor="#ffffff"><td>
<table width="100%" cellpadding=0 cellspacing=0 border="0"><tr>
<td nowrap><font face=geneva,arial size=-1><input type=submit name=action value="Delete"> message or move to <select name=dest1 onChange="moveToFolder(this);">
<option value="Keep">Keep
<option value="Trash">Trash
<option value=>&lt;Add&gt;
<option value=>&lt;Rename&gt;
<option value=>&lt;Delete&gt;
</select> <input type=submit name=move1 value="Move"></font></td><td align=right nowrap>&nbsp;
<font face=geneva,arial size=-1><b>
<a href="/ExciteMail/folder/rs=25868;aff=3AD53470;ck=1244503844/fl=INBOX;sort=-received;start=2/folder.html"><font color="#663399">Inbox</font></a>  
</b></font>
</td></tr></table></td>
</tr>

<input type=hidden name=index value="2">
</form>
<tr bgcolor="#cccccc">
<td align=center><font face=geneva,arial size=-1>
<table width="100%" border=0 cellpadding=2 cellspacing=0><tr bgcolor="#FFFFFF">
<td align=center>&nbsp;</td>
<td><font face=geneva,arial size=-1>&nbsp;customer_serv...</font></td>
<td><font face=geneva,arial size=-1><a href="/ExciteMail/message/rs=59313;aff=3AD53470;ck=1927450821/uid=1077;sort=-received/1077.html"><font color="#663399">VMware Order Confirmation -...</font></a>
</font></td>
<td align=center><font face=geneva,arial size=-1>10/06/01</font></td>
<td align=right><font face=geneva,arial size=-1><b><a href="/ExciteMail/message/rs=63913;aff=3AD53470;ck=1103197624/uid=1077;sort=-received/1077.html"><font color="#663399">Prev</font></a></b></font></td>
</tr>
<tr bgcolor="#cccccc">
<td align=center>&nbsp;</td>
<td><font face=geneva,arial size=-1>&nbsp;Diep Le</font></td>
<td><font face=geneva,arial size=-1>useful scripts
</font></td>
<td align=center><font face=geneva,arial size=-1>28/03/01</font></td>
<td align=right><font face=geneva,arial size=-1><b>Current</b></font></td>
</tr>
<tr bgcolor="#FFFFFF">
<td align=center><img src="http://imgbox.eimg.com/img/diam_red.gif		"></td>
<td><font face=geneva,arial size=-1>&nbsp;<b>Diep.Le@equ...</b></font></td>
<td><font face=geneva,arial size=-1><a href="/ExciteMail/message/rs=52879;aff=3AD53470;ck=1834503523/uid=1049;sort=-received/1049.html"><font color="#663399"><b>Useful bits</b></font></a>
</font></td>
<td align=center><font face=geneva,arial size=-1><b>14/03/01</b></font></td>
<td align=right><font face=geneva,arial size=-1><b><a href="/ExciteMail/message/rs=2256;aff=3AD53470;ck=612517071/uid=1049;sort=-received/1049.html"><font color="#663399">Next</font></a></b></font></td>
</tr>
</table>
</font>
</td></tr>

<tr bgcolor="#OO3399">
<td>
<table width="100%" border=0 height=9 cellpadding=0 cellspacing=0>
<tr><td></td></tr></table>
</td></tr><script language=javascript>
function openPlannerWindow(purl,pheight,pwidth,scroll) {newPlannerWindow=window.open(purl,"TSS",'"alwaysLowered=0,alwaysRaised=yes,dependent=no,directories=0,fullscreen=0,hotkeys=1,location=0,menubar=0,scrollbars='+scroll+',resizable=1,titlebar=1,toolbar=0,z-lock=0,height='+pheight+',width='+pwidth+'"');
setTimeout("if (!newPlannerWindow.closed) newPlannerWindow.focus()", 500);
AddPopup("TSS", newPlannerWindow);
}
</script>
</table>
</td>
</tr>
</table>
</center>



<center>
<table border=0 width="98%" cellspacing=0 cellpadding=3>
<tr><td bgcolor="#ffffff">
<table border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr></table></td>
</tr>

<tr height=20>
<td align=center valign=middle bgcolor=
#cccccc
nowrap>
<font face=geneva,arial size=-1><b><a href="http://www.excite.co.uk/mobile/">Get This Email On Your Mobile Phone - <font color=red>New!</font></a> </font></b>
</td></tr>

</table>
</center>
<center>

<p>
<font face=geneva,arial size=-1>Powered by InterMail from 
<a href="http://www.software.com" target="_new">Software.com</a></font><br>


<p>
<center>

</center>
<FONT face=geneva,arial size="-1">
<FONT color=red><I> </I></FONT><A
href="" target="_new"></A>&nbsp;
<A href="" target="_new"></A>&nbsp;
<A href="http://www.excite.co.uk/feedback/" target="_new">Feedback</A>&nbsp;
<A href="http://www.excite.co.uk/info/linking/" target="_new">Bookmark Excite</A>&nbsp;
<A href="http://www.excite.co.uk/info/add_url/" target="_new">Add URL</A>
</FONT>
<BR>
<FONT face=verdana,geneva,arial size="-2">Copyright &copy; 1998-2001 Excite UK  Ltd. All rights reserved.<BR>
<A href="http://www.excite.co.uk/info/disclaimer/" target="_new">Disclaimer</A>
and <A href="http://www.excite.co.uk/info/privacy_policy/" target="_new">Privacy Statement</A>
</FONT>
</center>
</body>
</html>
